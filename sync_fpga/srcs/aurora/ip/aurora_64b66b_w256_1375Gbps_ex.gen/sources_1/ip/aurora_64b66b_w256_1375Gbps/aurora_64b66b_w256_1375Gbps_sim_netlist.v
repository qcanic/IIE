// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.2 (lin64) Build 3671981 Fri Oct 14 04:59:54 MDT 2022
// Date        : Wed Sep 11 11:42:56 2024
// Host        : rute-I620-G30 running 64-bit Ubuntu 20.04.5 LTS
// Command     : write_verilog -force -mode funcsim
//               /home/E/likai/mba-sim-dev-0.0.13-ntt/fpga/sync_fpga/srcs/aurora/ip/aurora_64b66b_w256_1375Gbps_ex.gen/sources_1/ip/aurora_64b66b_w256_1375Gbps/aurora_64b66b_w256_1375Gbps_sim_netlist.v
// Design      : aurora_64b66b_w256_1375Gbps
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcu280-fsvh2892-2L-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* EGW_IS_PARENT_IP = "1" *) (* X_CORE_INFO = "aurora_64b66b_v12_0_10, Coregen v14.3_ip3, Number of lanes = 4, Line rate is double25.0Gbps, Reference Clock is double156.25MHz, Interface is Streaming, Flow Control is None and is operating in DUPLEX configuration" *) 
(* NotValidForBitStream *)
module aurora_64b66b_w256_1375Gbps
   (s_axi_tx_tdata,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    refclk1_in,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    mmcm_not_locked,
    user_clk,
    sync_clk,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_pll_lock,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_qplllock_quad1_in,
    gt_qpllrefclklost_quad1,
    gt_to_common_qpllreset_out,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_awaddr_lane1,
    s_axi_awvalid_lane1,
    s_axi_awready_lane1,
    s_axi_awaddr_lane2,
    s_axi_awvalid_lane2,
    s_axi_awready_lane2,
    s_axi_awaddr_lane3,
    s_axi_awvalid_lane3,
    s_axi_awready_lane3,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_wdata_lane1,
    s_axi_wstrb_lane1,
    s_axi_wvalid_lane1,
    s_axi_wready_lane1,
    s_axi_bvalid_lane1,
    s_axi_bresp_lane1,
    s_axi_bready_lane1,
    s_axi_wdata_lane2,
    s_axi_wstrb_lane2,
    s_axi_wvalid_lane2,
    s_axi_wready_lane2,
    s_axi_bvalid_lane2,
    s_axi_bresp_lane2,
    s_axi_bready_lane2,
    s_axi_wdata_lane3,
    s_axi_wstrb_lane3,
    s_axi_wvalid_lane3,
    s_axi_wready_lane3,
    s_axi_bvalid_lane3,
    s_axi_bresp_lane3,
    s_axi_bready_lane3,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_araddr_lane1,
    s_axi_arvalid_lane1,
    s_axi_arready_lane1,
    s_axi_araddr_lane2,
    s_axi_arvalid_lane2,
    s_axi_arready_lane2,
    s_axi_araddr_lane3,
    s_axi_arvalid_lane3,
    s_axi_arready_lane3,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rdata_lane1,
    s_axi_rvalid_lane1,
    s_axi_rresp_lane1,
    s_axi_rready_lane1,
    s_axi_rdata_lane2,
    s_axi_rvalid_lane2,
    s_axi_rresp_lane2,
    s_axi_rready_lane2,
    s_axi_rdata_lane3,
    s_axi_rvalid_lane3,
    s_axi_rresp_lane3,
    s_axi_rready_lane3,
    init_clk,
    link_reset_out,
    gt_powergood,
    sys_reset_out,
    bufg_gt_clr_out,
    tx_out_clk);
  input [0:255]s_axi_tx_tdata;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:255]m_axi_rx_tdata;
  output m_axi_rx_tvalid;
  input [0:3]rxp;
  input [0:3]rxn;
  output [0:3]txp;
  output [0:3]txn;
  input refclk1_in;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:3]lane_up;
  input mmcm_not_locked;
  input user_clk;
  input sync_clk;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output gt_pll_lock;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_qplllock_quad1_in;
  input gt_qpllrefclklost_quad1;
  output gt_to_common_qpllreset_out;
  input [31:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_awaddr_lane1;
  input s_axi_awvalid_lane1;
  output s_axi_awready_lane1;
  input [31:0]s_axi_awaddr_lane2;
  input s_axi_awvalid_lane2;
  output s_axi_awready_lane2;
  input [31:0]s_axi_awaddr_lane3;
  input s_axi_awvalid_lane3;
  output s_axi_awready_lane3;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output s_axi_bvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  input [31:0]s_axi_wdata_lane1;
  input [3:0]s_axi_wstrb_lane1;
  input s_axi_wvalid_lane1;
  output s_axi_wready_lane1;
  output s_axi_bvalid_lane1;
  output [1:0]s_axi_bresp_lane1;
  input s_axi_bready_lane1;
  input [31:0]s_axi_wdata_lane2;
  input [3:0]s_axi_wstrb_lane2;
  input s_axi_wvalid_lane2;
  output s_axi_wready_lane2;
  output s_axi_bvalid_lane2;
  output [1:0]s_axi_bresp_lane2;
  input s_axi_bready_lane2;
  input [31:0]s_axi_wdata_lane3;
  input [3:0]s_axi_wstrb_lane3;
  input s_axi_wvalid_lane3;
  output s_axi_wready_lane3;
  output s_axi_bvalid_lane3;
  output [1:0]s_axi_bresp_lane3;
  input s_axi_bready_lane3;
  input [31:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  input [31:0]s_axi_araddr_lane1;
  input s_axi_arvalid_lane1;
  output s_axi_arready_lane1;
  input [31:0]s_axi_araddr_lane2;
  input s_axi_arvalid_lane2;
  output s_axi_arready_lane2;
  input [31:0]s_axi_araddr_lane3;
  input s_axi_arvalid_lane3;
  output s_axi_arready_lane3;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output [31:0]s_axi_rdata_lane1;
  output s_axi_rvalid_lane1;
  output [1:0]s_axi_rresp_lane1;
  input s_axi_rready_lane1;
  output [31:0]s_axi_rdata_lane2;
  output s_axi_rvalid_lane2;
  output [1:0]s_axi_rresp_lane2;
  input s_axi_rready_lane2;
  output [31:0]s_axi_rdata_lane3;
  output s_axi_rvalid_lane3;
  output [1:0]s_axi_rresp_lane3;
  input s_axi_rready_lane3;
  input init_clk;
  output link_reset_out;
  output [3:0]gt_powergood;
  output sys_reset_out;
  output bufg_gt_clr_out;
  output tx_out_clk;

  wire \<const0> ;
  wire bufg_gt_clr_out;
  wire channel_up;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire hard_err;
  wire init_clk;
  wire [0:3]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked;
  wire pma_init;
  wire power_down;
  wire refclk1_in;
  wire reset_pb;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [31:0]s_axi_araddr;
  wire [31:0]s_axi_araddr_lane1;
  wire [31:0]s_axi_araddr_lane2;
  wire [31:0]s_axi_araddr_lane3;
  wire s_axi_arready;
  wire s_axi_arready_lane1;
  wire s_axi_arready_lane2;
  wire s_axi_arready_lane3;
  wire s_axi_arvalid;
  wire s_axi_arvalid_lane1;
  wire s_axi_arvalid_lane2;
  wire s_axi_arvalid_lane3;
  wire [31:0]s_axi_awaddr;
  wire [31:0]s_axi_awaddr_lane1;
  wire [31:0]s_axi_awaddr_lane2;
  wire [31:0]s_axi_awaddr_lane3;
  wire s_axi_awready;
  wire s_axi_awready_lane1;
  wire s_axi_awready_lane2;
  wire s_axi_awready_lane3;
  wire s_axi_awvalid;
  wire s_axi_awvalid_lane1;
  wire s_axi_awvalid_lane2;
  wire s_axi_awvalid_lane3;
  wire s_axi_bready;
  wire s_axi_bready_lane1;
  wire s_axi_bready_lane2;
  wire s_axi_bready_lane3;
  wire s_axi_bvalid;
  wire s_axi_bvalid_lane1;
  wire s_axi_bvalid_lane2;
  wire s_axi_bvalid_lane3;
  wire [15:0]\^s_axi_rdata ;
  wire [15:0]\^s_axi_rdata_lane1 ;
  wire [15:0]\^s_axi_rdata_lane2 ;
  wire [15:0]\^s_axi_rdata_lane3 ;
  wire s_axi_rready;
  wire s_axi_rready_lane1;
  wire s_axi_rready_lane2;
  wire s_axi_rready_lane3;
  wire s_axi_rvalid;
  wire s_axi_rvalid_lane1;
  wire s_axi_rvalid_lane2;
  wire s_axi_rvalid_lane3;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [31:0]s_axi_wdata;
  wire [31:0]s_axi_wdata_lane1;
  wire [31:0]s_axi_wdata_lane2;
  wire [31:0]s_axi_wdata_lane3;
  wire s_axi_wready;
  wire s_axi_wready_lane1;
  wire s_axi_wready_lane2;
  wire s_axi_wready_lane3;
  wire s_axi_wvalid;
  wire s_axi_wvalid_lane1;
  wire s_axi_wvalid_lane2;
  wire s_axi_wvalid_lane3;
  wire soft_err;
  wire sync_clk;
  wire sys_reset_out;
  wire tx_out_clk;
  wire [0:3]txn;
  wire [0:3]txp;
  wire user_clk;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_lane1_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_lane2_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_lane3_UNCONNECTED;
  wire [31:16]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [31:16]NLW_inst_s_axi_rdata_lane1_UNCONNECTED;
  wire [31:16]NLW_inst_s_axi_rdata_lane2_UNCONNECTED;
  wire [31:16]NLW_inst_s_axi_rdata_lane3_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_lane1_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_lane2_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_lane3_UNCONNECTED;

  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bresp_lane1[1] = \<const0> ;
  assign s_axi_bresp_lane1[0] = \<const0> ;
  assign s_axi_bresp_lane2[1] = \<const0> ;
  assign s_axi_bresp_lane2[0] = \<const0> ;
  assign s_axi_bresp_lane3[1] = \<const0> ;
  assign s_axi_bresp_lane3[0] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15:0] = \^s_axi_rdata [15:0];
  assign s_axi_rdata_lane1[31] = \<const0> ;
  assign s_axi_rdata_lane1[30] = \<const0> ;
  assign s_axi_rdata_lane1[29] = \<const0> ;
  assign s_axi_rdata_lane1[28] = \<const0> ;
  assign s_axi_rdata_lane1[27] = \<const0> ;
  assign s_axi_rdata_lane1[26] = \<const0> ;
  assign s_axi_rdata_lane1[25] = \<const0> ;
  assign s_axi_rdata_lane1[24] = \<const0> ;
  assign s_axi_rdata_lane1[23] = \<const0> ;
  assign s_axi_rdata_lane1[22] = \<const0> ;
  assign s_axi_rdata_lane1[21] = \<const0> ;
  assign s_axi_rdata_lane1[20] = \<const0> ;
  assign s_axi_rdata_lane1[19] = \<const0> ;
  assign s_axi_rdata_lane1[18] = \<const0> ;
  assign s_axi_rdata_lane1[17] = \<const0> ;
  assign s_axi_rdata_lane1[16] = \<const0> ;
  assign s_axi_rdata_lane1[15:0] = \^s_axi_rdata_lane1 [15:0];
  assign s_axi_rdata_lane2[31] = \<const0> ;
  assign s_axi_rdata_lane2[30] = \<const0> ;
  assign s_axi_rdata_lane2[29] = \<const0> ;
  assign s_axi_rdata_lane2[28] = \<const0> ;
  assign s_axi_rdata_lane2[27] = \<const0> ;
  assign s_axi_rdata_lane2[26] = \<const0> ;
  assign s_axi_rdata_lane2[25] = \<const0> ;
  assign s_axi_rdata_lane2[24] = \<const0> ;
  assign s_axi_rdata_lane2[23] = \<const0> ;
  assign s_axi_rdata_lane2[22] = \<const0> ;
  assign s_axi_rdata_lane2[21] = \<const0> ;
  assign s_axi_rdata_lane2[20] = \<const0> ;
  assign s_axi_rdata_lane2[19] = \<const0> ;
  assign s_axi_rdata_lane2[18] = \<const0> ;
  assign s_axi_rdata_lane2[17] = \<const0> ;
  assign s_axi_rdata_lane2[16] = \<const0> ;
  assign s_axi_rdata_lane2[15:0] = \^s_axi_rdata_lane2 [15:0];
  assign s_axi_rdata_lane3[31] = \<const0> ;
  assign s_axi_rdata_lane3[30] = \<const0> ;
  assign s_axi_rdata_lane3[29] = \<const0> ;
  assign s_axi_rdata_lane3[28] = \<const0> ;
  assign s_axi_rdata_lane3[27] = \<const0> ;
  assign s_axi_rdata_lane3[26] = \<const0> ;
  assign s_axi_rdata_lane3[25] = \<const0> ;
  assign s_axi_rdata_lane3[24] = \<const0> ;
  assign s_axi_rdata_lane3[23] = \<const0> ;
  assign s_axi_rdata_lane3[22] = \<const0> ;
  assign s_axi_rdata_lane3[21] = \<const0> ;
  assign s_axi_rdata_lane3[20] = \<const0> ;
  assign s_axi_rdata_lane3[19] = \<const0> ;
  assign s_axi_rdata_lane3[18] = \<const0> ;
  assign s_axi_rdata_lane3[17] = \<const0> ;
  assign s_axi_rdata_lane3[16] = \<const0> ;
  assign s_axi_rdata_lane3[15:0] = \^s_axi_rdata_lane3 [15:0];
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rresp_lane1[1] = \<const0> ;
  assign s_axi_rresp_lane1[0] = \<const0> ;
  assign s_axi_rresp_lane2[1] = \<const0> ;
  assign s_axi_rresp_lane2[0] = \<const0> ;
  assign s_axi_rresp_lane3[1] = \<const0> ;
  assign s_axi_rresp_lane3[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* BACKWARD_COMP_MODE1 = "1'b0" *) 
  (* BACKWARD_COMP_MODE2 = "1'b0" *) 
  (* BACKWARD_COMP_MODE3 = "1'b0" *) 
  (* CC_FREQ_FACTOR = "5'b11000" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EXAMPLE_SIMULATION = "0" *) 
  (* GTY_CRC_NO_ZERO_PAD = "0" *) 
  (* INTER_CB_GAP = "5'b01001" *) 
  (* SCRAMBLER_SEED = "58'b1010101010101010101010101010101010101010101010101010101010" *) 
  (* SIM_GTXRESET_SPEEDUP = "0" *) 
  (* wait_for_fifo_wr_rst_busy_value = "6'b100000" *) 
  aurora_64b66b_w256_1375Gbps_core inst
       (.bufg_gt_clr_out(bufg_gt_clr_out),
        .channel_up(channel_up),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_qpllrefclklost_quad1(1'b0),
        .gt_refclk1(refclk1_in),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up(lane_up),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked(mmcm_not_locked),
        .pma_init(pma_init),
        .power_down(power_down),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_araddr[11:2],1'b0,1'b0}),
        .s_axi_araddr_lane1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_araddr_lane1[11:2],1'b0,1'b0}),
        .s_axi_araddr_lane2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_araddr_lane2[11:2],1'b0,1'b0}),
        .s_axi_araddr_lane3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_araddr_lane3[11:2],1'b0,1'b0}),
        .s_axi_arready(s_axi_arready),
        .s_axi_arready_lane1(s_axi_arready_lane1),
        .s_axi_arready_lane2(s_axi_arready_lane2),
        .s_axi_arready_lane3(s_axi_arready_lane3),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_arvalid_lane1(s_axi_arvalid_lane1),
        .s_axi_arvalid_lane2(s_axi_arvalid_lane2),
        .s_axi_arvalid_lane3(s_axi_arvalid_lane3),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_awaddr[11:2],1'b0,1'b0}),
        .s_axi_awaddr_lane1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_awaddr_lane1[11:2],1'b0,1'b0}),
        .s_axi_awaddr_lane2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_awaddr_lane2[11:2],1'b0,1'b0}),
        .s_axi_awaddr_lane3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_awaddr_lane3[11:2],1'b0,1'b0}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awready_lane1(s_axi_awready_lane1),
        .s_axi_awready_lane2(s_axi_awready_lane2),
        .s_axi_awready_lane3(s_axi_awready_lane3),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_awvalid_lane1(s_axi_awvalid_lane1),
        .s_axi_awvalid_lane2(s_axi_awvalid_lane2),
        .s_axi_awvalid_lane3(s_axi_awvalid_lane3),
        .s_axi_bready(s_axi_bready),
        .s_axi_bready_lane1(s_axi_bready_lane1),
        .s_axi_bready_lane2(s_axi_bready_lane2),
        .s_axi_bready_lane3(s_axi_bready_lane3),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bresp_lane1(NLW_inst_s_axi_bresp_lane1_UNCONNECTED[1:0]),
        .s_axi_bresp_lane2(NLW_inst_s_axi_bresp_lane2_UNCONNECTED[1:0]),
        .s_axi_bresp_lane3(NLW_inst_s_axi_bresp_lane3_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_bvalid_lane1(s_axi_bvalid_lane1),
        .s_axi_bvalid_lane2(s_axi_bvalid_lane2),
        .s_axi_bvalid_lane3(s_axi_bvalid_lane3),
        .s_axi_rdata({NLW_inst_s_axi_rdata_UNCONNECTED[31:16],\^s_axi_rdata }),
        .s_axi_rdata_lane1({NLW_inst_s_axi_rdata_lane1_UNCONNECTED[31:16],\^s_axi_rdata_lane1 }),
        .s_axi_rdata_lane2({NLW_inst_s_axi_rdata_lane2_UNCONNECTED[31:16],\^s_axi_rdata_lane2 }),
        .s_axi_rdata_lane3({NLW_inst_s_axi_rdata_lane3_UNCONNECTED[31:16],\^s_axi_rdata_lane3 }),
        .s_axi_rready(s_axi_rready),
        .s_axi_rready_lane1(s_axi_rready_lane1),
        .s_axi_rready_lane2(s_axi_rready_lane2),
        .s_axi_rready_lane3(s_axi_rready_lane3),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rresp_lane1(NLW_inst_s_axi_rresp_lane1_UNCONNECTED[1:0]),
        .s_axi_rresp_lane2(NLW_inst_s_axi_rresp_lane2_UNCONNECTED[1:0]),
        .s_axi_rresp_lane3(NLW_inst_s_axi_rresp_lane3_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_rvalid_lane1(s_axi_rvalid_lane1),
        .s_axi_rvalid_lane2(s_axi_rvalid_lane2),
        .s_axi_rvalid_lane3(s_axi_rvalid_lane3),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_wdata[15:0]}),
        .s_axi_wdata_lane1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_wdata_lane1[15:0]}),
        .s_axi_wdata_lane2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_wdata_lane2[15:0]}),
        .s_axi_wdata_lane3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,s_axi_wdata_lane3[15:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wready_lane1(s_axi_wready_lane1),
        .s_axi_wready_lane2(s_axi_wready_lane2),
        .s_axi_wready_lane3(s_axi_wready_lane3),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wstrb_lane1({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wstrb_lane2({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wstrb_lane3({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(s_axi_wvalid),
        .s_axi_wvalid_lane1(s_axi_wvalid_lane1),
        .s_axi_wvalid_lane2(s_axi_wvalid_lane2),
        .s_axi_wvalid_lane3(s_axi_wvalid_lane3),
        .soft_err(soft_err),
        .sync_clk(sync_clk),
        .sys_reset_out(sys_reset_out),
        .sysreset_to_core(reset_pb),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_AURORA_LANE
   (lane_up_flop_i,
    rx_reset_i_3,
    rst_pma_init_usrclk,
    rx_pe_data_v_i,
    got_idles_i,
    soft_err_i,
    RXPOLARITY_IN,
    CHECK_POLARITY_IN,
    TXHEADER_IN,
    hard_err_i,
    RXDATAVALID_IN_REG,
    \remote_rdy_cntr_reg[1] ,
    TXDATA_IN,
    \RX_PE_DATA_reg[0] ,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    ILLEGAL_BTF_reg,
    RESET,
    ready_r_reg0,
    RX_HEADER_0_REG_reg,
    rx_header_1_i_3,
    \RX_DATA_REG_reg[0] ,
    Q,
    RXHEADER_OUT_ERR,
    rxdatavalid_to_lanes_i,
    RXLOSSOFSYNC_OUT,
    RESET_LANES,
    txdatavalid_symgen_i,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg,
    HARD_ERR0__0,
    \TX_DATA_reg[59] ,
    D,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output rx_reset_i_3;
  output rst_pma_init_usrclk;
  output [0:0]rx_pe_data_v_i;
  output [0:0]got_idles_i;
  output [0:0]soft_err_i;
  output RXPOLARITY_IN;
  output CHECK_POLARITY_IN;
  output [1:0]TXHEADER_IN;
  output [0:0]hard_err_i;
  output RXDATAVALID_IN_REG;
  output \remote_rdy_cntr_reg[1] ;
  output [63:0]TXDATA_IN;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input ILLEGAL_BTF_reg;
  input RESET;
  input ready_r_reg0;
  input RX_HEADER_0_REG_reg;
  input rx_header_1_i_3;
  input \RX_DATA_REG_reg[0] ;
  input [63:0]Q;
  input RXHEADER_OUT_ERR;
  input rxdatavalid_to_lanes_i;
  input RXLOSSOFSYNC_OUT;
  input RESET_LANES;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg;
  input HARD_ERR0__0;
  input \TX_DATA_reg[59] ;
  input [3:0]D;
  input \TX_DATA_reg[63] ;
  input [55:0]\TX_DATA_reg[7] ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire CHECK_POLARITY_IN;
  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire HARD_ERR0__0;
  wire ILLEGAL_BTF_reg;
  wire [63:0]Q;
  wire RESET;
  wire RESET_LANES;
  wire RXDATAVALID_IN_REG;
  wire RXHEADER_OUT_ERR;
  wire RXLOSSOFSYNC_OUT;
  wire RXPOLARITY_IN;
  wire \RX_DATA_REG_reg[0] ;
  wire RX_HEADER_0_REG_reg;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire [63:0]TXDATA_IN;
  wire [1:0]TXHEADER_IN;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire \TX_DATA_reg[63] ;
  wire [55:0]\TX_DATA_reg[7] ;
  wire TX_HEADER_1_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]got_idles_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire lane_init_sm_i_n_5;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[1] ;
  wire rst_pma_init_usrclk;
  wire rx_header_1_i_3;
  wire [0:0]rx_pe_data_v_i;
  wire rx_reset_i_3;
  wire rxdatavalid_to_lanes_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire [0:0]soft_err_i;
  wire txdatavalid_symgen_i;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_ERR_DETECT_21 err_detect_i
       (.HARD_ERR_reg_0(lane_init_sm_i_n_5),
        .RXHEADER_OUT_ERR(RXHEADER_OUT_ERR),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .illegal_btf_i(illegal_btf_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .soft_err_i(soft_err_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_22 lane_init_sm_i
       (.CHECK_POLARITY_IN(CHECK_POLARITY_IN),
        .ENABLE_ERR_DETECT_reg_0(lane_init_sm_i_n_5),
        .HARD_ERR0__0(HARD_ERR0__0),
        .RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT(RXLOSSOFSYNC_OUT),
        .RXPOLARITY_IN(RXPOLARITY_IN),
        .enable_err_detect_i(enable_err_detect_i),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r_reg_0(ILLEGAL_BTF_reg),
        .rst_r_reg_0(rx_reset_i_3),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_DEC_23 sym_dec_i
       (.ILLEGAL_BTF_reg_0(ILLEGAL_BTF_reg),
        .Q(Q),
        .RXDATAVALID_IN_REG_reg_0(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .RX_HEADER_0_REG_reg_0(RX_HEADER_0_REG_reg),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .got_idles_i(got_idles_i),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[1]_0 (\remote_rdy_cntr_reg[1] ),
        .rx_header_1_i_3(rx_header_1_i_3),
        .\rx_na_idles_cntr_reg[0]_0 (lane_up_flop_i),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_GEN_24 sym_gen_i
       (.D(D),
        .GEN_CH_BOND(GEN_CH_BOND),
        .RESET(RESET),
        .TXDATA_IN(TXDATA_IN),
        .TXHEADER_IN(TXHEADER_IN),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_AURORA_LANE" *) 
module aurora_64b66b_w256_1375Gbps_AURORA_LANE_0
   (lane_up_flop_i,
    rx_reset_i_2,
    rst_pma_init_usrclk,
    rx_pe_data_v_i,
    got_idles_i,
    RXPOLARITY_IN_LANE1,
    CHECK_POLARITY_IN_LANE1,
    TXHEADER_IN_LANE1,
    hard_err_i,
    \remote_rdy_cntr_reg[1] ,
    lane_up_flop_i_0,
    SOFT_ERR_reg,
    TXDATA_IN_LANE1,
    \RX_PE_DATA_reg[0] ,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    RX_IDLE_reg,
    RESET,
    ready_r_reg0,
    RX_HEADER_0_REG_reg,
    rx_header_1_i_2,
    \RX_DATA_REG_reg[0] ,
    \RX_DATA_REG_reg[63] ,
    RXHEADER_OUT_ERR_LANE1,
    soft_err_reg,
    RXDATAVALID_IN_REG,
    RXLOSSOFSYNC_OUT_LANE1,
    RESET_LANES,
    txdatavalid_symgen_i_lane1,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg,
    \chan_bond_timer_reg[0] ,
    \chan_bond_timer_reg[0]_0 ,
    \chan_bond_timer_reg[0]_1 ,
    CHANNEL_UP_TX_IF,
    HARD_ERR0__0,
    rxdatavalid_to_lanes_i,
    \TX_DATA_reg[59] ,
    D,
    \TX_DATA_reg[63] ,
    Q,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output rx_reset_i_2;
  output rst_pma_init_usrclk;
  output [0:0]rx_pe_data_v_i;
  output [0:0]got_idles_i;
  output RXPOLARITY_IN_LANE1;
  output CHECK_POLARITY_IN_LANE1;
  output [1:0]TXHEADER_IN_LANE1;
  output [0:0]hard_err_i;
  output \remote_rdy_cntr_reg[1] ;
  output lane_up_flop_i_0;
  output SOFT_ERR_reg;
  output [63:0]TXDATA_IN_LANE1;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input RX_IDLE_reg;
  input RESET;
  input ready_r_reg0;
  input RX_HEADER_0_REG_reg;
  input rx_header_1_i_2;
  input \RX_DATA_REG_reg[0] ;
  input [63:0]\RX_DATA_REG_reg[63] ;
  input RXHEADER_OUT_ERR_LANE1;
  input [2:0]soft_err_reg;
  input RXDATAVALID_IN_REG;
  input RXLOSSOFSYNC_OUT_LANE1;
  input RESET_LANES;
  input txdatavalid_symgen_i_lane1;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg;
  input \chan_bond_timer_reg[0] ;
  input \chan_bond_timer_reg[0]_0 ;
  input \chan_bond_timer_reg[0]_1 ;
  input CHANNEL_UP_TX_IF;
  input HARD_ERR0__0;
  input rxdatavalid_to_lanes_i;
  input \TX_DATA_reg[59] ;
  input [3:0]D;
  input \TX_DATA_reg[63] ;
  input [55:0]Q;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire CHANNEL_UP_TX_IF;
  wire CHECK_POLARITY_IN_LANE1;
  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire HARD_ERR0__0;
  wire [55:0]Q;
  wire RESET;
  wire RESET_LANES;
  wire RXDATAVALID_IN_REG;
  wire RXHEADER_OUT_ERR_LANE1;
  wire RXLOSSOFSYNC_OUT_LANE1;
  wire RXPOLARITY_IN_LANE1;
  wire \RX_DATA_REG_reg[0] ;
  wire [63:0]\RX_DATA_REG_reg[63] ;
  wire RX_HEADER_0_REG_reg;
  wire RX_IDLE_reg;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire SOFT_ERR_reg;
  wire [63:0]TXDATA_IN_LANE1;
  wire [1:0]TXHEADER_IN_LANE1;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire \TX_DATA_reg[63] ;
  wire TX_HEADER_1_reg;
  wire \chan_bond_timer_reg[0] ;
  wire \chan_bond_timer_reg[0]_0 ;
  wire \chan_bond_timer_reg[0]_1 ;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]got_idles_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire lane_init_sm_i_n_6;
  wire lane_up_flop_i;
  wire lane_up_flop_i_0;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[1] ;
  wire rst_pma_init_usrclk;
  wire rx_header_1_i_2;
  wire [0:0]rx_pe_data_v_i;
  wire rx_reset_i_2;
  wire rxdatavalid_to_lanes_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire [2:0]soft_err_reg;
  wire txdatavalid_symgen_i_lane1;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_ERR_DETECT_15 err_detect_i
       (.CHANNEL_UP_TX_IF(CHANNEL_UP_TX_IF),
        .HARD_ERR_reg_0(lane_init_sm_i_n_6),
        .RXHEADER_OUT_ERR_LANE1(RXHEADER_OUT_ERR_LANE1),
        .SOFT_ERR_reg_0(SOFT_ERR_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .illegal_btf_i(illegal_btf_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .soft_err_reg(soft_err_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_16 lane_init_sm_i
       (.CHECK_POLARITY_IN_LANE1(CHECK_POLARITY_IN_LANE1),
        .ENABLE_ERR_DETECT_reg_0(lane_init_sm_i_n_6),
        .HARD_ERR0__0(HARD_ERR0__0),
        .RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE1(RXLOSSOFSYNC_OUT_LANE1),
        .RXPOLARITY_IN_LANE1(RXPOLARITY_IN_LANE1),
        .\chan_bond_timer_reg[0] (\chan_bond_timer_reg[0] ),
        .\chan_bond_timer_reg[0]_0 (\chan_bond_timer_reg[0]_0 ),
        .\chan_bond_timer_reg[0]_1 (\chan_bond_timer_reg[0]_1 ),
        .enable_err_detect_i(enable_err_detect_i),
        .lane_up_flop_i_0(lane_up_flop_i),
        .lane_up_flop_i_1(lane_up_flop_i_0),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r_reg_0(RX_IDLE_reg),
        .rst_r_reg_0(rx_reset_i_2),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_DEC_17 sym_dec_i
       (.RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .\RX_DATA_REG_reg[63]_0 (\RX_DATA_REG_reg[63] ),
        .RX_HEADER_0_REG_reg_0(RX_HEADER_0_REG_reg),
        .RX_IDLE_reg_0(RX_IDLE_reg),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .got_idles_i(got_idles_i),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[1]_0 (\remote_rdy_cntr_reg[1] ),
        .rx_header_1_i_2(rx_header_1_i_2),
        .\rx_na_idles_cntr_reg[0]_0 (lane_up_flop_i),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_GEN_18 sym_gen_i
       (.D(D),
        .GEN_CH_BOND(GEN_CH_BOND),
        .Q(Q),
        .RESET(RESET),
        .TXDATA_IN_LANE1(TXDATA_IN_LANE1),
        .TXHEADER_IN_LANE1(TXHEADER_IN_LANE1),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_AURORA_LANE" *) 
module aurora_64b66b_w256_1375Gbps_AURORA_LANE_1
   (lane_up_flop_i,
    rx_reset_i_1,
    rst_pma_init_usrclk,
    rx_pe_data_v_i,
    got_idles_i,
    SOFT_ERR_reg,
    RXPOLARITY_IN_LANE2,
    CHECK_POLARITY_IN_LANE2,
    TXHEADER_IN_LANE2,
    hard_err_i,
    \remote_rdy_cntr_reg[1] ,
    TXDATA_IN_LANE2,
    \RX_PE_DATA_reg[0] ,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    ILLEGAL_BTF_reg,
    RESET,
    ready_r_reg0,
    RX_HEADER_0_REG_reg,
    rx_header_1_i_1,
    \RX_DATA_REG_reg[0] ,
    \RX_DATA_REG_reg[63] ,
    RXHEADER_OUT_ERR_LANE2,
    RXDATAVALID_IN_REG,
    RXLOSSOFSYNC_OUT_LANE2,
    RESET_LANES,
    txdatavalid_symgen_i_lane2,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg,
    HARD_ERR0__0,
    rxdatavalid_to_lanes_i,
    \TX_DATA_reg[59] ,
    D,
    \TX_DATA_reg[63] ,
    Q,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output rx_reset_i_1;
  output rst_pma_init_usrclk;
  output [0:0]rx_pe_data_v_i;
  output [0:0]got_idles_i;
  output [0:0]SOFT_ERR_reg;
  output RXPOLARITY_IN_LANE2;
  output CHECK_POLARITY_IN_LANE2;
  output [1:0]TXHEADER_IN_LANE2;
  output [0:0]hard_err_i;
  output \remote_rdy_cntr_reg[1] ;
  output [63:0]TXDATA_IN_LANE2;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input ILLEGAL_BTF_reg;
  input RESET;
  input ready_r_reg0;
  input RX_HEADER_0_REG_reg;
  input rx_header_1_i_1;
  input \RX_DATA_REG_reg[0] ;
  input [63:0]\RX_DATA_REG_reg[63] ;
  input RXHEADER_OUT_ERR_LANE2;
  input RXDATAVALID_IN_REG;
  input RXLOSSOFSYNC_OUT_LANE2;
  input RESET_LANES;
  input txdatavalid_symgen_i_lane2;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg;
  input HARD_ERR0__0;
  input rxdatavalid_to_lanes_i;
  input \TX_DATA_reg[59] ;
  input [3:0]D;
  input \TX_DATA_reg[63] ;
  input [55:0]Q;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire CHECK_POLARITY_IN_LANE2;
  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire HARD_ERR0__0;
  wire ILLEGAL_BTF_reg;
  wire [55:0]Q;
  wire RESET;
  wire RESET_LANES;
  wire RXDATAVALID_IN_REG;
  wire RXHEADER_OUT_ERR_LANE2;
  wire RXLOSSOFSYNC_OUT_LANE2;
  wire RXPOLARITY_IN_LANE2;
  wire \RX_DATA_REG_reg[0] ;
  wire [63:0]\RX_DATA_REG_reg[63] ;
  wire RX_HEADER_0_REG_reg;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire [0:0]SOFT_ERR_reg;
  wire [63:0]TXDATA_IN_LANE2;
  wire [1:0]TXHEADER_IN_LANE2;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire \TX_DATA_reg[63] ;
  wire TX_HEADER_1_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]got_idles_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire lane_init_sm_i_n_5;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[1] ;
  wire rst_pma_init_usrclk;
  wire rx_header_1_i_1;
  wire [0:0]rx_pe_data_v_i;
  wire rx_reset_i_1;
  wire rxdatavalid_to_lanes_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire txdatavalid_symgen_i_lane2;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_ERR_DETECT_9 err_detect_i
       (.HARD_ERR_reg_0(lane_init_sm_i_n_5),
        .RXHEADER_OUT_ERR_LANE2(RXHEADER_OUT_ERR_LANE2),
        .SOFT_ERR_reg_0(SOFT_ERR_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .illegal_btf_i(illegal_btf_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_10 lane_init_sm_i
       (.CHECK_POLARITY_IN_LANE2(CHECK_POLARITY_IN_LANE2),
        .ENABLE_ERR_DETECT_reg_0(lane_init_sm_i_n_5),
        .HARD_ERR0__0(HARD_ERR0__0),
        .RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE2(RXLOSSOFSYNC_OUT_LANE2),
        .RXPOLARITY_IN_LANE2(RXPOLARITY_IN_LANE2),
        .enable_err_detect_i(enable_err_detect_i),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r_reg_0(ILLEGAL_BTF_reg),
        .rst_r_reg_0(rx_reset_i_1),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_DEC_11 sym_dec_i
       (.ILLEGAL_BTF_reg_0(ILLEGAL_BTF_reg),
        .RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .\RX_DATA_REG_reg[63]_0 (\RX_DATA_REG_reg[63] ),
        .RX_HEADER_0_REG_reg_0(RX_HEADER_0_REG_reg),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .got_idles_i(got_idles_i),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[1]_0 (\remote_rdy_cntr_reg[1] ),
        .rx_header_1_i_1(rx_header_1_i_1),
        .\rx_na_idles_cntr_reg[0]_0 (lane_up_flop_i),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_GEN_12 sym_gen_i
       (.D(D),
        .GEN_CH_BOND(GEN_CH_BOND),
        .Q(Q),
        .RESET(RESET),
        .TXDATA_IN_LANE2(TXDATA_IN_LANE2),
        .TXHEADER_IN_LANE2(TXHEADER_IN_LANE2),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_AURORA_LANE" *) 
module aurora_64b66b_w256_1375Gbps_AURORA_LANE_2
   (lane_up_flop_i,
    rx_reset_i_0,
    rst_pma_init_usrclk,
    rx_pe_data_v_i,
    got_idles_i,
    SOFT_ERR_reg,
    RXPOLARITY_IN_LANE3,
    CHECK_POLARITY_IN_LANE3,
    TXHEADER_IN_LANE3,
    hard_err_i,
    \remote_rdy_cntr_reg[1] ,
    TXDATA_IN_LANE3,
    \RX_PE_DATA_reg[0] ,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    RX_IDLE_reg,
    RESET,
    ready_r_reg0,
    RX_HEADER_0_REG_reg,
    rx_header_1_i_0,
    \RX_DATA_REG_reg[0] ,
    \RX_DATA_REG_reg[63] ,
    RXHEADER_OUT_ERR_LANE3,
    RXDATAVALID_IN_REG,
    RXLOSSOFSYNC_OUT_LANE3,
    RESET_LANES,
    txdatavalid_symgen_i_lane3,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg,
    remote_ready_r_reg,
    remote_ready_r_reg_0,
    remote_ready_r_reg_1,
    HARD_ERR0__0,
    rxdatavalid_to_lanes_i,
    \TX_DATA_reg[59] ,
    D,
    \TX_DATA_reg[63] ,
    Q,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output rx_reset_i_0;
  output rst_pma_init_usrclk;
  output [0:0]rx_pe_data_v_i;
  output [0:0]got_idles_i;
  output [0:0]SOFT_ERR_reg;
  output RXPOLARITY_IN_LANE3;
  output CHECK_POLARITY_IN_LANE3;
  output [1:0]TXHEADER_IN_LANE3;
  output [0:0]hard_err_i;
  output \remote_rdy_cntr_reg[1] ;
  output [63:0]TXDATA_IN_LANE3;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input RX_IDLE_reg;
  input RESET;
  input ready_r_reg0;
  input RX_HEADER_0_REG_reg;
  input rx_header_1_i_0;
  input \RX_DATA_REG_reg[0] ;
  input [63:0]\RX_DATA_REG_reg[63] ;
  input RXHEADER_OUT_ERR_LANE3;
  input RXDATAVALID_IN_REG;
  input RXLOSSOFSYNC_OUT_LANE3;
  input RESET_LANES;
  input txdatavalid_symgen_i_lane3;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg;
  input remote_ready_r_reg;
  input remote_ready_r_reg_0;
  input remote_ready_r_reg_1;
  input HARD_ERR0__0;
  input rxdatavalid_to_lanes_i;
  input \TX_DATA_reg[59] ;
  input [3:0]D;
  input \TX_DATA_reg[63] ;
  input [55:0]Q;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire CHECK_POLARITY_IN_LANE3;
  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire HARD_ERR0__0;
  wire [55:0]Q;
  wire RESET;
  wire RESET_LANES;
  wire RXDATAVALID_IN_REG;
  wire RXHEADER_OUT_ERR_LANE3;
  wire RXLOSSOFSYNC_OUT_LANE3;
  wire RXPOLARITY_IN_LANE3;
  wire \RX_DATA_REG_reg[0] ;
  wire [63:0]\RX_DATA_REG_reg[63] ;
  wire RX_HEADER_0_REG_reg;
  wire RX_IDLE_reg;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire [0:0]SOFT_ERR_reg;
  wire [63:0]TXDATA_IN_LANE3;
  wire [1:0]TXHEADER_IN_LANE3;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire \TX_DATA_reg[63] ;
  wire TX_HEADER_1_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]got_idles_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire lane_init_sm_i_n_5;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[1] ;
  wire remote_ready_r_reg;
  wire remote_ready_r_reg_0;
  wire remote_ready_r_reg_1;
  wire rst_pma_init_usrclk;
  wire rx_header_1_i_0;
  wire [0:0]rx_pe_data_v_i;
  wire rx_reset_i_0;
  wire rxdatavalid_to_lanes_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire txdatavalid_symgen_i_lane3;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_ERR_DETECT err_detect_i
       (.HARD_ERR_reg_0(lane_init_sm_i_n_5),
        .RXHEADER_OUT_ERR_LANE3(RXHEADER_OUT_ERR_LANE3),
        .SOFT_ERR_reg_0(SOFT_ERR_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .illegal_btf_i(illegal_btf_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_LANE_INIT_SM lane_init_sm_i
       (.CHECK_POLARITY_IN_LANE3(CHECK_POLARITY_IN_LANE3),
        .ENABLE_ERR_DETECT_reg_0(lane_init_sm_i_n_5),
        .HARD_ERR0__0(HARD_ERR0__0),
        .RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE3(RXLOSSOFSYNC_OUT_LANE3),
        .RXPOLARITY_IN_LANE3(RXPOLARITY_IN_LANE3),
        .enable_err_detect_i(enable_err_detect_i),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_count_r_reg_0(RX_IDLE_reg),
        .rst_r_reg_0(rx_reset_i_0),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_DEC sym_dec_i
       (.RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .\RX_DATA_REG_reg[63]_0 (\RX_DATA_REG_reg[63] ),
        .RX_HEADER_0_REG_reg_0(RX_HEADER_0_REG_reg),
        .RX_IDLE_reg_0(RX_IDLE_reg),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .got_idles_i(got_idles_i),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[1]_0 (\remote_rdy_cntr_reg[1] ),
        .remote_ready_r_reg(remote_ready_r_reg),
        .remote_ready_r_reg_0(remote_ready_r_reg_0),
        .remote_ready_r_reg_1(remote_ready_r_reg_1),
        .rx_header_1_i_0(rx_header_1_i_0),
        .\rx_na_idles_cntr_reg[0]_0 (lane_up_flop_i),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SYM_GEN sym_gen_i
       (.D(D),
        .GEN_CH_BOND(GEN_CH_BOND),
        .Q(Q),
        .RESET(RESET),
        .TXDATA_IN_LANE3(TXDATA_IN_LANE3),
        .TXHEADER_IN_LANE3(TXHEADER_IN_LANE3),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_AXI_TO_DRP
   (s_axi_bvalid,
    s_axi_rvalid,
    s_axi_bvalid_lane1,
    s_axi_rvalid_lane1,
    s_axi_bvalid_lane2,
    s_axi_rvalid_lane2,
    s_axi_bvalid_lane3,
    s_axi_rvalid_lane3,
    s_axi_rdata,
    s_axi_rdata_lane1,
    s_axi_rdata_lane2,
    s_axi_rdata_lane3,
    drpaddr_in,
    drpdi_in,
    s_axi_awready,
    s_axi_arready,
    s_axi_awready_lane1,
    s_axi_arready_lane1,
    s_axi_awready_lane2,
    s_axi_arready_lane2,
    s_axi_awready_lane3,
    s_axi_arready_lane3,
    drpen_in,
    drpwe_in,
    s_axi_wready,
    s_axi_wready_lane1,
    s_axi_wready_lane2,
    s_axi_wready_lane3,
    RESET,
    init_clk,
    s_axi_arvalid,
    drprdy_out,
    s_axi_arvalid_lane1,
    s_axi_arvalid_lane2,
    s_axi_arvalid_lane3,
    drpdo_out,
    s_axi_awvalid,
    s_axi_awaddr,
    s_axi_araddr,
    s_axi_wvalid,
    s_axi_wdata,
    s_axi_awvalid_lane1,
    s_axi_awaddr_lane1,
    s_axi_araddr_lane1,
    s_axi_wvalid_lane1,
    s_axi_wdata_lane1,
    s_axi_awvalid_lane2,
    s_axi_awaddr_lane2,
    s_axi_araddr_lane2,
    s_axi_wvalid_lane2,
    s_axi_wdata_lane2,
    s_axi_awvalid_lane3,
    s_axi_awaddr_lane3,
    s_axi_araddr_lane3,
    s_axi_wvalid_lane3,
    s_axi_wdata_lane3,
    s_axi_rready,
    s_axi_bready,
    s_axi_bready_lane1,
    s_axi_rready_lane1,
    s_axi_bready_lane2,
    s_axi_rready_lane2,
    s_axi_bready_lane3,
    s_axi_rready_lane3);
  output s_axi_bvalid;
  output s_axi_rvalid;
  output s_axi_bvalid_lane1;
  output s_axi_rvalid_lane1;
  output s_axi_bvalid_lane2;
  output s_axi_rvalid_lane2;
  output s_axi_bvalid_lane3;
  output s_axi_rvalid_lane3;
  output [15:0]s_axi_rdata;
  output [15:0]s_axi_rdata_lane1;
  output [15:0]s_axi_rdata_lane2;
  output [15:0]s_axi_rdata_lane3;
  output [39:0]drpaddr_in;
  output [63:0]drpdi_in;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_awready_lane1;
  output s_axi_arready_lane1;
  output s_axi_awready_lane2;
  output s_axi_arready_lane2;
  output s_axi_awready_lane3;
  output s_axi_arready_lane3;
  output [3:0]drpen_in;
  output [3:0]drpwe_in;
  output s_axi_wready;
  output s_axi_wready_lane1;
  output s_axi_wready_lane2;
  output s_axi_wready_lane3;
  input RESET;
  input init_clk;
  input s_axi_arvalid;
  input [3:0]drprdy_out;
  input s_axi_arvalid_lane1;
  input s_axi_arvalid_lane2;
  input s_axi_arvalid_lane3;
  input [63:0]drpdo_out;
  input s_axi_awvalid;
  input [9:0]s_axi_awaddr;
  input [9:0]s_axi_araddr;
  input s_axi_wvalid;
  input [15:0]s_axi_wdata;
  input s_axi_awvalid_lane1;
  input [9:0]s_axi_awaddr_lane1;
  input [9:0]s_axi_araddr_lane1;
  input s_axi_wvalid_lane1;
  input [15:0]s_axi_wdata_lane1;
  input s_axi_awvalid_lane2;
  input [9:0]s_axi_awaddr_lane2;
  input [9:0]s_axi_araddr_lane2;
  input s_axi_wvalid_lane2;
  input [15:0]s_axi_wdata_lane2;
  input s_axi_awvalid_lane3;
  input [9:0]s_axi_awaddr_lane3;
  input [9:0]s_axi_araddr_lane3;
  input s_axi_wvalid_lane3;
  input [15:0]s_axi_wdata_lane3;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_bready_lane1;
  input s_axi_rready_lane1;
  input s_axi_bready_lane2;
  input s_axi_rready_lane2;
  input s_axi_bready_lane3;
  input s_axi_rready_lane3;

  wire \FSM_onehot_AXI_STATE[0]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE[1]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE[2]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE[3]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE[4]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1[0]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1[1]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1[2]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1[3]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1[4]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ;
  wire \FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ;
  wire \FSM_onehot_AXI_STATE_lane2[0]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane2[1]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane2[2]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane2[3]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane2[4]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ;
  wire \FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ;
  wire \FSM_onehot_AXI_STATE_lane3[0]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane3[1]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane3[2]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane3[3]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane3[4]_i_1_n_0 ;
  wire \FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ;
  wire \FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ;
  wire \FSM_onehot_AXI_STATE_reg_n_0_[2] ;
  wire \FSM_onehot_AXI_STATE_reg_n_0_[3] ;
  wire RESET;
  wire [39:0]drpaddr_in;
  wire \drpaddr_in[9]_i_2_n_0 ;
  wire [9:0]drpaddr_in_25;
  wire [9:0]drpaddr_in_lane1;
  wire \drpaddr_in_lane1[9]_i_2_n_0 ;
  wire [9:0]drpaddr_in_lane2;
  wire \drpaddr_in_lane2[9]_i_2_n_0 ;
  wire [9:0]drpaddr_in_lane3;
  wire \drpaddr_in_lane3[9]_i_2_n_0 ;
  wire [63:0]drpdi_in;
  wire drpdi_in_24;
  wire drpdi_in_lane1;
  wire drpdi_in_lane2;
  wire drpdi_in_lane3;
  wire [63:0]drpdo_out;
  wire [15:0]drpdo_out_14;
  wire [15:0]drpdo_out_lane1;
  wire [15:0]drpdo_out_lane2;
  wire [15:0]drpdo_out_lane3;
  wire [3:0]drpen_in;
  wire drpen_in_i_1_n_0;
  wire drpen_in_lane1_i_1_n_0;
  wire drpen_in_lane2_i_1_n_0;
  wire drpen_in_lane3_i_1_n_0;
  wire [3:0]drprdy_out;
  wire drprdy_out_5;
  wire drprdy_out_lane1;
  wire drprdy_out_lane2;
  wire drprdy_out_lane3;
  wire [3:0]drpwe_in;
  wire drpwe_in_i_1_n_0;
  wire drpwe_in_lane1_i_1_n_0;
  wire drpwe_in_lane2_i_1_n_0;
  wire drpwe_in_lane3_i_1_n_0;
  wire [9:0]in10;
  wire [9:0]in9;
  wire init_clk;
  wire [15:15]p_0_in;
  wire p_0_in13_in;
  wire p_0_in17_in;
  wire p_0_in21_in;
  wire p_0_in25_in;
  wire rd_req;
  wire rd_req0;
  wire rd_req_i_1_n_0;
  wire rd_req_lane1;
  wire rd_req_lane10;
  wire rd_req_lane1_i_1_n_0;
  wire rd_req_lane2;
  wire rd_req_lane20;
  wire rd_req_lane2_i_1_n_0;
  wire rd_req_lane3;
  wire rd_req_lane30;
  wire rd_req_lane3_i_1_n_0;
  wire ready_det;
  wire ready_det_r_reg_n_0;
  wire reset;
  wire [9:0]s_axi_araddr;
  wire [9:0]s_axi_araddr_lane1;
  wire [11:2]s_axi_araddr_lane1_19;
  wire [9:0]s_axi_araddr_lane2;
  wire [11:2]s_axi_araddr_lane2_21;
  wire [9:0]s_axi_araddr_lane3;
  wire [11:2]s_axi_araddr_lane3_23;
  wire s_axi_arready;
  wire s_axi_arready_lane1;
  wire s_axi_arready_lane2;
  wire s_axi_arready_lane3;
  wire s_axi_arvalid;
  wire s_axi_arvalid_4;
  wire s_axi_arvalid_lane1;
  wire s_axi_arvalid_lane1_6;
  wire s_axi_arvalid_lane2;
  wire s_axi_arvalid_lane2_7;
  wire s_axi_arvalid_lane3;
  wire s_axi_arvalid_lane3_8;
  wire [9:0]s_axi_awaddr;
  wire [9:0]s_axi_awaddr_lane1;
  wire [11:2]s_axi_awaddr_lane1_18;
  wire [9:0]s_axi_awaddr_lane2;
  wire [11:2]s_axi_awaddr_lane2_20;
  wire [9:0]s_axi_awaddr_lane3;
  wire [11:2]s_axi_awaddr_lane3_22;
  wire s_axi_awready;
  wire s_axi_awready_i_1_n_0;
  wire s_axi_awready_lane1;
  wire s_axi_awready_lane1_i_1_n_0;
  wire s_axi_awready_lane1_reg_n_0;
  wire s_axi_awready_lane2;
  wire s_axi_awready_lane2_i_1_n_0;
  wire s_axi_awready_lane2_reg_n_0;
  wire s_axi_awready_lane3;
  wire s_axi_awready_lane3_i_1_n_0;
  wire s_axi_awready_lane3_reg_n_0;
  wire s_axi_awready_reg_n_0;
  wire s_axi_awvalid;
  wire s_axi_awvalid_lane1;
  wire s_axi_awvalid_lane2;
  wire s_axi_awvalid_lane3;
  wire s_axi_bready;
  wire s_axi_bready_lane1;
  wire s_axi_bready_lane2;
  wire s_axi_bready_lane3;
  wire s_axi_bvalid;
  wire s_axi_bvalid_9;
  wire s_axi_bvalid_i_1_n_0;
  wire s_axi_bvalid_lane1;
  wire s_axi_bvalid_lane1_10;
  wire s_axi_bvalid_lane1_i_1_n_0;
  wire s_axi_bvalid_lane2;
  wire s_axi_bvalid_lane2_11;
  wire s_axi_bvalid_lane2_i_1_n_0;
  wire s_axi_bvalid_lane3;
  wire s_axi_bvalid_lane3_12;
  wire s_axi_bvalid_lane3_i_1_n_0;
  wire [15:0]s_axi_rdata;
  wire s_axi_rdata0;
  wire [15:0]s_axi_rdata_lane1;
  wire s_axi_rdata_lane10;
  wire [15:0]s_axi_rdata_lane2;
  wire s_axi_rdata_lane20;
  wire [15:0]s_axi_rdata_lane3;
  wire s_axi_rdata_lane30;
  wire s_axi_rready;
  wire s_axi_rready_lane1;
  wire s_axi_rready_lane2;
  wire s_axi_rready_lane3;
  wire s_axi_rvalid;
  wire s_axi_rvalid_13;
  wire s_axi_rvalid_i_1_n_0;
  wire s_axi_rvalid_lane1;
  wire s_axi_rvalid_lane1_15;
  wire s_axi_rvalid_lane1_i_1_n_0;
  wire s_axi_rvalid_lane2;
  wire s_axi_rvalid_lane2_16;
  wire s_axi_rvalid_lane2_i_1_n_0;
  wire s_axi_rvalid_lane3;
  wire s_axi_rvalid_lane3_17;
  wire s_axi_rvalid_lane3_i_1_n_0;
  wire [15:0]s_axi_wdata;
  wire [15:0]s_axi_wdata_lane1;
  wire \s_axi_wdata_lane1_reg_n_0_[0] ;
  wire \s_axi_wdata_lane1_reg_n_0_[10] ;
  wire \s_axi_wdata_lane1_reg_n_0_[11] ;
  wire \s_axi_wdata_lane1_reg_n_0_[12] ;
  wire \s_axi_wdata_lane1_reg_n_0_[13] ;
  wire \s_axi_wdata_lane1_reg_n_0_[14] ;
  wire \s_axi_wdata_lane1_reg_n_0_[15] ;
  wire \s_axi_wdata_lane1_reg_n_0_[1] ;
  wire \s_axi_wdata_lane1_reg_n_0_[2] ;
  wire \s_axi_wdata_lane1_reg_n_0_[3] ;
  wire \s_axi_wdata_lane1_reg_n_0_[4] ;
  wire \s_axi_wdata_lane1_reg_n_0_[5] ;
  wire \s_axi_wdata_lane1_reg_n_0_[6] ;
  wire \s_axi_wdata_lane1_reg_n_0_[7] ;
  wire \s_axi_wdata_lane1_reg_n_0_[8] ;
  wire \s_axi_wdata_lane1_reg_n_0_[9] ;
  wire [15:0]s_axi_wdata_lane2;
  wire \s_axi_wdata_lane2_reg_n_0_[0] ;
  wire \s_axi_wdata_lane2_reg_n_0_[10] ;
  wire \s_axi_wdata_lane2_reg_n_0_[11] ;
  wire \s_axi_wdata_lane2_reg_n_0_[12] ;
  wire \s_axi_wdata_lane2_reg_n_0_[13] ;
  wire \s_axi_wdata_lane2_reg_n_0_[14] ;
  wire \s_axi_wdata_lane2_reg_n_0_[15] ;
  wire \s_axi_wdata_lane2_reg_n_0_[1] ;
  wire \s_axi_wdata_lane2_reg_n_0_[2] ;
  wire \s_axi_wdata_lane2_reg_n_0_[3] ;
  wire \s_axi_wdata_lane2_reg_n_0_[4] ;
  wire \s_axi_wdata_lane2_reg_n_0_[5] ;
  wire \s_axi_wdata_lane2_reg_n_0_[6] ;
  wire \s_axi_wdata_lane2_reg_n_0_[7] ;
  wire \s_axi_wdata_lane2_reg_n_0_[8] ;
  wire \s_axi_wdata_lane2_reg_n_0_[9] ;
  wire [15:0]s_axi_wdata_lane3;
  wire \s_axi_wdata_lane3_reg_n_0_[0] ;
  wire \s_axi_wdata_lane3_reg_n_0_[10] ;
  wire \s_axi_wdata_lane3_reg_n_0_[11] ;
  wire \s_axi_wdata_lane3_reg_n_0_[12] ;
  wire \s_axi_wdata_lane3_reg_n_0_[13] ;
  wire \s_axi_wdata_lane3_reg_n_0_[14] ;
  wire \s_axi_wdata_lane3_reg_n_0_[15] ;
  wire \s_axi_wdata_lane3_reg_n_0_[1] ;
  wire \s_axi_wdata_lane3_reg_n_0_[2] ;
  wire \s_axi_wdata_lane3_reg_n_0_[3] ;
  wire \s_axi_wdata_lane3_reg_n_0_[4] ;
  wire \s_axi_wdata_lane3_reg_n_0_[5] ;
  wire \s_axi_wdata_lane3_reg_n_0_[6] ;
  wire \s_axi_wdata_lane3_reg_n_0_[7] ;
  wire \s_axi_wdata_lane3_reg_n_0_[8] ;
  wire \s_axi_wdata_lane3_reg_n_0_[9] ;
  wire \s_axi_wdata_reg_n_0_[0] ;
  wire \s_axi_wdata_reg_n_0_[10] ;
  wire \s_axi_wdata_reg_n_0_[11] ;
  wire \s_axi_wdata_reg_n_0_[12] ;
  wire \s_axi_wdata_reg_n_0_[13] ;
  wire \s_axi_wdata_reg_n_0_[14] ;
  wire \s_axi_wdata_reg_n_0_[15] ;
  wire \s_axi_wdata_reg_n_0_[1] ;
  wire \s_axi_wdata_reg_n_0_[2] ;
  wire \s_axi_wdata_reg_n_0_[3] ;
  wire \s_axi_wdata_reg_n_0_[4] ;
  wire \s_axi_wdata_reg_n_0_[5] ;
  wire \s_axi_wdata_reg_n_0_[6] ;
  wire \s_axi_wdata_reg_n_0_[7] ;
  wire \s_axi_wdata_reg_n_0_[8] ;
  wire \s_axi_wdata_reg_n_0_[9] ;
  wire s_axi_wready;
  wire s_axi_wready_0;
  wire s_axi_wready_lane1;
  wire s_axi_wready_lane1_1;
  wire s_axi_wready_lane2;
  wire s_axi_wready_lane2_2;
  wire s_axi_wready_lane3;
  wire s_axi_wready_lane3_3;
  wire s_axi_wvalid;
  wire s_axi_wvalid_lane1;
  wire s_axi_wvalid_lane2;
  wire s_axi_wvalid_lane3;
  wire tx_done;
  wire tx_done_i_1_n_0;
  wire tx_done_lane1;
  wire tx_done_lane1_i_1_n_0;
  wire tx_done_lane1_i_2_n_0;
  wire tx_done_lane1_r;
  wire tx_done_lane2;
  wire tx_done_lane2_i_1_n_0;
  wire tx_done_lane2_i_2_n_0;
  wire tx_done_lane2_r;
  wire tx_done_lane3;
  wire tx_done_lane3_i_1_n_0;
  wire tx_done_lane3_i_2_n_0;
  wire tx_done_lane3_r;
  wire tx_done_r;
  wire u_rst_sync_RESET_n_1;
  wire u_rst_sync_RESET_n_3;
  wire u_rst_sync_RESET_n_4;
  wire u_rst_sync_RESET_n_5;
  wire u_rst_sync_RESET_n_6;
  wire u_rst_sync_RESET_n_7;
  wire u_rst_sync_RESET_n_8;
  wire u_rst_sync_RESET_n_9;
  wire wr_req;
  wire wr_req0;
  wire wr_req_i_1_n_0;
  wire wr_req_lane1;
  wire wr_req_lane10;
  wire wr_req_lane1_i_1_n_0;
  wire wr_req_lane1_reg_n_0;
  wire wr_req_lane2;
  wire wr_req_lane20;
  wire wr_req_lane2_i_1_n_0;
  wire wr_req_lane2_reg_n_0;
  wire wr_req_lane3;
  wire wr_req_lane30;
  wire wr_req_lane3_i_1_n_0;
  wire wr_req_lane3_reg_n_0;
  wire wr_req_reg_n_0;

  LUT6 #(
    .INIT(64'h1010FF1010101010)) 
    \FSM_onehot_AXI_STATE[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_awvalid),
        .I2(wr_req),
        .I3(tx_done_r),
        .I4(tx_done),
        .I5(p_0_in25_in),
        .O(\FSM_onehot_AXI_STATE[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEAEE)) 
    \FSM_onehot_AXI_STATE[1]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[3] ),
        .I1(p_0_in25_in),
        .I2(tx_done),
        .I3(tx_done_r),
        .I4(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .O(\FSM_onehot_AXI_STATE[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE[2]_i_1 
       (.I0(wr_req),
        .I1(s_axi_arvalid),
        .O(\FSM_onehot_AXI_STATE[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE[3]_i_1 
       (.I0(s_axi_wready_0),
        .I1(s_axi_wvalid),
        .O(\FSM_onehot_AXI_STATE[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    \FSM_onehot_AXI_STATE[4]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(wr_req),
        .I3(s_axi_wvalid),
        .I4(s_axi_wready_0),
        .O(\FSM_onehot_AXI_STATE[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1010FF1010101010)) 
    \FSM_onehot_AXI_STATE_lane1[0]_i_1 
       (.I0(s_axi_arvalid_lane1),
        .I1(s_axi_awvalid_lane1),
        .I2(wr_req_lane1),
        .I3(tx_done_lane1_r),
        .I4(tx_done_lane1),
        .I5(p_0_in21_in),
        .O(\FSM_onehot_AXI_STATE_lane1[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEAEE)) 
    \FSM_onehot_AXI_STATE_lane1[1]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ),
        .I1(p_0_in21_in),
        .I2(tx_done_lane1),
        .I3(tx_done_lane1_r),
        .I4(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .O(\FSM_onehot_AXI_STATE_lane1[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane1[2]_i_1 
       (.I0(wr_req_lane1),
        .I1(s_axi_arvalid_lane1),
        .O(\FSM_onehot_AXI_STATE_lane1[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane1[3]_i_1 
       (.I0(s_axi_wready_lane1_1),
        .I1(s_axi_wvalid_lane1),
        .O(\FSM_onehot_AXI_STATE_lane1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    \FSM_onehot_AXI_STATE_lane1[4]_i_1 
       (.I0(s_axi_awvalid_lane1),
        .I1(s_axi_arvalid_lane1),
        .I2(wr_req_lane1),
        .I3(s_axi_wvalid_lane1),
        .I4(s_axi_wready_lane1_1),
        .O(\FSM_onehot_AXI_STATE_lane1[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_AXI_STATE_lane1_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane1[0]_i_1_n_0 ),
        .Q(wr_req_lane1),
        .S(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane1_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane1[1]_i_1_n_0 ),
        .Q(p_0_in21_in),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane1_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane1[2]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane1_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane1[3]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane1_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane1[4]_i_1_n_0 ),
        .Q(s_axi_wready_lane1_1),
        .R(reset));
  LUT6 #(
    .INIT(64'h1010FF1010101010)) 
    \FSM_onehot_AXI_STATE_lane2[0]_i_1 
       (.I0(s_axi_arvalid_lane2),
        .I1(s_axi_awvalid_lane2),
        .I2(wr_req_lane2),
        .I3(tx_done_lane2_r),
        .I4(tx_done_lane2),
        .I5(p_0_in17_in),
        .O(\FSM_onehot_AXI_STATE_lane2[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEAEE)) 
    \FSM_onehot_AXI_STATE_lane2[1]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ),
        .I1(p_0_in17_in),
        .I2(tx_done_lane2),
        .I3(tx_done_lane2_r),
        .I4(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .O(\FSM_onehot_AXI_STATE_lane2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane2[2]_i_1 
       (.I0(wr_req_lane2),
        .I1(s_axi_arvalid_lane2),
        .O(\FSM_onehot_AXI_STATE_lane2[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane2[3]_i_1 
       (.I0(s_axi_wready_lane2_2),
        .I1(s_axi_wvalid_lane2),
        .O(\FSM_onehot_AXI_STATE_lane2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    \FSM_onehot_AXI_STATE_lane2[4]_i_1 
       (.I0(s_axi_awvalid_lane2),
        .I1(s_axi_arvalid_lane2),
        .I2(wr_req_lane2),
        .I3(s_axi_wvalid_lane2),
        .I4(s_axi_wready_lane2_2),
        .O(\FSM_onehot_AXI_STATE_lane2[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_AXI_STATE_lane2_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane2[0]_i_1_n_0 ),
        .Q(wr_req_lane2),
        .S(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane2_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane2[1]_i_1_n_0 ),
        .Q(p_0_in17_in),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane2_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane2[2]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane2_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane2[3]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane2_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane2[4]_i_1_n_0 ),
        .Q(s_axi_wready_lane2_2),
        .R(reset));
  LUT6 #(
    .INIT(64'h1010FF1010101010)) 
    \FSM_onehot_AXI_STATE_lane3[0]_i_1 
       (.I0(s_axi_arvalid_lane3),
        .I1(s_axi_awvalid_lane3),
        .I2(wr_req_lane3),
        .I3(tx_done_lane3_r),
        .I4(tx_done_lane3),
        .I5(p_0_in13_in),
        .O(\FSM_onehot_AXI_STATE_lane3[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEAEE)) 
    \FSM_onehot_AXI_STATE_lane3[1]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ),
        .I1(p_0_in13_in),
        .I2(tx_done_lane3),
        .I3(tx_done_lane3_r),
        .I4(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .O(\FSM_onehot_AXI_STATE_lane3[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane3[2]_i_1 
       (.I0(wr_req_lane3),
        .I1(s_axi_arvalid_lane3),
        .O(\FSM_onehot_AXI_STATE_lane3[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_AXI_STATE_lane3[3]_i_1 
       (.I0(s_axi_wready_lane3_3),
        .I1(s_axi_wvalid_lane3),
        .O(\FSM_onehot_AXI_STATE_lane3[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    \FSM_onehot_AXI_STATE_lane3[4]_i_1 
       (.I0(s_axi_awvalid_lane3),
        .I1(s_axi_arvalid_lane3),
        .I2(wr_req_lane3),
        .I3(s_axi_wvalid_lane3),
        .I4(s_axi_wready_lane3_3),
        .O(\FSM_onehot_AXI_STATE_lane3[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_AXI_STATE_lane3_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane3[0]_i_1_n_0 ),
        .Q(wr_req_lane3),
        .S(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane3_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane3[1]_i_1_n_0 ),
        .Q(p_0_in13_in),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane3_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane3[2]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane3_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane3[3]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_lane3_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE_lane3[4]_i_1_n_0 ),
        .Q(s_axi_wready_lane3_3),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_AXI_STATE_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE[0]_i_1_n_0 ),
        .Q(wr_req),
        .S(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE[1]_i_1_n_0 ),
        .Q(p_0_in25_in),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE[2]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE[3]_i_1_n_0 ),
        .Q(\FSM_onehot_AXI_STATE_reg_n_0_[3] ),
        .R(reset));
  (* FSM_ENCODED_STATES = "REDE:00100,WRT1:10000,WRT2:01000,WAIT:00010,INIT:00001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_AXI_STATE_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\FSM_onehot_AXI_STATE[4]_i_1_n_0 ),
        .Q(s_axi_wready_0),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[0]_i_1 
       (.I0(in9[0]),
        .I1(s_axi_wready_0),
        .I2(in10[0]),
        .O(drpaddr_in_25[0]));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[1]_i_1 
       (.I0(in9[1]),
        .I1(s_axi_wready_0),
        .I2(in10[1]),
        .O(drpaddr_in_25[1]));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[2]_i_1 
       (.I0(in9[2]),
        .I1(s_axi_wready_0),
        .I2(in10[2]),
        .O(drpaddr_in_25[2]));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[3]_i_1 
       (.I0(in9[3]),
        .I1(s_axi_wready_0),
        .I2(in10[3]),
        .O(drpaddr_in_25[3]));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[4]_i_1 
       (.I0(in9[4]),
        .I1(s_axi_wready_0),
        .I2(in10[4]),
        .O(drpaddr_in_25[4]));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[5]_i_1 
       (.I0(in9[5]),
        .I1(s_axi_wready_0),
        .I2(in10[5]),
        .O(drpaddr_in_25[5]));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[6]_i_1 
       (.I0(in9[6]),
        .I1(s_axi_wready_0),
        .I2(in10[6]),
        .O(drpaddr_in_25[6]));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[7]_i_1 
       (.I0(in9[7]),
        .I1(s_axi_wready_0),
        .I2(in10[7]),
        .O(drpaddr_in_25[7]));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[8]_i_1 
       (.I0(in9[8]),
        .I1(s_axi_wready_0),
        .I2(in10[8]),
        .O(drpaddr_in_25[8]));
  LUT2 #(
    .INIT(4'hE)) 
    \drpaddr_in[9]_i_2 
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .I1(s_axi_wready_0),
        .O(\drpaddr_in[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in[9]_i_3 
       (.I0(in9[9]),
        .I1(s_axi_wready_0),
        .I2(in10[9]),
        .O(drpaddr_in_25[9]));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[0]_i_1 
       (.I0(s_axi_awaddr_lane1_18[2]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[2]),
        .O(drpaddr_in_lane1[0]));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[1]_i_1 
       (.I0(s_axi_awaddr_lane1_18[3]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[3]),
        .O(drpaddr_in_lane1[1]));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[2]_i_1 
       (.I0(s_axi_awaddr_lane1_18[4]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[4]),
        .O(drpaddr_in_lane1[2]));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[3]_i_1 
       (.I0(s_axi_awaddr_lane1_18[5]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[5]),
        .O(drpaddr_in_lane1[3]));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[4]_i_1 
       (.I0(s_axi_awaddr_lane1_18[6]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[6]),
        .O(drpaddr_in_lane1[4]));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[5]_i_1 
       (.I0(s_axi_awaddr_lane1_18[7]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[7]),
        .O(drpaddr_in_lane1[5]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[6]_i_1 
       (.I0(s_axi_awaddr_lane1_18[8]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[8]),
        .O(drpaddr_in_lane1[6]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[7]_i_1 
       (.I0(s_axi_awaddr_lane1_18[9]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[9]),
        .O(drpaddr_in_lane1[7]));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[8]_i_1 
       (.I0(s_axi_awaddr_lane1_18[10]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[10]),
        .O(drpaddr_in_lane1[8]));
  LUT2 #(
    .INIT(4'hE)) 
    \drpaddr_in_lane1[9]_i_2 
       (.I0(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I1(s_axi_wready_lane1_1),
        .O(\drpaddr_in_lane1[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane1[9]_i_3 
       (.I0(s_axi_awaddr_lane1_18[11]),
        .I1(s_axi_wready_lane1_1),
        .I2(s_axi_araddr_lane1_19[11]),
        .O(drpaddr_in_lane1[9]));
  FDRE \drpaddr_in_lane1_reg[0] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[0]),
        .Q(drpaddr_in[10]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[1] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[1]),
        .Q(drpaddr_in[11]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[2] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[2]),
        .Q(drpaddr_in[12]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[3] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[3]),
        .Q(drpaddr_in[13]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[4] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[4]),
        .Q(drpaddr_in[14]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[5] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[5]),
        .Q(drpaddr_in[15]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[6] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[6]),
        .Q(drpaddr_in[16]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[7] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[7]),
        .Q(drpaddr_in[17]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[8] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[8]),
        .Q(drpaddr_in[18]),
        .R(u_rst_sync_RESET_n_3));
  FDRE \drpaddr_in_lane1_reg[9] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane1[9]_i_2_n_0 ),
        .D(drpaddr_in_lane1[9]),
        .Q(drpaddr_in[19]),
        .R(u_rst_sync_RESET_n_3));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[0]_i_1 
       (.I0(s_axi_awaddr_lane2_20[2]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[2]),
        .O(drpaddr_in_lane2[0]));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[1]_i_1 
       (.I0(s_axi_awaddr_lane2_20[3]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[3]),
        .O(drpaddr_in_lane2[1]));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[2]_i_1 
       (.I0(s_axi_awaddr_lane2_20[4]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[4]),
        .O(drpaddr_in_lane2[2]));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[3]_i_1 
       (.I0(s_axi_awaddr_lane2_20[5]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[5]),
        .O(drpaddr_in_lane2[3]));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[4]_i_1 
       (.I0(s_axi_awaddr_lane2_20[6]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[6]),
        .O(drpaddr_in_lane2[4]));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[5]_i_1 
       (.I0(s_axi_awaddr_lane2_20[7]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[7]),
        .O(drpaddr_in_lane2[5]));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[6]_i_1 
       (.I0(s_axi_awaddr_lane2_20[8]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[8]),
        .O(drpaddr_in_lane2[6]));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[7]_i_1 
       (.I0(s_axi_awaddr_lane2_20[9]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[9]),
        .O(drpaddr_in_lane2[7]));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[8]_i_1 
       (.I0(s_axi_awaddr_lane2_20[10]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[10]),
        .O(drpaddr_in_lane2[8]));
  LUT2 #(
    .INIT(4'hE)) 
    \drpaddr_in_lane2[9]_i_2 
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .I1(s_axi_wready_lane2_2),
        .O(\drpaddr_in_lane2[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane2[9]_i_3 
       (.I0(s_axi_awaddr_lane2_20[11]),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_araddr_lane2_21[11]),
        .O(drpaddr_in_lane2[9]));
  FDRE \drpaddr_in_lane2_reg[0] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[0]),
        .Q(drpaddr_in[20]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[1] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[1]),
        .Q(drpaddr_in[21]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[2] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[2]),
        .Q(drpaddr_in[22]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[3] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[3]),
        .Q(drpaddr_in[23]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[4] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[4]),
        .Q(drpaddr_in[24]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[5] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[5]),
        .Q(drpaddr_in[25]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[6] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[6]),
        .Q(drpaddr_in[26]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[7] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[7]),
        .Q(drpaddr_in[27]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[8] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[8]),
        .Q(drpaddr_in[28]),
        .R(u_rst_sync_RESET_n_5));
  FDRE \drpaddr_in_lane2_reg[9] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane2[9]_i_2_n_0 ),
        .D(drpaddr_in_lane2[9]),
        .Q(drpaddr_in[29]),
        .R(u_rst_sync_RESET_n_5));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[0]_i_1 
       (.I0(s_axi_awaddr_lane3_22[2]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[2]),
        .O(drpaddr_in_lane3[0]));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[1]_i_1 
       (.I0(s_axi_awaddr_lane3_22[3]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[3]),
        .O(drpaddr_in_lane3[1]));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[2]_i_1 
       (.I0(s_axi_awaddr_lane3_22[4]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[4]),
        .O(drpaddr_in_lane3[2]));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[3]_i_1 
       (.I0(s_axi_awaddr_lane3_22[5]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[5]),
        .O(drpaddr_in_lane3[3]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[4]_i_1 
       (.I0(s_axi_awaddr_lane3_22[6]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[6]),
        .O(drpaddr_in_lane3[4]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[5]_i_1 
       (.I0(s_axi_awaddr_lane3_22[7]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[7]),
        .O(drpaddr_in_lane3[5]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[6]_i_1 
       (.I0(s_axi_awaddr_lane3_22[8]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[8]),
        .O(drpaddr_in_lane3[6]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[7]_i_1 
       (.I0(s_axi_awaddr_lane3_22[9]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[9]),
        .O(drpaddr_in_lane3[7]));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[8]_i_1 
       (.I0(s_axi_awaddr_lane3_22[10]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[10]),
        .O(drpaddr_in_lane3[8]));
  LUT2 #(
    .INIT(4'hE)) 
    \drpaddr_in_lane3[9]_i_2 
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .I1(s_axi_wready_lane3_3),
        .O(\drpaddr_in_lane3[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \drpaddr_in_lane3[9]_i_3 
       (.I0(s_axi_awaddr_lane3_22[11]),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_araddr_lane3_23[11]),
        .O(drpaddr_in_lane3[9]));
  FDRE \drpaddr_in_lane3_reg[0] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[0]),
        .Q(drpaddr_in[30]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[1] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[1]),
        .Q(drpaddr_in[31]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[2] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[2]),
        .Q(drpaddr_in[32]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[3] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[3]),
        .Q(drpaddr_in[33]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[4] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[4]),
        .Q(drpaddr_in[34]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[5] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[5]),
        .Q(drpaddr_in[35]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[6] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[6]),
        .Q(drpaddr_in[36]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[7] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[7]),
        .Q(drpaddr_in[37]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[8] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[8]),
        .Q(drpaddr_in[38]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_lane3_reg[9] 
       (.C(init_clk),
        .CE(\drpaddr_in_lane3[9]_i_2_n_0 ),
        .D(drpaddr_in_lane3[9]),
        .Q(drpaddr_in[39]),
        .R(u_rst_sync_RESET_n_7));
  FDRE \drpaddr_in_reg[0] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[0]),
        .Q(drpaddr_in[0]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[1] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[1]),
        .Q(drpaddr_in[1]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[2] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[2]),
        .Q(drpaddr_in[2]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[3] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[3]),
        .Q(drpaddr_in[3]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[4] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[4]),
        .Q(drpaddr_in[4]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[5] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[5]),
        .Q(drpaddr_in[5]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[6] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[6]),
        .Q(drpaddr_in[6]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[7] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[7]),
        .Q(drpaddr_in[7]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[8] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[8]),
        .Q(drpaddr_in[8]),
        .R(u_rst_sync_RESET_n_1));
  FDRE \drpaddr_in_reg[9] 
       (.C(init_clk),
        .CE(\drpaddr_in[9]_i_2_n_0 ),
        .D(drpaddr_in_25[9]),
        .Q(drpaddr_in[9]),
        .R(u_rst_sync_RESET_n_1));
  LUT2 #(
    .INIT(4'h2)) 
    \drpdi_in[15]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[3] ),
        .I1(s_axi_wready_0),
        .O(drpdi_in_24));
  LUT2 #(
    .INIT(4'h2)) 
    \drpdi_in_lane1[15]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ),
        .I1(s_axi_wready_lane1_1),
        .O(drpdi_in_lane1));
  FDRE \drpdi_in_lane1_reg[0] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[0] ),
        .Q(drpdi_in[16]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[10] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[10] ),
        .Q(drpdi_in[26]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[11] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[11] ),
        .Q(drpdi_in[27]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[12] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[12] ),
        .Q(drpdi_in[28]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[13] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[13] ),
        .Q(drpdi_in[29]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[14] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[14] ),
        .Q(drpdi_in[30]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[15] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[15] ),
        .Q(drpdi_in[31]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[1] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[1] ),
        .Q(drpdi_in[17]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[2] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[2] ),
        .Q(drpdi_in[18]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[3] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[3] ),
        .Q(drpdi_in[19]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[4] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[4] ),
        .Q(drpdi_in[20]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[5] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[5] ),
        .Q(drpdi_in[21]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[6] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[6] ),
        .Q(drpdi_in[22]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[7] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[7] ),
        .Q(drpdi_in[23]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[8] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[8] ),
        .Q(drpdi_in[24]),
        .R(reset));
  FDRE \drpdi_in_lane1_reg[9] 
       (.C(init_clk),
        .CE(drpdi_in_lane1),
        .D(\s_axi_wdata_lane1_reg_n_0_[9] ),
        .Q(drpdi_in[25]),
        .R(reset));
  LUT2 #(
    .INIT(4'h2)) 
    \drpdi_in_lane2[15]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ),
        .I1(s_axi_wready_lane2_2),
        .O(drpdi_in_lane2));
  FDRE \drpdi_in_lane2_reg[0] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[0] ),
        .Q(drpdi_in[32]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[10] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[10] ),
        .Q(drpdi_in[42]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[11] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[11] ),
        .Q(drpdi_in[43]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[12] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[12] ),
        .Q(drpdi_in[44]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[13] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[13] ),
        .Q(drpdi_in[45]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[14] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[14] ),
        .Q(drpdi_in[46]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[15] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[15] ),
        .Q(drpdi_in[47]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[1] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[1] ),
        .Q(drpdi_in[33]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[2] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[2] ),
        .Q(drpdi_in[34]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[3] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[3] ),
        .Q(drpdi_in[35]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[4] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[4] ),
        .Q(drpdi_in[36]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[5] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[5] ),
        .Q(drpdi_in[37]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[6] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[6] ),
        .Q(drpdi_in[38]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[7] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[7] ),
        .Q(drpdi_in[39]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[8] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[8] ),
        .Q(drpdi_in[40]),
        .R(reset));
  FDRE \drpdi_in_lane2_reg[9] 
       (.C(init_clk),
        .CE(drpdi_in_lane2),
        .D(\s_axi_wdata_lane2_reg_n_0_[9] ),
        .Q(drpdi_in[41]),
        .R(reset));
  LUT2 #(
    .INIT(4'h2)) 
    \drpdi_in_lane3[15]_i_1 
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ),
        .I1(s_axi_wready_lane3_3),
        .O(drpdi_in_lane3));
  FDRE \drpdi_in_lane3_reg[0] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[0] ),
        .Q(drpdi_in[48]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[10] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[10] ),
        .Q(drpdi_in[58]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[11] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[11] ),
        .Q(drpdi_in[59]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[12] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[12] ),
        .Q(drpdi_in[60]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[13] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[13] ),
        .Q(drpdi_in[61]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[14] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[14] ),
        .Q(drpdi_in[62]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[15] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[15] ),
        .Q(drpdi_in[63]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[1] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[1] ),
        .Q(drpdi_in[49]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[2] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[2] ),
        .Q(drpdi_in[50]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[3] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[3] ),
        .Q(drpdi_in[51]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[4] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[4] ),
        .Q(drpdi_in[52]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[5] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[5] ),
        .Q(drpdi_in[53]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[6] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[6] ),
        .Q(drpdi_in[54]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[7] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[7] ),
        .Q(drpdi_in[55]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[8] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[8] ),
        .Q(drpdi_in[56]),
        .R(reset));
  FDRE \drpdi_in_lane3_reg[9] 
       (.C(init_clk),
        .CE(drpdi_in_lane3),
        .D(\s_axi_wdata_lane3_reg_n_0_[9] ),
        .Q(drpdi_in[57]),
        .R(reset));
  FDRE \drpdi_in_reg[0] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[0] ),
        .Q(drpdi_in[0]),
        .R(reset));
  FDRE \drpdi_in_reg[10] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[10] ),
        .Q(drpdi_in[10]),
        .R(reset));
  FDRE \drpdi_in_reg[11] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[11] ),
        .Q(drpdi_in[11]),
        .R(reset));
  FDRE \drpdi_in_reg[12] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[12] ),
        .Q(drpdi_in[12]),
        .R(reset));
  FDRE \drpdi_in_reg[13] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[13] ),
        .Q(drpdi_in[13]),
        .R(reset));
  FDRE \drpdi_in_reg[14] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[14] ),
        .Q(drpdi_in[14]),
        .R(reset));
  FDRE \drpdi_in_reg[15] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[15] ),
        .Q(drpdi_in[15]),
        .R(reset));
  FDRE \drpdi_in_reg[1] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[1] ),
        .Q(drpdi_in[1]),
        .R(reset));
  FDRE \drpdi_in_reg[2] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[2] ),
        .Q(drpdi_in[2]),
        .R(reset));
  FDRE \drpdi_in_reg[3] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[3] ),
        .Q(drpdi_in[3]),
        .R(reset));
  FDRE \drpdi_in_reg[4] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[4] ),
        .Q(drpdi_in[4]),
        .R(reset));
  FDRE \drpdi_in_reg[5] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[5] ),
        .Q(drpdi_in[5]),
        .R(reset));
  FDRE \drpdi_in_reg[6] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[6] ),
        .Q(drpdi_in[6]),
        .R(reset));
  FDRE \drpdi_in_reg[7] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[7] ),
        .Q(drpdi_in[7]),
        .R(reset));
  FDRE \drpdi_in_reg[8] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[8] ),
        .Q(drpdi_in[8]),
        .R(reset));
  FDRE \drpdi_in_reg[9] 
       (.C(init_clk),
        .CE(drpdi_in_24),
        .D(\s_axi_wdata_reg_n_0_[9] ),
        .Q(drpdi_in[9]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[16]),
        .Q(drpdo_out_lane1[0]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[26]),
        .Q(drpdo_out_lane1[10]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[27]),
        .Q(drpdo_out_lane1[11]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[28]),
        .Q(drpdo_out_lane1[12]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[29]),
        .Q(drpdo_out_lane1[13]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[30]),
        .Q(drpdo_out_lane1[14]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[31]),
        .Q(drpdo_out_lane1[15]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[17]),
        .Q(drpdo_out_lane1[1]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[18]),
        .Q(drpdo_out_lane1[2]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[19]),
        .Q(drpdo_out_lane1[3]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[20]),
        .Q(drpdo_out_lane1[4]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[21]),
        .Q(drpdo_out_lane1[5]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[22]),
        .Q(drpdo_out_lane1[6]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[23]),
        .Q(drpdo_out_lane1[7]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[24]),
        .Q(drpdo_out_lane1[8]),
        .R(reset));
  FDRE \drpdo_out_lane1_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[25]),
        .Q(drpdo_out_lane1[9]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[32]),
        .Q(drpdo_out_lane2[0]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[42]),
        .Q(drpdo_out_lane2[10]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[43]),
        .Q(drpdo_out_lane2[11]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[44]),
        .Q(drpdo_out_lane2[12]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[45]),
        .Q(drpdo_out_lane2[13]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[46]),
        .Q(drpdo_out_lane2[14]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[47]),
        .Q(drpdo_out_lane2[15]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[33]),
        .Q(drpdo_out_lane2[1]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[34]),
        .Q(drpdo_out_lane2[2]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[35]),
        .Q(drpdo_out_lane2[3]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[36]),
        .Q(drpdo_out_lane2[4]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[37]),
        .Q(drpdo_out_lane2[5]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[38]),
        .Q(drpdo_out_lane2[6]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[39]),
        .Q(drpdo_out_lane2[7]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[40]),
        .Q(drpdo_out_lane2[8]),
        .R(reset));
  FDRE \drpdo_out_lane2_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[41]),
        .Q(drpdo_out_lane2[9]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[48]),
        .Q(drpdo_out_lane3[0]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[58]),
        .Q(drpdo_out_lane3[10]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[59]),
        .Q(drpdo_out_lane3[11]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[60]),
        .Q(drpdo_out_lane3[12]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[61]),
        .Q(drpdo_out_lane3[13]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[62]),
        .Q(drpdo_out_lane3[14]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[63]),
        .Q(drpdo_out_lane3[15]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[49]),
        .Q(drpdo_out_lane3[1]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[50]),
        .Q(drpdo_out_lane3[2]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[51]),
        .Q(drpdo_out_lane3[3]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[52]),
        .Q(drpdo_out_lane3[4]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[53]),
        .Q(drpdo_out_lane3[5]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[54]),
        .Q(drpdo_out_lane3[6]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[55]),
        .Q(drpdo_out_lane3[7]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[56]),
        .Q(drpdo_out_lane3[8]),
        .R(reset));
  FDRE \drpdo_out_lane3_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[57]),
        .Q(drpdo_out_lane3[9]),
        .R(reset));
  FDRE \drpdo_out_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[0]),
        .Q(drpdo_out_14[0]),
        .R(reset));
  FDRE \drpdo_out_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[10]),
        .Q(drpdo_out_14[10]),
        .R(reset));
  FDRE \drpdo_out_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[11]),
        .Q(drpdo_out_14[11]),
        .R(reset));
  FDRE \drpdo_out_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[12]),
        .Q(drpdo_out_14[12]),
        .R(reset));
  FDRE \drpdo_out_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[13]),
        .Q(drpdo_out_14[13]),
        .R(reset));
  FDRE \drpdo_out_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[14]),
        .Q(drpdo_out_14[14]),
        .R(reset));
  FDRE \drpdo_out_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[15]),
        .Q(drpdo_out_14[15]),
        .R(reset));
  FDRE \drpdo_out_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[1]),
        .Q(drpdo_out_14[1]),
        .R(reset));
  FDRE \drpdo_out_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[2]),
        .Q(drpdo_out_14[2]),
        .R(reset));
  FDRE \drpdo_out_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[3]),
        .Q(drpdo_out_14[3]),
        .R(reset));
  FDRE \drpdo_out_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[4]),
        .Q(drpdo_out_14[4]),
        .R(reset));
  FDRE \drpdo_out_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[5]),
        .Q(drpdo_out_14[5]),
        .R(reset));
  FDRE \drpdo_out_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[6]),
        .Q(drpdo_out_14[6]),
        .R(reset));
  FDRE \drpdo_out_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[7]),
        .Q(drpdo_out_14[7]),
        .R(reset));
  FDRE \drpdo_out_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[8]),
        .Q(drpdo_out_14[8]),
        .R(reset));
  FDRE \drpdo_out_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(drpdo_out[9]),
        .Q(drpdo_out_14[9]),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFFFEEEFFFFAAAA)) 
    drpen_in_i_1
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .I1(s_axi_wready_0),
        .I2(tx_done),
        .I3(p_0_in25_in),
        .I4(\FSM_onehot_AXI_STATE_reg_n_0_[3] ),
        .I5(drpen_in[0]),
        .O(drpen_in_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEEEFFFFAAAA)) 
    drpen_in_lane1_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I1(s_axi_wready_lane1_1),
        .I2(tx_done_lane1),
        .I3(p_0_in21_in),
        .I4(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ),
        .I5(drpen_in[1]),
        .O(drpen_in_lane1_i_1_n_0));
  FDRE drpen_in_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpen_in_lane1_i_1_n_0),
        .Q(drpen_in[1]),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFFFEEEFFFFAAAA)) 
    drpen_in_lane2_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .I1(s_axi_wready_lane2_2),
        .I2(tx_done_lane2),
        .I3(p_0_in17_in),
        .I4(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ),
        .I5(drpen_in[2]),
        .O(drpen_in_lane2_i_1_n_0));
  FDRE drpen_in_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpen_in_lane2_i_1_n_0),
        .Q(drpen_in[2]),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFFFEEEFFFFAAAA)) 
    drpen_in_lane3_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .I1(s_axi_wready_lane3_3),
        .I2(tx_done_lane3),
        .I3(p_0_in13_in),
        .I4(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ),
        .I5(drpen_in[3]),
        .O(drpen_in_lane3_i_1_n_0));
  FDRE drpen_in_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpen_in_lane3_i_1_n_0),
        .Q(drpen_in[3]),
        .R(reset));
  FDRE drpen_in_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpen_in_i_1_n_0),
        .Q(drpen_in[0]),
        .R(reset));
  FDRE drprdy_out_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drprdy_out[1]),
        .Q(drprdy_out_lane1),
        .R(reset));
  FDRE drprdy_out_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drprdy_out[2]),
        .Q(drprdy_out_lane2),
        .R(reset));
  FDRE drprdy_out_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drprdy_out[3]),
        .Q(drprdy_out_lane3),
        .R(reset));
  FDRE drprdy_out_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drprdy_out[0]),
        .Q(drprdy_out_5),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    drpwe_in_i_1
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[3] ),
        .I1(s_axi_wready_0),
        .I2(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .I3(p_0_in25_in),
        .I4(tx_done),
        .I5(drpwe_in[0]),
        .O(drpwe_in_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    drpwe_in_lane1_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ),
        .I1(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I2(s_axi_wready_lane1_1),
        .I3(p_0_in21_in),
        .I4(tx_done_lane1),
        .I5(drpwe_in[1]),
        .O(drpwe_in_lane1_i_1_n_0));
  FDRE drpwe_in_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpwe_in_lane1_i_1_n_0),
        .Q(drpwe_in[1]),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    drpwe_in_lane2_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ),
        .I1(s_axi_wready_lane2_2),
        .I2(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .I3(p_0_in17_in),
        .I4(tx_done_lane2),
        .I5(drpwe_in[2]),
        .O(drpwe_in_lane2_i_1_n_0));
  FDRE drpwe_in_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpwe_in_lane2_i_1_n_0),
        .Q(drpwe_in[2]),
        .R(reset));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    drpwe_in_lane3_i_1
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ),
        .I1(s_axi_wready_lane3_3),
        .I2(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .I3(p_0_in13_in),
        .I4(tx_done_lane3),
        .I5(drpwe_in[3]),
        .O(drpwe_in_lane3_i_1_n_0));
  FDRE drpwe_in_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpwe_in_lane3_i_1_n_0),
        .Q(drpwe_in[3]),
        .R(reset));
  FDRE drpwe_in_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(drpwe_in_i_1_n_0),
        .Q(drpwe_in[0]),
        .R(reset));
  LUT3 #(
    .INIT(8'hBA)) 
    rd_req_i_1
       (.I0(rd_req0),
        .I1(wr_req),
        .I2(rd_req),
        .O(rd_req_i_1_n_0));
  LUT6 #(
    .INIT(64'h1101000000000000)) 
    rd_req_i_2
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .I1(s_axi_wready_0),
        .I2(s_axi_awvalid),
        .I3(s_axi_arvalid_4),
        .I4(s_axi_awready_reg_n_0),
        .I5(s_axi_arvalid),
        .O(rd_req0));
  LUT3 #(
    .INIT(8'hBA)) 
    rd_req_lane1_i_1
       (.I0(rd_req_lane10),
        .I1(wr_req_lane1),
        .I2(rd_req_lane1),
        .O(rd_req_lane1_i_1_n_0));
  LUT6 #(
    .INIT(64'h1101000000000000)) 
    rd_req_lane1_i_2
       (.I0(s_axi_wready_lane1_1),
        .I1(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I2(s_axi_awvalid_lane1),
        .I3(s_axi_arvalid_lane1_6),
        .I4(s_axi_awready_lane1_reg_n_0),
        .I5(s_axi_arvalid_lane1),
        .O(rd_req_lane10));
  FDRE rd_req_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(rd_req_lane1_i_1_n_0),
        .Q(rd_req_lane1),
        .R(reset));
  LUT3 #(
    .INIT(8'hBA)) 
    rd_req_lane2_i_1
       (.I0(rd_req_lane20),
        .I1(wr_req_lane2),
        .I2(rd_req_lane2),
        .O(rd_req_lane2_i_1_n_0));
  LUT6 #(
    .INIT(64'h1101000000000000)) 
    rd_req_lane2_i_2
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_awvalid_lane2),
        .I3(s_axi_arvalid_lane2_7),
        .I4(s_axi_awready_lane2_reg_n_0),
        .I5(s_axi_arvalid_lane2),
        .O(rd_req_lane20));
  FDRE rd_req_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(rd_req_lane2_i_1_n_0),
        .Q(rd_req_lane2),
        .R(reset));
  LUT3 #(
    .INIT(8'hBA)) 
    rd_req_lane3_i_1
       (.I0(rd_req_lane30),
        .I1(wr_req_lane3),
        .I2(rd_req_lane3),
        .O(rd_req_lane3_i_1_n_0));
  LUT6 #(
    .INIT(64'h1101000000000000)) 
    rd_req_lane3_i_2
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_awvalid_lane3),
        .I3(s_axi_arvalid_lane3_8),
        .I4(s_axi_awready_lane3_reg_n_0),
        .I5(s_axi_arvalid_lane3),
        .O(rd_req_lane30));
  FDRE rd_req_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(rd_req_lane3_i_1_n_0),
        .Q(rd_req_lane3),
        .R(reset));
  FDRE rd_req_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(rd_req_i_1_n_0),
        .Q(rd_req),
        .R(reset));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    ready_det_r_i_2
       (.I0(s_axi_rready),
        .I1(rd_req),
        .I2(s_axi_bready),
        .I3(wr_req_reg_n_0),
        .I4(ready_det_r_reg_n_0),
        .O(ready_det));
  FDRE ready_det_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_RESET_n_9),
        .Q(ready_det_r_reg_n_0),
        .R(1'b0));
  FDRE \s_axi_araddr_lane1_reg[10] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[8]),
        .Q(s_axi_araddr_lane1_19[10]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[11] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[9]),
        .Q(s_axi_araddr_lane1_19[11]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[2] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[0]),
        .Q(s_axi_araddr_lane1_19[2]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[3] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[1]),
        .Q(s_axi_araddr_lane1_19[3]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[4] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[2]),
        .Q(s_axi_araddr_lane1_19[4]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[5] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[3]),
        .Q(s_axi_araddr_lane1_19[5]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[6] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[4]),
        .Q(s_axi_araddr_lane1_19[6]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[7] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[5]),
        .Q(s_axi_araddr_lane1_19[7]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[8] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[6]),
        .Q(s_axi_araddr_lane1_19[8]),
        .R(reset));
  FDRE \s_axi_araddr_lane1_reg[9] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane1),
        .D(s_axi_araddr_lane1[7]),
        .Q(s_axi_araddr_lane1_19[9]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[10] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[8]),
        .Q(s_axi_araddr_lane2_21[10]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[11] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[9]),
        .Q(s_axi_araddr_lane2_21[11]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[2] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[0]),
        .Q(s_axi_araddr_lane2_21[2]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[3] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[1]),
        .Q(s_axi_araddr_lane2_21[3]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[4] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[2]),
        .Q(s_axi_araddr_lane2_21[4]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[5] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[3]),
        .Q(s_axi_araddr_lane2_21[5]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[6] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[4]),
        .Q(s_axi_araddr_lane2_21[6]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[7] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[5]),
        .Q(s_axi_araddr_lane2_21[7]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[8] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[6]),
        .Q(s_axi_araddr_lane2_21[8]),
        .R(reset));
  FDRE \s_axi_araddr_lane2_reg[9] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane2),
        .D(s_axi_araddr_lane2[7]),
        .Q(s_axi_araddr_lane2_21[9]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[10] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[8]),
        .Q(s_axi_araddr_lane3_23[10]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[11] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[9]),
        .Q(s_axi_araddr_lane3_23[11]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[2] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[0]),
        .Q(s_axi_araddr_lane3_23[2]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[3] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[1]),
        .Q(s_axi_araddr_lane3_23[3]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[4] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[2]),
        .Q(s_axi_araddr_lane3_23[4]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[5] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[3]),
        .Q(s_axi_araddr_lane3_23[5]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[6] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[4]),
        .Q(s_axi_araddr_lane3_23[6]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[7] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[5]),
        .Q(s_axi_araddr_lane3_23[7]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[8] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[6]),
        .Q(s_axi_araddr_lane3_23[8]),
        .R(reset));
  FDRE \s_axi_araddr_lane3_reg[9] 
       (.C(init_clk),
        .CE(s_axi_arvalid_lane3),
        .D(s_axi_araddr_lane3[7]),
        .Q(s_axi_araddr_lane3_23[9]),
        .R(reset));
  FDRE \s_axi_araddr_reg[10] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[8]),
        .Q(in10[8]),
        .R(reset));
  FDRE \s_axi_araddr_reg[11] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[9]),
        .Q(in10[9]),
        .R(reset));
  FDRE \s_axi_araddr_reg[2] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[0]),
        .Q(in10[0]),
        .R(reset));
  FDRE \s_axi_araddr_reg[3] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[1]),
        .Q(in10[1]),
        .R(reset));
  FDRE \s_axi_araddr_reg[4] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[2]),
        .Q(in10[2]),
        .R(reset));
  FDRE \s_axi_araddr_reg[5] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[3]),
        .Q(in10[3]),
        .R(reset));
  FDRE \s_axi_araddr_reg[6] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[4]),
        .Q(in10[4]),
        .R(reset));
  FDRE \s_axi_araddr_reg[7] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[5]),
        .Q(in10[5]),
        .R(reset));
  FDRE \s_axi_araddr_reg[8] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[6]),
        .Q(in10[6]),
        .R(reset));
  FDRE \s_axi_araddr_reg[9] 
       (.C(init_clk),
        .CE(s_axi_arvalid),
        .D(s_axi_araddr[7]),
        .Q(in10[7]),
        .R(reset));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    s_axi_arready_INST_0
       (.I0(s_axi_awready_reg_n_0),
        .I1(s_axi_arvalid_4),
        .I2(s_axi_arvalid),
        .I3(s_axi_awvalid),
        .I4(s_axi_wready_0),
        .I5(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .O(s_axi_arready));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    s_axi_arready_lane1_INST_0
       (.I0(s_axi_awready_lane1_reg_n_0),
        .I1(s_axi_arvalid_lane1_6),
        .I2(s_axi_arvalid_lane1),
        .I3(s_axi_awvalid_lane1),
        .I4(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I5(s_axi_wready_lane1_1),
        .O(s_axi_arready_lane1));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    s_axi_arready_lane2_INST_0
       (.I0(s_axi_awready_lane2_reg_n_0),
        .I1(s_axi_arvalid_lane2_7),
        .I2(s_axi_arvalid_lane2),
        .I3(s_axi_awvalid_lane2),
        .I4(s_axi_wready_lane2_2),
        .I5(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .O(s_axi_arready_lane2));
  LUT6 #(
    .INIT(64'h00000000000080AA)) 
    s_axi_arready_lane3_INST_0
       (.I0(s_axi_awready_lane3_reg_n_0),
        .I1(s_axi_arvalid_lane3_8),
        .I2(s_axi_arvalid_lane3),
        .I3(s_axi_awvalid_lane3),
        .I4(s_axi_wready_lane3_3),
        .I5(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .O(s_axi_arready_lane3));
  FDRE s_axi_arvalid_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_arvalid_lane1),
        .Q(s_axi_arvalid_lane1_6),
        .R(reset));
  FDRE s_axi_arvalid_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_arvalid_lane2),
        .Q(s_axi_arvalid_lane2_7),
        .R(reset));
  FDRE s_axi_arvalid_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_arvalid_lane3),
        .Q(s_axi_arvalid_lane3_8),
        .R(reset));
  FDRE s_axi_arvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_arvalid),
        .Q(s_axi_arvalid_4),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[10] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[8]),
        .Q(s_axi_awaddr_lane1_18[10]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[11] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[9]),
        .Q(s_axi_awaddr_lane1_18[11]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[2] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[0]),
        .Q(s_axi_awaddr_lane1_18[2]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[3] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[1]),
        .Q(s_axi_awaddr_lane1_18[3]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[4] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[2]),
        .Q(s_axi_awaddr_lane1_18[4]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[5] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[3]),
        .Q(s_axi_awaddr_lane1_18[5]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[6] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[4]),
        .Q(s_axi_awaddr_lane1_18[6]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[7] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[5]),
        .Q(s_axi_awaddr_lane1_18[7]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[8] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[6]),
        .Q(s_axi_awaddr_lane1_18[8]),
        .R(reset));
  FDRE \s_axi_awaddr_lane1_reg[9] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane1),
        .D(s_axi_awaddr_lane1[7]),
        .Q(s_axi_awaddr_lane1_18[9]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[10] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[8]),
        .Q(s_axi_awaddr_lane2_20[10]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[11] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[9]),
        .Q(s_axi_awaddr_lane2_20[11]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[2] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[0]),
        .Q(s_axi_awaddr_lane2_20[2]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[3] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[1]),
        .Q(s_axi_awaddr_lane2_20[3]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[4] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[2]),
        .Q(s_axi_awaddr_lane2_20[4]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[5] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[3]),
        .Q(s_axi_awaddr_lane2_20[5]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[6] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[4]),
        .Q(s_axi_awaddr_lane2_20[6]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[7] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[5]),
        .Q(s_axi_awaddr_lane2_20[7]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[8] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[6]),
        .Q(s_axi_awaddr_lane2_20[8]),
        .R(reset));
  FDRE \s_axi_awaddr_lane2_reg[9] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane2),
        .D(s_axi_awaddr_lane2[7]),
        .Q(s_axi_awaddr_lane2_20[9]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[10] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[8]),
        .Q(s_axi_awaddr_lane3_22[10]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[11] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[9]),
        .Q(s_axi_awaddr_lane3_22[11]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[2] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[0]),
        .Q(s_axi_awaddr_lane3_22[2]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[3] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[1]),
        .Q(s_axi_awaddr_lane3_22[3]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[4] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[2]),
        .Q(s_axi_awaddr_lane3_22[4]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[5] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[3]),
        .Q(s_axi_awaddr_lane3_22[5]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[6] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[4]),
        .Q(s_axi_awaddr_lane3_22[6]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[7] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[5]),
        .Q(s_axi_awaddr_lane3_22[7]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[8] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[6]),
        .Q(s_axi_awaddr_lane3_22[8]),
        .R(reset));
  FDRE \s_axi_awaddr_lane3_reg[9] 
       (.C(init_clk),
        .CE(s_axi_awvalid_lane3),
        .D(s_axi_awaddr_lane3[7]),
        .Q(s_axi_awaddr_lane3_22[9]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[10] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[8]),
        .Q(in9[8]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[11] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[9]),
        .Q(in9[9]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[2] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[0]),
        .Q(in9[0]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[3] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[1]),
        .Q(in9[1]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[4] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[2]),
        .Q(in9[2]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[5] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[3]),
        .Q(in9[3]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[6] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[4]),
        .Q(in9[4]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[7] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[5]),
        .Q(in9[5]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[8] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[6]),
        .Q(in9[6]),
        .R(reset));
  FDRE \s_axi_awaddr_reg[9] 
       (.C(init_clk),
        .CE(s_axi_awvalid),
        .D(s_axi_awaddr[7]),
        .Q(in9[7]),
        .R(reset));
  LUT5 #(
    .INIT(32'h00000002)) 
    s_axi_awready_INST_0
       (.I0(s_axi_awready_reg_n_0),
        .I1(s_axi_arvalid_4),
        .I2(s_axi_arvalid),
        .I3(s_axi_wready_0),
        .I4(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .O(s_axi_awready));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT4 #(
    .INIT(16'hF111)) 
    s_axi_awready_i_1
       (.I0(wr_req_reg_n_0),
        .I1(rd_req),
        .I2(wr_req),
        .I3(s_axi_awready_reg_n_0),
        .O(s_axi_awready_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000002)) 
    s_axi_awready_lane1_INST_0
       (.I0(s_axi_awready_lane1_reg_n_0),
        .I1(s_axi_arvalid_lane1),
        .I2(s_axi_arvalid_lane1_6),
        .I3(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I4(s_axi_wready_lane1_1),
        .O(s_axi_awready_lane1));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT4 #(
    .INIT(16'hF111)) 
    s_axi_awready_lane1_i_1
       (.I0(wr_req_lane1_reg_n_0),
        .I1(rd_req_lane1),
        .I2(wr_req_lane1),
        .I3(s_axi_awready_lane1_reg_n_0),
        .O(s_axi_awready_lane1_i_1_n_0));
  FDRE s_axi_awready_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_awready_lane1_i_1_n_0),
        .Q(s_axi_awready_lane1_reg_n_0),
        .R(reset));
  LUT5 #(
    .INIT(32'h00000002)) 
    s_axi_awready_lane2_INST_0
       (.I0(s_axi_awready_lane2_reg_n_0),
        .I1(s_axi_arvalid_lane2),
        .I2(s_axi_arvalid_lane2_7),
        .I3(s_axi_wready_lane2_2),
        .I4(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .O(s_axi_awready_lane2));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT4 #(
    .INIT(16'hF111)) 
    s_axi_awready_lane2_i_1
       (.I0(wr_req_lane2_reg_n_0),
        .I1(rd_req_lane2),
        .I2(wr_req_lane2),
        .I3(s_axi_awready_lane2_reg_n_0),
        .O(s_axi_awready_lane2_i_1_n_0));
  FDRE s_axi_awready_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_awready_lane2_i_1_n_0),
        .Q(s_axi_awready_lane2_reg_n_0),
        .R(reset));
  LUT5 #(
    .INIT(32'h00000002)) 
    s_axi_awready_lane3_INST_0
       (.I0(s_axi_awready_lane3_reg_n_0),
        .I1(s_axi_arvalid_lane3_8),
        .I2(s_axi_arvalid_lane3),
        .I3(s_axi_wready_lane3_3),
        .I4(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .O(s_axi_awready_lane3));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT4 #(
    .INIT(16'hF111)) 
    s_axi_awready_lane3_i_1
       (.I0(wr_req_lane3_reg_n_0),
        .I1(rd_req_lane3),
        .I2(wr_req_lane3),
        .I3(s_axi_awready_lane3_reg_n_0),
        .O(s_axi_awready_lane3_i_1_n_0));
  FDRE s_axi_awready_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_awready_lane3_i_1_n_0),
        .Q(s_axi_awready_lane3_reg_n_0),
        .R(reset));
  FDRE s_axi_awready_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_awready_i_1_n_0),
        .Q(s_axi_awready_reg_n_0),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_bvalid_INST_0
       (.I0(s_axi_bvalid_9),
        .I1(tx_done),
        .I2(tx_done_r),
        .O(s_axi_bvalid));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_bvalid_i_1
       (.I0(tx_done_r),
        .I1(tx_done),
        .I2(s_axi_bvalid_9),
        .I3(wr_req_reg_n_0),
        .I4(drprdy_out_5),
        .O(s_axi_bvalid_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_bvalid_lane1_INST_0
       (.I0(s_axi_bvalid_lane1_10),
        .I1(tx_done_lane1),
        .I2(tx_done_lane1_r),
        .O(s_axi_bvalid_lane1));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_bvalid_lane1_i_1
       (.I0(tx_done_lane1_r),
        .I1(tx_done_lane1),
        .I2(s_axi_bvalid_lane1_10),
        .I3(wr_req_lane1_reg_n_0),
        .I4(drprdy_out_lane1),
        .O(s_axi_bvalid_lane1_i_1_n_0));
  FDRE s_axi_bvalid_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_bvalid_lane1_i_1_n_0),
        .Q(s_axi_bvalid_lane1_10),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_bvalid_lane2_INST_0
       (.I0(s_axi_bvalid_lane2_11),
        .I1(tx_done_lane2),
        .I2(tx_done_lane2_r),
        .O(s_axi_bvalid_lane2));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_bvalid_lane2_i_1
       (.I0(tx_done_lane2_r),
        .I1(tx_done_lane2),
        .I2(s_axi_bvalid_lane2_11),
        .I3(wr_req_lane2_reg_n_0),
        .I4(drprdy_out_lane2),
        .O(s_axi_bvalid_lane2_i_1_n_0));
  FDRE s_axi_bvalid_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_bvalid_lane2_i_1_n_0),
        .Q(s_axi_bvalid_lane2_11),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_bvalid_lane3_INST_0
       (.I0(s_axi_bvalid_lane3_12),
        .I1(tx_done_lane3),
        .I2(tx_done_lane3_r),
        .O(s_axi_bvalid_lane3));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_bvalid_lane3_i_1
       (.I0(tx_done_lane3_r),
        .I1(tx_done_lane3),
        .I2(s_axi_bvalid_lane3_12),
        .I3(wr_req_lane3_reg_n_0),
        .I4(drprdy_out_lane3),
        .O(s_axi_bvalid_lane3_i_1_n_0));
  FDRE s_axi_bvalid_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_bvalid_lane3_i_1_n_0),
        .Q(s_axi_bvalid_lane3_12),
        .R(reset));
  FDRE s_axi_bvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_1_n_0),
        .Q(s_axi_bvalid_9),
        .R(reset));
  LUT2 #(
    .INIT(4'hE)) 
    \s_axi_rdata[15]_i_2 
       (.I0(drprdy_out_5),
        .I1(s_axi_rvalid_13),
        .O(s_axi_rdata0));
  LUT2 #(
    .INIT(4'hE)) 
    \s_axi_rdata_lane1[15]_i_2 
       (.I0(drprdy_out_lane1),
        .I1(s_axi_rvalid_lane1_15),
        .O(s_axi_rdata_lane10));
  FDRE \s_axi_rdata_lane1_reg[0] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[0]),
        .Q(s_axi_rdata_lane1[0]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[10] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[10]),
        .Q(s_axi_rdata_lane1[10]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[11] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[11]),
        .Q(s_axi_rdata_lane1[11]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[12] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[12]),
        .Q(s_axi_rdata_lane1[12]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[13] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[13]),
        .Q(s_axi_rdata_lane1[13]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[14] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[14]),
        .Q(s_axi_rdata_lane1[14]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[15] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[15]),
        .Q(s_axi_rdata_lane1[15]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[1] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[1]),
        .Q(s_axi_rdata_lane1[1]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[2] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[2]),
        .Q(s_axi_rdata_lane1[2]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[3] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[3]),
        .Q(s_axi_rdata_lane1[3]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[4] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[4]),
        .Q(s_axi_rdata_lane1[4]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[5] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[5]),
        .Q(s_axi_rdata_lane1[5]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[6] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[6]),
        .Q(s_axi_rdata_lane1[6]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[7] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[7]),
        .Q(s_axi_rdata_lane1[7]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[8] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[8]),
        .Q(s_axi_rdata_lane1[8]),
        .R(u_rst_sync_RESET_n_4));
  FDRE \s_axi_rdata_lane1_reg[9] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane10),
        .D(drpdo_out_lane1[9]),
        .Q(s_axi_rdata_lane1[9]),
        .R(u_rst_sync_RESET_n_4));
  LUT2 #(
    .INIT(4'hE)) 
    \s_axi_rdata_lane2[15]_i_2 
       (.I0(drprdy_out_lane2),
        .I1(s_axi_rvalid_lane2_16),
        .O(s_axi_rdata_lane20));
  FDRE \s_axi_rdata_lane2_reg[0] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[0]),
        .Q(s_axi_rdata_lane2[0]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[10] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[10]),
        .Q(s_axi_rdata_lane2[10]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[11] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[11]),
        .Q(s_axi_rdata_lane2[11]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[12] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[12]),
        .Q(s_axi_rdata_lane2[12]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[13] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[13]),
        .Q(s_axi_rdata_lane2[13]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[14] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[14]),
        .Q(s_axi_rdata_lane2[14]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[15] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[15]),
        .Q(s_axi_rdata_lane2[15]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[1] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[1]),
        .Q(s_axi_rdata_lane2[1]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[2] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[2]),
        .Q(s_axi_rdata_lane2[2]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[3] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[3]),
        .Q(s_axi_rdata_lane2[3]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[4] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[4]),
        .Q(s_axi_rdata_lane2[4]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[5] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[5]),
        .Q(s_axi_rdata_lane2[5]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[6] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[6]),
        .Q(s_axi_rdata_lane2[6]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[7] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[7]),
        .Q(s_axi_rdata_lane2[7]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[8] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[8]),
        .Q(s_axi_rdata_lane2[8]),
        .R(u_rst_sync_RESET_n_6));
  FDRE \s_axi_rdata_lane2_reg[9] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane20),
        .D(drpdo_out_lane2[9]),
        .Q(s_axi_rdata_lane2[9]),
        .R(u_rst_sync_RESET_n_6));
  LUT2 #(
    .INIT(4'hE)) 
    \s_axi_rdata_lane3[15]_i_2 
       (.I0(drprdy_out_lane3),
        .I1(s_axi_rvalid_lane3_17),
        .O(s_axi_rdata_lane30));
  FDRE \s_axi_rdata_lane3_reg[0] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[0]),
        .Q(s_axi_rdata_lane3[0]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[10] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[10]),
        .Q(s_axi_rdata_lane3[10]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[11] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[11]),
        .Q(s_axi_rdata_lane3[11]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[12] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[12]),
        .Q(s_axi_rdata_lane3[12]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[13] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[13]),
        .Q(s_axi_rdata_lane3[13]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[14] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[14]),
        .Q(s_axi_rdata_lane3[14]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[15] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[15]),
        .Q(s_axi_rdata_lane3[15]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[1] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[1]),
        .Q(s_axi_rdata_lane3[1]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[2] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[2]),
        .Q(s_axi_rdata_lane3[2]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[3] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[3]),
        .Q(s_axi_rdata_lane3[3]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[4] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[4]),
        .Q(s_axi_rdata_lane3[4]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[5] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[5]),
        .Q(s_axi_rdata_lane3[5]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[6] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[6]),
        .Q(s_axi_rdata_lane3[6]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[7] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[7]),
        .Q(s_axi_rdata_lane3[7]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[8] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[8]),
        .Q(s_axi_rdata_lane3[8]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_lane3_reg[9] 
       (.C(init_clk),
        .CE(s_axi_rdata_lane30),
        .D(drpdo_out_lane3[9]),
        .Q(s_axi_rdata_lane3[9]),
        .R(u_rst_sync_RESET_n_8));
  FDRE \s_axi_rdata_reg[0] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[0]),
        .Q(s_axi_rdata[0]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[10] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[10]),
        .Q(s_axi_rdata[10]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[11] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[11]),
        .Q(s_axi_rdata[11]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[12] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[12]),
        .Q(s_axi_rdata[12]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[13] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[13]),
        .Q(s_axi_rdata[13]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[14] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[14]),
        .Q(s_axi_rdata[14]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[15] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[15]),
        .Q(s_axi_rdata[15]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[1] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[1]),
        .Q(s_axi_rdata[1]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[2] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[2]),
        .Q(s_axi_rdata[2]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[3] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[3]),
        .Q(s_axi_rdata[3]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[4] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[4]),
        .Q(s_axi_rdata[4]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[5] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[5]),
        .Q(s_axi_rdata[5]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[6] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[6]),
        .Q(s_axi_rdata[6]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[7] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[7]),
        .Q(s_axi_rdata[7]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[8] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[8]),
        .Q(s_axi_rdata[8]),
        .R(p_0_in));
  FDRE \s_axi_rdata_reg[9] 
       (.C(init_clk),
        .CE(s_axi_rdata0),
        .D(drpdo_out_14[9]),
        .Q(s_axi_rdata[9]),
        .R(p_0_in));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_rvalid_INST_0
       (.I0(s_axi_rvalid_13),
        .I1(tx_done),
        .I2(tx_done_r),
        .O(s_axi_rvalid));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_rvalid_i_1
       (.I0(tx_done_r),
        .I1(tx_done),
        .I2(s_axi_rvalid_13),
        .I3(rd_req),
        .I4(drprdy_out_5),
        .O(s_axi_rvalid_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_rvalid_lane1_INST_0
       (.I0(s_axi_rvalid_lane1_15),
        .I1(tx_done_lane1),
        .I2(tx_done_lane1_r),
        .O(s_axi_rvalid_lane1));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_rvalid_lane1_i_1
       (.I0(tx_done_lane1_r),
        .I1(tx_done_lane1),
        .I2(s_axi_rvalid_lane1_15),
        .I3(rd_req_lane1),
        .I4(drprdy_out_lane1),
        .O(s_axi_rvalid_lane1_i_1_n_0));
  FDRE s_axi_rvalid_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_rvalid_lane1_i_1_n_0),
        .Q(s_axi_rvalid_lane1_15),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_rvalid_lane2_INST_0
       (.I0(s_axi_rvalid_lane2_16),
        .I1(tx_done_lane2),
        .I2(tx_done_lane2_r),
        .O(s_axi_rvalid_lane2));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_rvalid_lane2_i_1
       (.I0(tx_done_lane2_r),
        .I1(tx_done_lane2),
        .I2(s_axi_rvalid_lane2_16),
        .I3(rd_req_lane2),
        .I4(drprdy_out_lane2),
        .O(s_axi_rvalid_lane2_i_1_n_0));
  FDRE s_axi_rvalid_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_rvalid_lane2_i_1_n_0),
        .Q(s_axi_rvalid_lane2_16),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_axi_rvalid_lane3_INST_0
       (.I0(s_axi_rvalid_lane3_17),
        .I1(tx_done_lane3),
        .I2(tx_done_lane3_r),
        .O(s_axi_rvalid_lane3));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    s_axi_rvalid_lane3_i_1
       (.I0(tx_done_lane3_r),
        .I1(tx_done_lane3),
        .I2(s_axi_rvalid_lane3_17),
        .I3(rd_req_lane3),
        .I4(drprdy_out_lane3),
        .O(s_axi_rvalid_lane3_i_1_n_0));
  FDRE s_axi_rvalid_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_rvalid_lane3_i_1_n_0),
        .Q(s_axi_rvalid_lane3_17),
        .R(reset));
  FDRE s_axi_rvalid_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_1_n_0),
        .Q(s_axi_rvalid_13),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[0] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[0]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[0] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[10] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[10]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[10] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[11] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[11]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[11] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[12] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[12]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[12] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[13] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[13]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[13] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[14] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[14]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[14] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[15] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[15]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[15] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[1] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[1]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[1] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[2] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[2]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[2] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[3] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[3]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[3] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[4] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[4]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[4] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[5] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[5]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[5] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[6] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[6]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[6] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[7] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[7]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[7] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[8] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[8]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[8] ),
        .R(reset));
  FDRE \s_axi_wdata_lane1_reg[9] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane1),
        .D(s_axi_wdata_lane1[9]),
        .Q(\s_axi_wdata_lane1_reg_n_0_[9] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[0] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[0]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[0] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[10] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[10]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[10] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[11] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[11]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[11] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[12] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[12]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[12] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[13] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[13]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[13] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[14] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[14]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[14] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[15] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[15]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[15] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[1] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[1]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[1] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[2] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[2]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[2] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[3] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[3]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[3] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[4] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[4]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[4] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[5] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[5]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[5] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[6] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[6]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[6] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[7] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[7]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[7] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[8] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[8]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[8] ),
        .R(reset));
  FDRE \s_axi_wdata_lane2_reg[9] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane2),
        .D(s_axi_wdata_lane2[9]),
        .Q(\s_axi_wdata_lane2_reg_n_0_[9] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[0] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[0]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[0] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[10] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[10]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[10] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[11] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[11]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[11] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[12] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[12]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[12] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[13] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[13]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[13] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[14] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[14]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[14] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[15] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[15]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[15] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[1] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[1]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[1] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[2] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[2]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[2] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[3] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[3]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[3] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[4] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[4]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[4] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[5] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[5]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[5] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[6] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[6]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[6] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[7] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[7]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[7] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[8] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[8]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[8] ),
        .R(reset));
  FDRE \s_axi_wdata_lane3_reg[9] 
       (.C(init_clk),
        .CE(s_axi_wvalid_lane3),
        .D(s_axi_wdata_lane3[9]),
        .Q(\s_axi_wdata_lane3_reg_n_0_[9] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[0] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[0]),
        .Q(\s_axi_wdata_reg_n_0_[0] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[10] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[10]),
        .Q(\s_axi_wdata_reg_n_0_[10] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[11] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[11]),
        .Q(\s_axi_wdata_reg_n_0_[11] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[12] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[12]),
        .Q(\s_axi_wdata_reg_n_0_[12] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[13] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[13]),
        .Q(\s_axi_wdata_reg_n_0_[13] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[14] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[14]),
        .Q(\s_axi_wdata_reg_n_0_[14] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[15] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[15]),
        .Q(\s_axi_wdata_reg_n_0_[15] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[1] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[1]),
        .Q(\s_axi_wdata_reg_n_0_[1] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[2] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[2]),
        .Q(\s_axi_wdata_reg_n_0_[2] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[3] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[3]),
        .Q(\s_axi_wdata_reg_n_0_[3] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[4] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[4]),
        .Q(\s_axi_wdata_reg_n_0_[4] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[5] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[5]),
        .Q(\s_axi_wdata_reg_n_0_[5] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[6] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[6]),
        .Q(\s_axi_wdata_reg_n_0_[6] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[7] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[7]),
        .Q(\s_axi_wdata_reg_n_0_[7] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[8] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[8]),
        .Q(\s_axi_wdata_reg_n_0_[8] ),
        .R(reset));
  FDRE \s_axi_wdata_reg[9] 
       (.C(init_clk),
        .CE(s_axi_wvalid),
        .D(s_axi_wdata[9]),
        .Q(\s_axi_wdata_reg_n_0_[9] ),
        .R(reset));
  FDRE s_axi_wready_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_wready_lane1_1),
        .Q(s_axi_wready_lane1),
        .R(reset));
  FDRE s_axi_wready_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_wready_lane2_2),
        .Q(s_axi_wready_lane2),
        .R(reset));
  FDRE s_axi_wready_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_wready_lane3_3),
        .Q(s_axi_wready_lane3),
        .R(reset));
  FDRE s_axi_wready_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_axi_wready_0),
        .Q(s_axi_wready),
        .R(reset));
  LUT3 #(
    .INIT(8'hBA)) 
    tx_done_i_1
       (.I0(drprdy_out_5),
        .I1(ready_det),
        .I2(tx_done),
        .O(tx_done_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    tx_done_lane1_i_1
       (.I0(drprdy_out_lane1),
        .I1(tx_done_lane1_i_2_n_0),
        .I2(tx_done_lane1),
        .O(tx_done_lane1_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    tx_done_lane1_i_2
       (.I0(drprdy_out_lane1),
        .I1(ready_det_r_reg_n_0),
        .I2(wr_req_lane1_reg_n_0),
        .I3(s_axi_bready_lane1),
        .I4(rd_req_lane1),
        .I5(s_axi_rready_lane1),
        .O(tx_done_lane1_i_2_n_0));
  FDRE tx_done_lane1_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane1),
        .Q(tx_done_lane1_r),
        .R(1'b0));
  FDRE tx_done_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane1_i_1_n_0),
        .Q(tx_done_lane1),
        .R(reset));
  LUT3 #(
    .INIT(8'hB8)) 
    tx_done_lane2_i_1
       (.I0(drprdy_out_lane2),
        .I1(tx_done_lane2_i_2_n_0),
        .I2(tx_done_lane2),
        .O(tx_done_lane2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    tx_done_lane2_i_2
       (.I0(drprdy_out_lane2),
        .I1(ready_det_r_reg_n_0),
        .I2(wr_req_lane2_reg_n_0),
        .I3(s_axi_bready_lane2),
        .I4(rd_req_lane2),
        .I5(s_axi_rready_lane2),
        .O(tx_done_lane2_i_2_n_0));
  FDRE tx_done_lane2_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane2),
        .Q(tx_done_lane2_r),
        .R(1'b0));
  FDRE tx_done_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane2_i_1_n_0),
        .Q(tx_done_lane2),
        .R(reset));
  LUT3 #(
    .INIT(8'hB8)) 
    tx_done_lane3_i_1
       (.I0(drprdy_out_lane3),
        .I1(tx_done_lane3_i_2_n_0),
        .I2(tx_done_lane3),
        .O(tx_done_lane3_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    tx_done_lane3_i_2
       (.I0(drprdy_out_lane3),
        .I1(ready_det_r_reg_n_0),
        .I2(wr_req_lane3_reg_n_0),
        .I3(s_axi_bready_lane3),
        .I4(rd_req_lane3),
        .I5(s_axi_rready_lane3),
        .O(tx_done_lane3_i_2_n_0));
  FDRE tx_done_lane3_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane3),
        .Q(tx_done_lane3_r),
        .R(1'b0));
  FDRE tx_done_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_lane3_i_1_n_0),
        .Q(tx_done_lane3),
        .R(reset));
  FDRE tx_done_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done),
        .Q(tx_done_r),
        .R(1'b0));
  FDRE tx_done_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(tx_done_i_1_n_0),
        .Q(tx_done),
        .R(reset));
  aurora_64b66b_w256_1375Gbps_rst_sync_7 u_rst_sync_RESET
       (.Q({s_axi_wready_0,\FSM_onehot_AXI_STATE_reg_n_0_[3] ,\FSM_onehot_AXI_STATE_reg_n_0_[2] ,p_0_in25_in,wr_req}),
        .RESET(RESET),
        .SR(u_rst_sync_RESET_n_1),
        .\drpaddr_in_lane1_reg[0] ({s_axi_wready_lane1_1,\FSM_onehot_AXI_STATE_lane1_reg_n_0_[3] ,\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ,p_0_in21_in}),
        .\drpaddr_in_lane2_reg[0] ({s_axi_wready_lane2_2,\FSM_onehot_AXI_STATE_lane2_reg_n_0_[3] ,\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ,p_0_in17_in}),
        .\drpaddr_in_lane3_reg[0] ({s_axi_wready_lane3_3,\FSM_onehot_AXI_STATE_lane3_reg_n_0_[3] ,\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ,p_0_in13_in}),
        .drprdy_out_5(drprdy_out_5),
        .drprdy_out_lane1(drprdy_out_lane1),
        .drprdy_out_lane2(drprdy_out_lane2),
        .drprdy_out_lane3(drprdy_out_lane3),
        .init_clk(init_clk),
        .ready_det(ready_det),
        .ready_det_r_reg(ready_det_r_reg_n_0),
        .reset(reset),
        .\s_axi_rdata_lane1_reg[15] (s_axi_rvalid_lane1_15),
        .\s_axi_rdata_lane2_reg[15] (s_axi_rvalid_lane2_16),
        .\s_axi_rdata_lane3_reg[15] (s_axi_rvalid_lane3_17),
        .\s_axi_rdata_reg[0] (s_axi_rvalid_13),
        .stg5_reg_0(p_0_in),
        .stg5_reg_1(u_rst_sync_RESET_n_3),
        .stg5_reg_2(u_rst_sync_RESET_n_4),
        .stg5_reg_3(u_rst_sync_RESET_n_5),
        .stg5_reg_4(u_rst_sync_RESET_n_6),
        .stg5_reg_5(u_rst_sync_RESET_n_7),
        .stg5_reg_6(u_rst_sync_RESET_n_8),
        .stg5_reg_7(u_rst_sync_RESET_n_9),
        .tx_done(tx_done),
        .tx_done_lane1(tx_done_lane1),
        .tx_done_lane1_r(tx_done_lane1_r),
        .tx_done_lane2(tx_done_lane2),
        .tx_done_lane2_r(tx_done_lane2_r),
        .tx_done_lane3(tx_done_lane3),
        .tx_done_lane3_r(tx_done_lane3_r),
        .tx_done_r(tx_done_r));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    wr_req_i_1
       (.I0(wr_req0),
        .I1(wr_req),
        .I2(wr_req_reg_n_0),
        .O(wr_req_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    wr_req_i_2
       (.I0(\FSM_onehot_AXI_STATE_reg_n_0_[2] ),
        .I1(s_axi_wready_0),
        .I2(s_axi_arvalid),
        .I3(s_axi_arvalid_4),
        .I4(s_axi_awready_reg_n_0),
        .I5(s_axi_awvalid),
        .O(wr_req0));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    wr_req_lane1_i_1
       (.I0(wr_req_lane10),
        .I1(wr_req_lane1),
        .I2(wr_req_lane1_reg_n_0),
        .O(wr_req_lane1_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    wr_req_lane1_i_2
       (.I0(s_axi_wready_lane1_1),
        .I1(\FSM_onehot_AXI_STATE_lane1_reg_n_0_[2] ),
        .I2(s_axi_arvalid_lane1_6),
        .I3(s_axi_arvalid_lane1),
        .I4(s_axi_awready_lane1_reg_n_0),
        .I5(s_axi_awvalid_lane1),
        .O(wr_req_lane10));
  FDRE wr_req_lane1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(wr_req_lane1_i_1_n_0),
        .Q(wr_req_lane1_reg_n_0),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    wr_req_lane2_i_1
       (.I0(wr_req_lane20),
        .I1(wr_req_lane2),
        .I2(wr_req_lane2_reg_n_0),
        .O(wr_req_lane2_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    wr_req_lane2_i_2
       (.I0(\FSM_onehot_AXI_STATE_lane2_reg_n_0_[2] ),
        .I1(s_axi_wready_lane2_2),
        .I2(s_axi_arvalid_lane2_7),
        .I3(s_axi_arvalid_lane2),
        .I4(s_axi_awready_lane2_reg_n_0),
        .I5(s_axi_awvalid_lane2),
        .O(wr_req_lane20));
  FDRE wr_req_lane2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(wr_req_lane2_i_1_n_0),
        .Q(wr_req_lane2_reg_n_0),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    wr_req_lane3_i_1
       (.I0(wr_req_lane30),
        .I1(wr_req_lane3),
        .I2(wr_req_lane3_reg_n_0),
        .O(wr_req_lane3_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    wr_req_lane3_i_2
       (.I0(\FSM_onehot_AXI_STATE_lane3_reg_n_0_[2] ),
        .I1(s_axi_wready_lane3_3),
        .I2(s_axi_arvalid_lane3),
        .I3(s_axi_arvalid_lane3_8),
        .I4(s_axi_awready_lane3_reg_n_0),
        .I5(s_axi_awvalid_lane3),
        .O(wr_req_lane30));
  FDRE wr_req_lane3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(wr_req_lane3_i_1_n_0),
        .Q(wr_req_lane3_reg_n_0),
        .R(reset));
  FDRE wr_req_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(wr_req_i_1_n_0),
        .Q(wr_req_reg_n_0),
        .R(reset));
endmodule

module aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM
   (D,
    system_reset_r2,
    blocksync_out_i,
    gtwiz_userclk_rx_usrclk_out,
    SR,
    Q,
    rxheadervalid_i);
  output [0:0]D;
  output system_reset_r2;
  output blocksync_out_i;
  input gtwiz_userclk_rx_usrclk_out;
  input [0:0]SR;
  input [1:0]Q;
  input rxheadervalid_i;

  wire BLOCKSYNC_OUT_i_1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10_n_0;
  wire RXGEARBOXSLIP_OUT_i_11_n_0;
  wire RXGEARBOXSLIP_OUT_i_12_n_0;
  wire RXGEARBOXSLIP_OUT_i_2_n_0;
  wire RXGEARBOXSLIP_OUT_i_5_n_0;
  wire RXGEARBOXSLIP_OUT_i_6_n_0;
  wire RXGEARBOXSLIP_OUT_i_7_n_0;
  wire RXGEARBOXSLIP_OUT_i_8_n_0;
  wire RXGEARBOXSLIP_OUT_i_9_n_0;
  wire [0:0]SR;
  wire begin_r;
  wire begin_r_i_2__3_n_0;
  wire blocksync_out_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__3;
  wire [9:0]p_0_in__4;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_3_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2_n_0;
  wire test_sh_r_i_3_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(system_reset_r2),
        .I2(blocksync_out_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1_n_0),
        .Q(blocksync_out_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    RXGEARBOXSLIP_OUT_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6_n_0),
        .O(slip_pulse_i));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_10
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_10_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_11
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2
       (.I0(test_sh_r_i_2_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_3
       (.I0(RXGEARBOXSLIP_OUT_i_7_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_8_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_9_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_10_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_4
       (.I0(RXGEARBOXSLIP_OUT_i_11_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_12_n_0),
        .I2(sync_header_invalid_count_i_reg[3]),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(blocksync_out_i),
        .O(next_slip_c0__0));
  LUT5 #(
    .INIT(32'hAAAAAA2A)) 
    RXGEARBOXSLIP_OUT_i_5
       (.I0(p_1_in[3]),
        .I1(RXGEARBOXSLIP_OUT_i_11_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_12_n_0),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(sync_header_invalid_count_i_reg[3]),
        .O(RXGEARBOXSLIP_OUT_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_6
       (.I0(p_1_in[1]),
        .I1(data2),
        .O(RXGEARBOXSLIP_OUT_i_6_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_7
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_8
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_8_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_9
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_9_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__3
       (.I0(begin_r_i_2__3_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__3
       (.I0(test_sh_r_i_2_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__3_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2
       (.I0(sync_done_r),
        .I1(rxheadervalid_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_invalid_r_i_2_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1
       (.I0(test_sh_r_i_2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[0]),
        .I5(RXGEARBOXSLIP_OUT_i_11_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__3[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__3[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__3[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__3[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__4[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__4[5]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__4[6]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__4[7]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__4[8]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__4[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__4[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  FDRE system_reset_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  FDRE system_reset_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(SR),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAA00AAAAAA0020)) 
    test_sh_r_i_1
       (.I0(test_sh_r_i_2_n_0),
        .I1(next_slip_c0__0),
        .I2(p_1_in[2]),
        .I3(sh_count_equals_max_i__14),
        .I4(test_sh_r_i_3_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3
       (.I0(rxheadervalid_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM" *) 
module aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_27
   (D,
    blocksync_out_lane1_i,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane1_i);
  output [0:0]D;
  output blocksync_out_lane1_i;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane1_i;

  wire BLOCKSYNC_OUT_i_1__0_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__0_n_0;
  wire begin_r;
  wire begin_r_i_2__4_n_0;
  wire blocksync_out_lane1_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__7;
  wire [9:0]p_0_in__8;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane1_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__0_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_3__0_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__0_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__0_n_0;
  wire test_sh_r_i_3__0_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__0
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane1_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__0_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__0_n_0),
        .Q(blocksync_out_lane1_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_10__0
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_10__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_11__0
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__0
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    RXGEARBOXSLIP_OUT_i_1__0
       (.I0(RXGEARBOXSLIP_OUT_i_2__0_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__0_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_3__0
       (.I0(RXGEARBOXSLIP_OUT_i_7__0_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_8__0_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_9__0_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_10__0_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_4__0
       (.I0(RXGEARBOXSLIP_OUT_i_11__0_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_12__0_n_0),
        .I2(sync_header_invalid_count_i_reg[3]),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(blocksync_out_lane1_i),
        .O(next_slip_c0__0));
  LUT5 #(
    .INIT(32'hAAAAAA2A)) 
    RXGEARBOXSLIP_OUT_i_5__0
       (.I0(p_1_in[3]),
        .I1(RXGEARBOXSLIP_OUT_i_11__0_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_12__0_n_0),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(sync_header_invalid_count_i_reg[3]),
        .O(RXGEARBOXSLIP_OUT_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_6__0
       (.I0(p_1_in[1]),
        .I1(data2),
        .O(RXGEARBOXSLIP_OUT_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_7__0
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_7__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_8__0
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_9__0
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_9__0_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__4
       (.I0(begin_r_i_2__4_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__4
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__4_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__0
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__0_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__0
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane1_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_invalid_r_i_2__0_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__0
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__0_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__0 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__0_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__0
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3__0_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2__0
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[0]),
        .I5(RXGEARBOXSLIP_OUT_i_11__0_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3__0
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3__0_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__7[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__7[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__0 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__7[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__0 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__7[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__8[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__8[1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__8[2]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__8[3]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__8[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__8[5]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__0 
       (.I0(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__8[6]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__0 
       (.I0(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__8[7]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__8[8]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__8[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__0 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__0_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__8[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA00AAAAAA0020)) 
    test_sh_r_i_1__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(next_slip_c0__0),
        .I2(p_1_in[2]),
        .I3(sh_count_equals_max_i__14),
        .I4(test_sh_r_i_3__0_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__0
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__0
       (.I0(rxheadervalid_lane1_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__0_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM" *) 
module aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_28
   (D,
    blocksync_out_lane2_i,
    blocksync_all_lanes_inrxclk,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane2_i,
    blocksync_out_lane3_i,
    blocksync_out_i,
    blocksync_out_lane1_i);
  output [0:0]D;
  output blocksync_out_lane2_i;
  output blocksync_all_lanes_inrxclk;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane2_i;
  input blocksync_out_lane3_i;
  input blocksync_out_i;
  input blocksync_out_lane1_i;

  wire BLOCKSYNC_OUT_i_1__1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__1_n_0;
  wire begin_r;
  wire begin_r_i_2__5_n_0;
  wire blocksync_all_lanes_inrxclk;
  wire blocksync_out_i;
  wire blocksync_out_lane1_i;
  wire blocksync_out_lane2_i;
  wire blocksync_out_lane3_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__11;
  wire [9:0]p_0_in__12;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane2_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__1_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_3__1_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__1_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__1_n_0;
  wire test_sh_r_i_3__1_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__1
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane2_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__1_n_0),
        .Q(blocksync_out_lane2_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_10__1
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_10__1_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_11__1
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_11__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__1
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    RXGEARBOXSLIP_OUT_i_1__1
       (.I0(RXGEARBOXSLIP_OUT_i_2__1_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__1_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_3__1
       (.I0(RXGEARBOXSLIP_OUT_i_7__1_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_8__1_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_9__1_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_10__1_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_4__1
       (.I0(RXGEARBOXSLIP_OUT_i_11__1_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_12__1_n_0),
        .I2(sync_header_invalid_count_i_reg[3]),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(blocksync_out_lane2_i),
        .O(next_slip_c0__0));
  LUT5 #(
    .INIT(32'hAAAAAA2A)) 
    RXGEARBOXSLIP_OUT_i_5__1
       (.I0(p_1_in[3]),
        .I1(RXGEARBOXSLIP_OUT_i_11__1_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_12__1_n_0),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(sync_header_invalid_count_i_reg[3]),
        .O(RXGEARBOXSLIP_OUT_i_5__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_6__1
       (.I0(p_1_in[1]),
        .I1(data2),
        .O(RXGEARBOXSLIP_OUT_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_7__1
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_7__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_8__1
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_8__1_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_9__1
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_9__1_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__5
       (.I0(begin_r_i_2__5_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__5
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__5_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT4 #(
    .INIT(16'h8000)) 
    blocksync_all_lanes_inrxclk_q_i_1
       (.I0(blocksync_out_lane2_i),
        .I1(blocksync_out_lane3_i),
        .I2(blocksync_out_i),
        .I3(blocksync_out_lane1_i),
        .O(blocksync_all_lanes_inrxclk));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__1_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__1
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane2_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_invalid_r_i_2__1_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__1_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__1 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__1_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__1
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3__1_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2__1
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[0]),
        .I5(RXGEARBOXSLIP_OUT_i_11__1_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3__1
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3__1_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__11[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__11[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__1 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__11[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__11[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__12[0]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__12[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__12[2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__12[3]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__12[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__12[5]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__1 
       (.I0(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__12[6]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__1 
       (.I0(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__12[7]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__12[8]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__12[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__1 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__1_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__12[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA00AAAAAA0020)) 
    test_sh_r_i_1__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(next_slip_c0__0),
        .I2(p_1_in[2]),
        .I3(sh_count_equals_max_i__14),
        .I4(test_sh_r_i_3__1_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__1
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__1_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__1
       (.I0(rxheadervalid_lane2_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__1_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM" *) 
module aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_29
   (D,
    blocksync_out_lane3_i,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane3_i);
  output [0:0]D;
  output blocksync_out_lane3_i;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane3_i;

  wire BLOCKSYNC_OUT_i_1__2_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__2_n_0;
  wire begin_r;
  wire begin_r_i_2__6_n_0;
  wire blocksync_out_lane3_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_slip_c0__0;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__15;
  wire [9:0]p_0_in__16;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane3_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__2_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_3__2_n_0;
  wire sync_header_count_i0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__2_n_0;
  wire test_sh_r_i_3__2_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__2
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane3_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__2_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__2_n_0),
        .Q(blocksync_out_lane3_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_10__2
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_10__2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_11__2
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_11__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__2
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    RXGEARBOXSLIP_OUT_i_1__2
       (.I0(RXGEARBOXSLIP_OUT_i_2__2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__2_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_3__2
       (.I0(RXGEARBOXSLIP_OUT_i_7__2_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_8__2_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_9__2_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_10__2_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h0800FFFF)) 
    RXGEARBOXSLIP_OUT_i_4__2
       (.I0(RXGEARBOXSLIP_OUT_i_11__2_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_12__2_n_0),
        .I2(sync_header_invalid_count_i_reg[3]),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(blocksync_out_lane3_i),
        .O(next_slip_c0__0));
  LUT5 #(
    .INIT(32'hAAAAAA2A)) 
    RXGEARBOXSLIP_OUT_i_5__2
       (.I0(p_1_in[3]),
        .I1(RXGEARBOXSLIP_OUT_i_11__2_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_12__2_n_0),
        .I3(sync_header_invalid_count_i_reg[4]),
        .I4(sync_header_invalid_count_i_reg[3]),
        .O(RXGEARBOXSLIP_OUT_i_5__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_6__2
       (.I0(p_1_in[1]),
        .I1(data2),
        .O(RXGEARBOXSLIP_OUT_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_7__2
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_7__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_8__2
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_8__2_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_9__2
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_9__2_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__6
       (.I0(begin_r_i_2__6_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(next_slip_c0__0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__6
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__6_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__2
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__2
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane3_i),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .O(sh_invalid_r_i_2__2_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__2
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__2 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAAA0A08000)) 
    slip_r_i_1__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(next_slip_c0__0),
        .I3(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .I4(p_1_in[2]),
        .I5(RXGEARBOXSLIP_OUT_i_6__2_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__2
       (.I0(sh_invalid_cnt_equals_zero_i__4),
        .I1(sync_done_r_i_3__2_n_0),
        .I2(sh_count_equals_max_i__14),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    sync_done_r_i_2__2
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[0]),
        .I5(RXGEARBOXSLIP_OUT_i_11__2_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_3__2
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_3__2_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__15[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__15[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__2 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__15[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__2 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(sync_header_count_i0));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sync_header_count_i0),
        .D(p_0_in__15[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__16[0]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__16[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__16[2]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__16[3]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__16[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__16[5]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__2 
       (.I0(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__16[6]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__2 
       (.I0(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__16[7]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__16[8]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__16[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__2 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__16[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA00AAAAAA0020)) 
    test_sh_r_i_1__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(next_slip_c0__0),
        .I2(p_1_in[2]),
        .I3(sh_count_equals_max_i__14),
        .I4(test_sh_r_i_3__2_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__2_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__2
       (.I0(rxheadervalid_lane3_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__2_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

module aurora_64b66b_w256_1375Gbps_CHANNEL_BOND_GEN
   (gen_ch_bond_int_reg_0,
    gen_ch_bond_int_reg_1,
    gen_ch_bond_int_reg_2,
    gen_ch_bond_int_reg_3,
    gen_ch_bond_int_reg_4,
    TXDATAVALID_IN,
    user_clk,
    gen_cc_i,
    \free_count_r_reg[4]_0 ,
    gen_ch_bond_int_reg_5);
  output gen_ch_bond_int_reg_0;
  output gen_ch_bond_int_reg_1;
  output gen_ch_bond_int_reg_2;
  output gen_ch_bond_int_reg_3;
  output gen_ch_bond_int_reg_4;
  input TXDATAVALID_IN;
  input user_clk;
  input [0:3]gen_cc_i;
  input \free_count_r_reg[4]_0 ;
  input gen_ch_bond_int_reg_5;

  wire TXDATAVALID_IN;
  wire \free_count_r[0]_i_1_n_0 ;
  wire \free_count_r[0]_i_3_n_0 ;
  wire [0:4]free_count_r_reg;
  wire \free_count_r_reg[4]_0 ;
  wire [0:3]gen_cc_i;
  wire gen_ch_bond_int_i_1_n_0;
  wire gen_ch_bond_int_reg_0;
  wire gen_ch_bond_int_reg_1;
  wire gen_ch_bond_int_reg_2;
  wire gen_ch_bond_int_reg_3;
  wire gen_ch_bond_int_reg_4;
  wire gen_ch_bond_int_reg_5;
  wire [4:0]p_0_in__0;
  wire txdatavalid_in_r1;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TX_DATA[53]_i_2 
       (.I0(gen_ch_bond_int_reg_0),
        .I1(gen_cc_i[1]),
        .O(gen_ch_bond_int_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TX_DATA[53]_i_2__0 
       (.I0(gen_ch_bond_int_reg_0),
        .I1(gen_cc_i[2]),
        .O(gen_ch_bond_int_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TX_DATA[53]_i_2__1 
       (.I0(gen_ch_bond_int_reg_0),
        .I1(gen_cc_i[3]),
        .O(gen_ch_bond_int_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TX_DATA[53]_i_3 
       (.I0(gen_ch_bond_int_reg_0),
        .I1(gen_cc_i[0]),
        .O(gen_ch_bond_int_reg_1));
  LUT4 #(
    .INIT(16'hFF20)) 
    \free_count_r[0]_i_1 
       (.I0(txdatavalid_in_r1),
        .I1(free_count_r_reg[0]),
        .I2(\free_count_r[0]_i_3_n_0 ),
        .I3(\free_count_r_reg[4]_0 ),
        .O(\free_count_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \free_count_r[0]_i_2 
       (.I0(free_count_r_reg[1]),
        .I1(free_count_r_reg[3]),
        .I2(free_count_r_reg[4]),
        .I3(free_count_r_reg[2]),
        .I4(free_count_r_reg[0]),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \free_count_r[0]_i_3 
       (.I0(free_count_r_reg[3]),
        .I1(free_count_r_reg[4]),
        .I2(free_count_r_reg[2]),
        .I3(free_count_r_reg[1]),
        .O(\free_count_r[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \free_count_r[1]_i_1 
       (.I0(free_count_r_reg[2]),
        .I1(free_count_r_reg[4]),
        .I2(free_count_r_reg[3]),
        .I3(free_count_r_reg[1]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \free_count_r[2]_i_1 
       (.I0(free_count_r_reg[3]),
        .I1(free_count_r_reg[4]),
        .I2(free_count_r_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \free_count_r[3]_i_1 
       (.I0(free_count_r_reg[4]),
        .I1(free_count_r_reg[3]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \free_count_r[4]_i_1 
       (.I0(free_count_r_reg[4]),
        .O(p_0_in__0[0]));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[0] 
       (.C(user_clk),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__0[4]),
        .Q(free_count_r_reg[0]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[1] 
       (.C(user_clk),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__0[3]),
        .Q(free_count_r_reg[1]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[2] 
       (.C(user_clk),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__0[2]),
        .Q(free_count_r_reg[2]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[3] 
       (.C(user_clk),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__0[1]),
        .Q(free_count_r_reg[3]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[4] 
       (.C(user_clk),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__0[0]),
        .Q(free_count_r_reg[4]),
        .R(\free_count_r[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    gen_ch_bond_int_i_1
       (.I0(free_count_r_reg[1]),
        .I1(free_count_r_reg[2]),
        .I2(free_count_r_reg[4]),
        .I3(free_count_r_reg[3]),
        .I4(gen_ch_bond_int_reg_5),
        .I5(free_count_r_reg[0]),
        .O(gen_ch_bond_int_i_1_n_0));
  FDRE gen_ch_bond_int_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(gen_ch_bond_int_i_1_n_0),
        .Q(gen_ch_bond_int_reg_0),
        .R(1'b0));
  FDRE txdatavalid_in_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATAVALID_IN),
        .Q(txdatavalid_in_r1),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_CHANNEL_ERR_DETECT
   (hard_err,
    hard_err_i,
    user_clk);
  output hard_err;
  input [0:3]hard_err_i;
  input user_clk;

  wire channel_hard_err_c__0;
  wire hard_err;
  wire [0:3]hard_err_i;
  wire user_clk;

  FDRE CHANNEL_HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_hard_err_c__0),
        .Q(hard_err),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    channel_hard_err_c
       (.I0(hard_err_i[2]),
        .I1(hard_err_i[3]),
        .I2(hard_err_i[0]),
        .I3(hard_err_i[1]),
        .O(channel_hard_err_c__0));
endmodule

module aurora_64b66b_w256_1375Gbps_CHANNEL_INIT_SM
   (RESET_LANES,
    EN_CHAN_SYNC,
    CHAN_BOND_RESET,
    chan_bond_reset_i,
    CHANNEL_UP_RX_IF,
    CHANNEL_UP_TX_IF_reg_0,
    D,
    channel_bond_r_reg_0,
    \gen_cc_blk[1].gen_cc_flop ,
    \gen_cc_blk[2].gen_cc_flop ,
    \gen_cc_blk[3].gen_cc_flop ,
    SR,
    R0,
    \gen_cc_blk[0].gen_cc_flop ,
    \gen_cc_blk[1].gen_cc_flop_0 ,
    \gen_cc_blk[2].gen_cc_flop_0 ,
    \gen_cc_blk[3].gen_cc_flop_0 ,
    CHANNEL_UP_RX_IF_reg_0,
    stg5_reg,
    stg5_reg_0,
    stg5_reg_1,
    stg5_reg_2,
    stg5_reg_3,
    stg5_reg_4,
    stg5_reg_5,
    stg5_reg_6,
    stg5_reg_7,
    stg5_reg_8,
    stg5_reg_9,
    stg5_reg_10,
    stg5_reg_11,
    stg5_reg_12,
    stg5_reg_13,
    stg5_reg_14,
    user_clk,
    ch_bond_done_i,
    wait_for_lane_up_r0,
    CHANNEL_UP_TX_IF_reg_1,
    remote_ready_r_reg_0,
    got_idles_i,
    \TX_DATA_reg[59] ,
    gen_cc_i,
    rst_pma_init_usrclk,
    Q,
    \TX_DATA_reg[53] ,
    tx_pe_data_v_i,
    rst_pma_init_usrclk_0,
    \TX_DATA_reg[53]_0 ,
    rst_pma_init_usrclk_1,
    \TX_DATA_reg[53]_1 ,
    rst_pma_init_usrclk_2,
    \TX_DATA_reg[53]_2 ,
    reset_lanes_flop_0_i_0,
    reset_lanes_flop_0_i_1,
    reset_lanes_flop_0_i_2,
    lane_up,
    \chan_bond_timer_reg[0]_0 ,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    rx_pe_data_v_i);
  output RESET_LANES;
  output EN_CHAN_SYNC;
  output CHAN_BOND_RESET;
  output chan_bond_reset_i;
  output CHANNEL_UP_RX_IF;
  output CHANNEL_UP_TX_IF_reg_0;
  output [3:0]D;
  output channel_bond_r_reg_0;
  output [3:0]\gen_cc_blk[1].gen_cc_flop ;
  output [3:0]\gen_cc_blk[2].gen_cc_flop ;
  output [3:0]\gen_cc_blk[3].gen_cc_flop ;
  output SR;
  output R0;
  output \gen_cc_blk[0].gen_cc_flop ;
  output \gen_cc_blk[1].gen_cc_flop_0 ;
  output \gen_cc_blk[2].gen_cc_flop_0 ;
  output \gen_cc_blk[3].gen_cc_flop_0 ;
  output CHANNEL_UP_RX_IF_reg_0;
  output stg5_reg;
  output stg5_reg_0;
  output stg5_reg_1;
  output stg5_reg_2;
  output stg5_reg_3;
  output stg5_reg_4;
  output stg5_reg_5;
  output stg5_reg_6;
  output stg5_reg_7;
  output stg5_reg_8;
  output stg5_reg_9;
  output stg5_reg_10;
  output stg5_reg_11;
  output stg5_reg_12;
  output stg5_reg_13;
  output stg5_reg_14;
  input user_clk;
  input [0:3]ch_bond_done_i;
  input wait_for_lane_up_r0;
  input CHANNEL_UP_TX_IF_reg_1;
  input remote_ready_r_reg_0;
  input [0:3]got_idles_i;
  input \TX_DATA_reg[59] ;
  input [0:3]gen_cc_i;
  input rst_pma_init_usrclk;
  input [31:0]Q;
  input \TX_DATA_reg[53] ;
  input [0:0]tx_pe_data_v_i;
  input rst_pma_init_usrclk_0;
  input \TX_DATA_reg[53]_0 ;
  input rst_pma_init_usrclk_1;
  input \TX_DATA_reg[53]_1 ;
  input rst_pma_init_usrclk_2;
  input \TX_DATA_reg[53]_2 ;
  input reset_lanes_flop_0_i_0;
  input reset_lanes_flop_0_i_1;
  input reset_lanes_flop_0_i_2;
  input [0:0]lane_up;
  input \chan_bond_timer_reg[0]_0 ;
  input \TX_DATA_reg[63] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input [0:3]rx_pe_data_v_i;

  wire CHANNEL_UP_RX_IF;
  wire CHANNEL_UP_RX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_1;
  wire CHAN_BOND_RESET;
  wire [3:0]D;
  wire EN_CHAN_SYNC;
  wire [31:0]Q;
  wire R0;
  wire RESET_LANES;
  wire SR;
  wire \TX_DATA_reg[53] ;
  wire \TX_DATA_reg[53]_0 ;
  wire \TX_DATA_reg[53]_1 ;
  wire \TX_DATA_reg[53]_2 ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire all_ch_bond_done_c__0;
  wire any_idles_r;
  wire any_idles_r0_n_0;
  wire bond_passed_r;
  wire [0:3]ch_bond_done_i;
  wire chan_bond_reset_i;
  (* RTL_KEEP = "true" *) wire [8:0]chan_bond_timeout_val;
  wire [8:0]chan_bond_timer;
  wire \chan_bond_timer[0]_i_1_n_0 ;
  wire \chan_bond_timer[8]_i_4_n_0 ;
  wire [8:8]chan_bond_timer_1;
  wire \chan_bond_timer_reg[0]_0 ;
  wire channel_bond_q;
  wire channel_bond_qq;
  wire channel_bond_r;
  wire channel_bond_r_reg_0;
  wire channel_up_c;
  wire channel_up_rx_c;
  wire \gen_cc_blk[0].gen_cc_flop ;
  wire [3:0]\gen_cc_blk[1].gen_cc_flop ;
  wire \gen_cc_blk[1].gen_cc_flop_0 ;
  wire [3:0]\gen_cc_blk[2].gen_cc_flop ;
  wire \gen_cc_blk[2].gen_cc_flop_0 ;
  wire [3:0]\gen_cc_blk[3].gen_cc_flop ;
  wire \gen_cc_blk[3].gen_cc_flop_0 ;
  wire [0:3]gen_cc_i;
  wire gen_na_idles_i;
  wire [0:3]got_idles_i;
  wire idle_xmit_cntr;
  wire \idle_xmit_cntr[0]_i_1_n_0 ;
  wire \idle_xmit_cntr[0]_i_3_n_0 ;
  wire \idle_xmit_cntr[0]_i_4_n_0 ;
  wire \idle_xmit_cntr[1]_i_1_n_0 ;
  wire \idle_xmit_cntr[2]_i_1_n_0 ;
  wire \idle_xmit_cntr[3]_i_1_n_0 ;
  wire \idle_xmit_cntr[4]_i_1_n_0 ;
  wire \idle_xmit_cntr[5]_i_1_n_0 ;
  wire \idle_xmit_cntr_reg_n_0_[0] ;
  wire \idle_xmit_cntr_reg_n_0_[1] ;
  wire \idle_xmit_cntr_reg_n_0_[2] ;
  wire \idle_xmit_cntr_reg_n_0_[3] ;
  wire \idle_xmit_cntr_reg_n_0_[4] ;
  wire \idle_xmit_cntr_reg_n_0_[5] ;
  wire [0:0]lane_up;
  wire next_channel_bond_c;
  wire next_ready_c;
  wire next_wait_for_remote_c;
  wire p_0_in;
  wire [8:1]p_2_in;
  wire ready_r;
  wire remote_ready_r;
  wire remote_ready_r_reg_0;
  wire reset_lanes_c;
  wire reset_lanes_flop_0_i_0;
  wire reset_lanes_flop_0_i_1;
  wire reset_lanes_flop_0_i_2;
  (* RTL_KEEP = "true" *) wire reset_watchdog;
  wire reset_watchdog_i_2_n_0;
  wire reset_watchdog_i_3_n_0;
  wire reset_watchdog_i_4_n_0;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:3]rx_pe_data_v_i;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_10;
  wire stg5_reg_11;
  wire stg5_reg_12;
  wire stg5_reg_13;
  wire stg5_reg_14;
  wire stg5_reg_2;
  wire stg5_reg_3;
  wire stg5_reg_4;
  wire stg5_reg_5;
  wire stg5_reg_6;
  wire stg5_reg_7;
  wire stg5_reg_8;
  wire stg5_reg_9;
  wire [0:0]tx_pe_data_v_i;
  wire user_clk;
  wire wait_for_lane_up_r;
  wire wait_for_lane_up_r0;
  wire wait_for_remote_r;
  wire wait_for_remote_r_i_2_n_0;
  wire [0:2]watchdog_count_r;
  wire \watchdog_count_r[0]_i_1_n_0 ;
  wire \watchdog_count_r[0]_i_2_n_0 ;
  wire \watchdog_count_r[1]_i_1_n_0 ;
  wire \watchdog_count_r[2]_i_1_n_0 ;

  LUT3 #(
    .INIT(8'hF4)) 
    CHANNEL_UP_RX_IF_i_1
       (.I0(bond_passed_r),
        .I1(ready_r),
        .I2(remote_ready_r),
        .O(channel_up_rx_c));
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_RX_IF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_up_rx_c),
        .Q(CHANNEL_UP_RX_IF),
        .R(CHANNEL_UP_TX_IF_reg_1));
  LUT6 #(
    .INIT(64'h1500FFFF00000000)) 
    CHANNEL_UP_TX_IF_i_1
       (.I0(channel_bond_r),
        .I1(wait_for_remote_r),
        .I2(wait_for_remote_r_i_2_n_0),
        .I3(remote_ready_r),
        .I4(bond_passed_r),
        .I5(ready_r),
        .O(channel_up_c));
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_up_c),
        .Q(CHANNEL_UP_TX_IF_reg_0),
        .R(CHANNEL_UP_TX_IF_reg_1));
  LUT3 #(
    .INIT(8'hFE)) 
    CHAN_BOND_RESET_i_1
       (.I0(watchdog_count_r[1]),
        .I1(watchdog_count_r[2]),
        .I2(watchdog_count_r[0]),
        .O(chan_bond_reset_i));
  FDRE #(
    .INIT(1'b0)) 
    CHAN_BOND_RESET_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(chan_bond_reset_i),
        .Q(CHAN_BOND_RESET),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0003000200020002)) 
    \TX_DATA[52]_i_1 
       (.I0(channel_bond_r_reg_0),
        .I1(\TX_DATA_reg[59] ),
        .I2(gen_cc_i[0]),
        .I3(rst_pma_init_usrclk),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[28]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0003000200020002)) 
    \TX_DATA[52]_i_1__0 
       (.I0(channel_bond_r_reg_0),
        .I1(\TX_DATA_reg[59] ),
        .I2(gen_cc_i[1]),
        .I3(rst_pma_init_usrclk_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[20]),
        .O(\gen_cc_blk[1].gen_cc_flop [0]));
  LUT6 #(
    .INIT(64'h0003000200020002)) 
    \TX_DATA[52]_i_1__1 
       (.I0(channel_bond_r_reg_0),
        .I1(\TX_DATA_reg[59] ),
        .I2(gen_cc_i[2]),
        .I3(rst_pma_init_usrclk_1),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[12]),
        .O(\gen_cc_blk[2].gen_cc_flop [0]));
  LUT6 #(
    .INIT(64'h0003000200020002)) 
    \TX_DATA[52]_i_1__2 
       (.I0(channel_bond_r_reg_0),
        .I1(\TX_DATA_reg[59] ),
        .I2(gen_cc_i[3]),
        .I3(rst_pma_init_usrclk_2),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[4]),
        .O(\gen_cc_blk[3].gen_cc_flop [0]));
  LUT6 #(
    .INIT(64'h0000322200002222)) 
    \TX_DATA[53]_i_1 
       (.I0(gen_na_idles_i),
        .I1(\TX_DATA_reg[53] ),
        .I2(tx_pe_data_v_i),
        .I3(Q[29]),
        .I4(rst_pma_init_usrclk),
        .I5(CHANNEL_UP_TX_IF_reg_0),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0000322200002222)) 
    \TX_DATA[53]_i_1__0 
       (.I0(gen_na_idles_i),
        .I1(\TX_DATA_reg[53]_0 ),
        .I2(tx_pe_data_v_i),
        .I3(Q[21]),
        .I4(rst_pma_init_usrclk_0),
        .I5(CHANNEL_UP_TX_IF_reg_0),
        .O(\gen_cc_blk[1].gen_cc_flop [1]));
  LUT6 #(
    .INIT(64'h0000322200002222)) 
    \TX_DATA[53]_i_1__1 
       (.I0(gen_na_idles_i),
        .I1(\TX_DATA_reg[53]_1 ),
        .I2(tx_pe_data_v_i),
        .I3(Q[13]),
        .I4(rst_pma_init_usrclk_1),
        .I5(CHANNEL_UP_TX_IF_reg_0),
        .O(\gen_cc_blk[2].gen_cc_flop [1]));
  LUT6 #(
    .INIT(64'h0000322200002222)) 
    \TX_DATA[53]_i_1__2 
       (.I0(gen_na_idles_i),
        .I1(\TX_DATA_reg[53]_2 ),
        .I2(tx_pe_data_v_i),
        .I3(Q[5]),
        .I4(rst_pma_init_usrclk_2),
        .I5(CHANNEL_UP_TX_IF_reg_0),
        .O(\gen_cc_blk[3].gen_cc_flop [1]));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \TX_DATA[53]_i_2__2 
       (.I0(wait_for_lane_up_r),
        .I1(channel_bond_r),
        .O(gen_na_idles_i));
  LUT6 #(
    .INIT(64'h000A000A000E000A)) 
    \TX_DATA[54]_i_1 
       (.I0(\TX_DATA_reg[59] ),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk),
        .I3(gen_cc_i[0]),
        .I4(Q[30]),
        .I5(channel_bond_r_reg_0),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h000A000A000E000A)) 
    \TX_DATA[54]_i_1__0 
       (.I0(\TX_DATA_reg[59] ),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_0),
        .I3(gen_cc_i[1]),
        .I4(Q[22]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[1].gen_cc_flop [2]));
  LUT6 #(
    .INIT(64'h000A000A000E000A)) 
    \TX_DATA[54]_i_1__1 
       (.I0(\TX_DATA_reg[59] ),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_1),
        .I3(gen_cc_i[2]),
        .I4(Q[14]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[2].gen_cc_flop [2]));
  LUT6 #(
    .INIT(64'h000A000A000E000A)) 
    \TX_DATA[54]_i_1__2 
       (.I0(\TX_DATA_reg[59] ),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_2),
        .I3(gen_cc_i[3]),
        .I4(Q[6]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[3].gen_cc_flop [2]));
  LUT6 #(
    .INIT(64'h0A0A0A0A0A0E0A0A)) 
    \TX_DATA[55]_i_2 
       (.I0(gen_cc_i[0]),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk),
        .I3(\TX_DATA_reg[59] ),
        .I4(Q[31]),
        .I5(channel_bond_r_reg_0),
        .O(D[3]));
  LUT6 #(
    .INIT(64'h0A0A0A0A0A0E0A0A)) 
    \TX_DATA[55]_i_2__0 
       (.I0(gen_cc_i[1]),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_0),
        .I3(\TX_DATA_reg[59] ),
        .I4(Q[23]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[1].gen_cc_flop [3]));
  LUT6 #(
    .INIT(64'h0A0A0A0A0A0E0A0A)) 
    \TX_DATA[55]_i_2__1 
       (.I0(gen_cc_i[2]),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_1),
        .I3(\TX_DATA_reg[59] ),
        .I4(Q[15]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[2].gen_cc_flop [3]));
  LUT6 #(
    .INIT(64'h0A0A0A0A0A0E0A0A)) 
    \TX_DATA[55]_i_2__2 
       (.I0(gen_cc_i[3]),
        .I1(CHANNEL_UP_TX_IF_reg_0),
        .I2(rst_pma_init_usrclk_2),
        .I3(\TX_DATA_reg[59] ),
        .I4(Q[7]),
        .I5(channel_bond_r_reg_0),
        .O(\gen_cc_blk[3].gen_cc_flop [3]));
  LUT3 #(
    .INIT(8'hEF)) 
    \TX_DATA[55]_i_4 
       (.I0(channel_bond_r),
        .I1(wait_for_lane_up_r),
        .I2(tx_pe_data_v_i),
        .O(channel_bond_r_reg_0));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[59]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(gen_cc_i[0]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[24]),
        .O(stg5_reg_2));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[59]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[16]),
        .O(stg5_reg_6));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[59]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[8]),
        .O(stg5_reg_10));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[59]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[0]),
        .O(stg5_reg_14));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[60]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(gen_cc_i[0]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[25]),
        .O(stg5_reg_1));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[60]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[17]),
        .O(stg5_reg_5));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[60]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[9]),
        .O(stg5_reg_9));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[60]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[1]),
        .O(stg5_reg_13));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[61]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(gen_cc_i[0]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[26]),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[61]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[18]),
        .O(stg5_reg_4));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[61]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[10]),
        .O(stg5_reg_8));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[61]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[2]),
        .O(stg5_reg_12));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[62]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(gen_cc_i[0]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[27]),
        .O(stg5_reg));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[62]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[19]),
        .O(stg5_reg_3));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[62]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[11]),
        .O(stg5_reg_7));
  LUT6 #(
    .INIT(64'h5555555455545554)) 
    \TX_DATA[62]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(Q[3]),
        .O(stg5_reg_11));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAA8AAAA)) 
    \TX_DATA[63]_i_1 
       (.I0(\TX_DATA_reg[63] ),
        .I1(gen_cc_i[0]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(rst_pma_init_usrclk),
        .O(\gen_cc_blk[0].gen_cc_flop ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAA8AAAA)) 
    \TX_DATA[63]_i_1__0 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(rst_pma_init_usrclk_0),
        .O(\gen_cc_blk[1].gen_cc_flop_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAA8AAAA)) 
    \TX_DATA[63]_i_1__1 
       (.I0(\TX_DATA_reg[63]_1 ),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(rst_pma_init_usrclk_1),
        .O(\gen_cc_blk[2].gen_cc_flop_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAA8AAAA)) 
    \TX_DATA[63]_i_1__2 
       (.I0(\TX_DATA_reg[63]_2 ),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[59] ),
        .I3(channel_bond_r_reg_0),
        .I4(CHANNEL_UP_TX_IF_reg_0),
        .I5(rst_pma_init_usrclk_2),
        .O(\gen_cc_blk[3].gen_cc_flop_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    all_ch_bond_done_c
       (.I0(ch_bond_done_i[2]),
        .I1(ch_bond_done_i[3]),
        .I2(ch_bond_done_i[0]),
        .I3(ch_bond_done_i[1]),
        .O(all_ch_bond_done_c__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    any_idles_r0
       (.I0(got_idles_i[2]),
        .I1(got_idles_i[3]),
        .I2(got_idles_i[0]),
        .I3(got_idles_i[1]),
        .O(any_idles_r0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    any_idles_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(any_idles_r0_n_0),
        .Q(any_idles_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    bond_passed_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(all_ch_bond_done_c__0),
        .Q(bond_passed_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000001001111)) 
    \chan_bond_timer[0]_i_1 
       (.I0(wait_for_lane_up_r),
        .I1(bond_passed_r),
        .I2(channel_bond_q),
        .I3(channel_bond_qq),
        .I4(chan_bond_timer[0]),
        .I5(\chan_bond_timer_reg[0]_0 ),
        .O(\chan_bond_timer[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \chan_bond_timer[1]_i_1 
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timer[1]),
        .O(p_2_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \chan_bond_timer[2]_i_1 
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timer[1]),
        .I2(chan_bond_timer[2]),
        .O(p_2_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \chan_bond_timer[3]_i_1 
       (.I0(chan_bond_timer[1]),
        .I1(chan_bond_timer[0]),
        .I2(chan_bond_timer[2]),
        .I3(chan_bond_timer[3]),
        .O(p_2_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \chan_bond_timer[4]_i_1 
       (.I0(chan_bond_timer[2]),
        .I1(chan_bond_timer[0]),
        .I2(chan_bond_timer[1]),
        .I3(chan_bond_timer[3]),
        .I4(chan_bond_timer[4]),
        .O(p_2_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \chan_bond_timer[5]_i_1 
       (.I0(chan_bond_timer[3]),
        .I1(chan_bond_timer[1]),
        .I2(chan_bond_timer[0]),
        .I3(chan_bond_timer[2]),
        .I4(chan_bond_timer[4]),
        .I5(chan_bond_timer[5]),
        .O(p_2_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \chan_bond_timer[6]_i_1 
       (.I0(\chan_bond_timer[8]_i_4_n_0 ),
        .I1(chan_bond_timer[6]),
        .O(p_2_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \chan_bond_timer[7]_i_1 
       (.I0(\chan_bond_timer[8]_i_4_n_0 ),
        .I1(chan_bond_timer[6]),
        .I2(chan_bond_timer[7]),
        .O(p_2_in[7]));
  LUT5 #(
    .INIT(32'hFFFFFFAE)) 
    \chan_bond_timer[8]_i_1 
       (.I0(\chan_bond_timer_reg[0]_0 ),
        .I1(channel_bond_qq),
        .I2(channel_bond_q),
        .I3(bond_passed_r),
        .I4(wait_for_lane_up_r),
        .O(chan_bond_timer_1));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \chan_bond_timer[8]_i_2 
       (.I0(chan_bond_timer[6]),
        .I1(\chan_bond_timer[8]_i_4_n_0 ),
        .I2(chan_bond_timer[7]),
        .I3(chan_bond_timer[8]),
        .O(p_2_in[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \chan_bond_timer[8]_i_4 
       (.I0(chan_bond_timer[5]),
        .I1(chan_bond_timer[3]),
        .I2(chan_bond_timer[1]),
        .I3(chan_bond_timer[0]),
        .I4(chan_bond_timer[2]),
        .I5(chan_bond_timer[4]),
        .O(\chan_bond_timer[8]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\chan_bond_timer[0]_i_1_n_0 ),
        .Q(chan_bond_timer[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[1]),
        .Q(chan_bond_timer[1]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[2]),
        .Q(chan_bond_timer[2]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[3]),
        .Q(chan_bond_timer[3]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[4]),
        .Q(chan_bond_timer[4]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[5]),
        .Q(chan_bond_timer[5]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[6]),
        .Q(chan_bond_timer[6]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[7]),
        .Q(chan_bond_timer[7]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_in[8]),
        .Q(chan_bond_timer[8]),
        .R(chan_bond_timer_1));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_bond_r),
        .Q(channel_bond_q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_qq_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_bond_q),
        .Q(channel_bond_qq),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT2 #(
    .INIT(4'hB)) 
    channel_bond_r_i_1
       (.I0(wait_for_lane_up_r),
        .I1(bond_passed_r),
        .O(next_channel_bond_c));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_channel_bond_c),
        .Q(channel_bond_r),
        .R(wait_for_lane_up_r0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_chan_sync_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(channel_bond_r),
        .Q(EN_CHAN_SYNC),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(chan_bond_timeout_val[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(chan_bond_timeout_val[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(chan_bond_timeout_val[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(chan_bond_timeout_val[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(chan_bond_timeout_val[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(chan_bond_timeout_val[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(chan_bond_timeout_val[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(chan_bond_timeout_val[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(chan_bond_timeout_val[0]));
  LUT4 #(
    .INIT(16'hFF40)) 
    \idle_xmit_cntr[0]_i_1 
       (.I0(remote_ready_r),
        .I1(ready_r),
        .I2(bond_passed_r),
        .I3(wait_for_lane_up_r),
        .O(\idle_xmit_cntr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFC8FF)) 
    \idle_xmit_cntr[0]_i_2 
       (.I0(\idle_xmit_cntr_reg_n_0_[5] ),
        .I1(wait_for_remote_r),
        .I2(any_idles_r),
        .I3(wait_for_remote_r_i_2_n_0),
        .I4(\idle_xmit_cntr[0]_i_4_n_0 ),
        .O(idle_xmit_cntr));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \idle_xmit_cntr[0]_i_3 
       (.I0(\idle_xmit_cntr_reg_n_0_[3] ),
        .I1(\idle_xmit_cntr_reg_n_0_[5] ),
        .I2(\idle_xmit_cntr_reg_n_0_[4] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[1] ),
        .I5(\idle_xmit_cntr_reg_n_0_[0] ),
        .O(\idle_xmit_cntr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0000)) 
    \idle_xmit_cntr[0]_i_4 
       (.I0(\idle_xmit_cntr_reg_n_0_[4] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[0] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(wait_for_remote_r),
        .I5(\idle_xmit_cntr_reg_n_0_[3] ),
        .O(\idle_xmit_cntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEAAAAAAA6AAAAAAA)) 
    \idle_xmit_cntr[1]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[3] ),
        .I2(\idle_xmit_cntr_reg_n_0_[5] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[2] ),
        .I5(\idle_xmit_cntr_reg_n_0_[0] ),
        .O(\idle_xmit_cntr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAAA6AAA6AAA6AAA)) 
    \idle_xmit_cntr[2]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[2] ),
        .I1(\idle_xmit_cntr_reg_n_0_[4] ),
        .I2(\idle_xmit_cntr_reg_n_0_[5] ),
        .I3(\idle_xmit_cntr_reg_n_0_[3] ),
        .I4(\idle_xmit_cntr_reg_n_0_[1] ),
        .I5(\idle_xmit_cntr_reg_n_0_[0] ),
        .O(\idle_xmit_cntr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEA6A6A6A6A6A6A6A)) 
    \idle_xmit_cntr[3]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[3] ),
        .I1(\idle_xmit_cntr_reg_n_0_[5] ),
        .I2(\idle_xmit_cntr_reg_n_0_[4] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[0] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD5555555AAAAAAAA)) 
    \idle_xmit_cntr[4]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[5] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[0] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[3] ),
        .I5(\idle_xmit_cntr_reg_n_0_[4] ),
        .O(\idle_xmit_cntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \idle_xmit_cntr[5]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[1] ),
        .I1(\idle_xmit_cntr_reg_n_0_[0] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[3] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[0] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[0]_i_3_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[0] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[1] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[1]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[1] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[2] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[2]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[2] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[3] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[3]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[3] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[4] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[4]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[4] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[5] 
       (.C(user_clk),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[5]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[5] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    m_axi_rx_tvalid_i_1
       (.I0(CHANNEL_UP_RX_IF),
        .I1(rx_pe_data_v_i[1]),
        .I2(rx_pe_data_v_i[0]),
        .I3(rx_pe_data_v_i[3]),
        .I4(rx_pe_data_v_i[2]),
        .O(CHANNEL_UP_RX_IF_reg_0));
  LUT5 #(
    .INIT(32'h80808880)) 
    ready_r_i_1__3
       (.I0(bond_passed_r),
        .I1(remote_ready_r),
        .I2(ready_r),
        .I3(wait_for_remote_r),
        .I4(wait_for_remote_r_i_2_n_0),
        .O(next_ready_c));
  FDRE #(
    .INIT(1'b0)) 
    ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(wait_for_lane_up_r0));
  FDRE #(
    .INIT(1'b0)) 
    remote_ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_r_reg_0),
        .Q(remote_ready_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE GND:R" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_lanes_flop_0_i
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_lanes_c),
        .Q(RESET_LANES),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF15555555)) 
    reset_lanes_flop_0_i_i_1
       (.I0(wait_for_lane_up_r),
        .I1(reset_lanes_flop_0_i_0),
        .I2(reset_lanes_flop_0_i_1),
        .I3(reset_lanes_flop_0_i_2),
        .I4(lane_up),
        .I5(CHANNEL_UP_TX_IF_reg_1),
        .O(reset_lanes_c));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_r_i_1
       (.I0(CHANNEL_UP_RX_IF),
        .O(SR));
  LUT3 #(
    .INIT(8'h80)) 
    reset_watchdog_i_1
       (.I0(reset_watchdog_i_2_n_0),
        .I1(reset_watchdog_i_3_n_0),
        .I2(reset_watchdog_i_4_n_0),
        .O(p_0_in));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_2
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timeout_val[0]),
        .I2(chan_bond_timeout_val[2]),
        .I3(chan_bond_timer[2]),
        .I4(chan_bond_timeout_val[1]),
        .I5(chan_bond_timer[1]),
        .O(reset_watchdog_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_3
       (.I0(chan_bond_timer[6]),
        .I1(chan_bond_timeout_val[6]),
        .I2(chan_bond_timeout_val[8]),
        .I3(chan_bond_timer[8]),
        .I4(chan_bond_timeout_val[7]),
        .I5(chan_bond_timer[7]),
        .O(reset_watchdog_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_4
       (.I0(chan_bond_timer[3]),
        .I1(chan_bond_timeout_val[3]),
        .I2(chan_bond_timeout_val[5]),
        .I3(chan_bond_timer[5]),
        .I4(chan_bond_timeout_val[4]),
        .I5(chan_bond_timer[4]),
        .O(reset_watchdog_i_4_n_0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    reset_watchdog_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(reset_watchdog),
        .R(CHANNEL_UP_TX_IF_reg_1));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_tx_tready_i_1
       (.I0(CHANNEL_UP_TX_IF_reg_0),
        .O(R0));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_lane_up_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wait_for_lane_up_r0),
        .Q(wait_for_lane_up_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF0F0F020F030F020)) 
    wait_for_remote_r_i_1
       (.I0(ready_r),
        .I1(remote_ready_r),
        .I2(bond_passed_r),
        .I3(channel_bond_r),
        .I4(wait_for_remote_r),
        .I5(wait_for_remote_r_i_2_n_0),
        .O(next_wait_for_remote_c));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    wait_for_remote_r_i_2
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[4] ),
        .I4(\idle_xmit_cntr_reg_n_0_[5] ),
        .I5(\idle_xmit_cntr_reg_n_0_[3] ),
        .O(wait_for_remote_r_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_remote_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_wait_for_remote_c),
        .Q(wait_for_remote_r),
        .R(wait_for_lane_up_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \watchdog_count_r[0]_i_1 
       (.I0(watchdog_count_r[0]),
        .I1(watchdog_count_r[2]),
        .I2(watchdog_count_r[1]),
        .I3(reset_watchdog),
        .O(\watchdog_count_r[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFE1)) 
    \watchdog_count_r[0]_i_2 
       (.I0(watchdog_count_r[1]),
        .I1(watchdog_count_r[2]),
        .I2(watchdog_count_r[0]),
        .I3(reset_watchdog),
        .O(\watchdog_count_r[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF9)) 
    \watchdog_count_r[1]_i_1 
       (.I0(watchdog_count_r[2]),
        .I1(watchdog_count_r[1]),
        .I2(reset_watchdog),
        .O(\watchdog_count_r[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \watchdog_count_r[2]_i_1 
       (.I0(reset_watchdog),
        .I1(watchdog_count_r[2]),
        .O(\watchdog_count_r[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[0] 
       (.C(user_clk),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[0]_i_2_n_0 ),
        .Q(watchdog_count_r[0]),
        .R(CHANNEL_UP_TX_IF_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[1] 
       (.C(user_clk),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[1]_i_1_n_0 ),
        .Q(watchdog_count_r[1]),
        .R(CHANNEL_UP_TX_IF_reg_1));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[2] 
       (.C(user_clk),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[2]_i_1_n_0 ),
        .Q(watchdog_count_r[2]),
        .R(CHANNEL_UP_TX_IF_reg_1));
endmodule

module aurora_64b66b_w256_1375Gbps_CH_BOND_MASTER
   (rxchanisaligned,
    D,
    do_rd_en_reg,
    user_clk,
    cbcc_reset_cbstg2_rd_clk,
    rxchanisaligned1_out,
    enchansync_dlyd_i_1,
    master_do_rd_en,
    Q,
    CB_align_ver,
    CB_flag_flopped,
    master_do_rd_en_out_reg);
  output rxchanisaligned;
  output [1:0]D;
  output do_rd_en_reg;
  input user_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input rxchanisaligned1_out;
  input enchansync_dlyd_i_1;
  input master_do_rd_en;
  input [3:0]Q;
  input CB_align_ver;
  input CB_flag_flopped;
  input master_do_rd_en_out_reg;

  wire CB_align_ver;
  wire CB_flag_flopped;
  wire [1:0]D;
  wire [3:0]Q;
  wire alignment_done_r;
  wire alignment_done_r_i_1_n_0;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4__1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_3_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__2_n_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [2:0]count_maxskew_load;
  wire \count_maxskew_load[0]_i_1_n_0 ;
  wire \count_maxskew_load[1]_i_1_n_0 ;
  wire \count_maxskew_load[2]_i_1_n_0 ;
  wire \count_maxskew_load[2]_i_2_n_0 ;
  wire do_rd_en_reg;
  wire enchansync_dlyd_i_1;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__1_n_0;
  wire master_do_rd_en;
  wire master_do_rd_en_out_reg;
  wire rxchanisaligned;
  wire rxchanisaligned1_out;
  wire user_clk;

  LUT5 #(
    .INIT(32'h10FF1010)) 
    \CHBONDO[0]_i_1 
       (.I0(count_maxskew_load[0]),
        .I1(count_maxskew_load[2]),
        .I2(count_maxskew_load[1]),
        .I3(enchansync_dlyd_i_1),
        .I4(CB_align_ver),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h444F4444)) 
    \CHBONDO[1]_i_1 
       (.I0(alignment_done_r),
        .I1(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I2(count_maxskew_load[0]),
        .I3(count_maxskew_load[2]),
        .I4(count_maxskew_load[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hFF020202)) 
    alignment_done_r_i_1
       (.I0(count_maxskew_load[2]),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(enchansync_dlyd_i_1),
        .I4(alignment_done_r),
        .O(alignment_done_r_i_1_n_0));
  FDCE alignment_done_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(alignment_done_r_i_1_n_0),
        .Q(alignment_done_r));
  LUT6 #(
    .INIT(64'h00000000FE0E0E0E)) 
    \cb_rxdatavalid_cnt[0]_i_1__1 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__1_n_0 ),
        .I1(\cb_rxdatavalid_cnt[0]_i_3__2_n_0 ),
        .I2(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I3(Q[0]),
        .I4(master_do_rd_en),
        .I5(\cb_rxdatavalid_cnt[0]_i_4__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h54B0B0B0)) 
    \cb_rxdatavalid_cnt[0]_i_2__1 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(Q[1]),
        .I4(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h70000000)) 
    \cb_rxdatavalid_cnt[0]_i_3__2 
       (.I0(Q[0]),
        .I1(master_do_rd_en),
        .I2(cb_rxdatavalid_cnt[0]),
        .I3(cb_rxdatavalid_cnt[2]),
        .I4(cb_rxdatavalid_cnt[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \cb_rxdatavalid_cnt[0]_i_4__1 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0080)) 
    \cb_rxdatavalid_cnt[1]_i_1__1 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I5(\cb_rxdatavalid_cnt[1]_i_3_n_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h80888080)) 
    \cb_rxdatavalid_cnt[1]_i_2__2 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[3]),
        .I3(CB_flag_flopped),
        .I4(Q[2]),
        .O(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h9830303018303030)) 
    \cb_rxdatavalid_cnt[1]_i_3 
       (.I0(Q[1]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(cb_rxdatavalid_cnt[0]),
        .I4(master_do_rd_en),
        .I5(Q[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF008000)) 
    \cb_rxdatavalid_cnt[2]_i_1__1 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(master_do_rd_en),
        .I2(Q[1]),
        .I3(cb_rxdatavalid_cnt[2]),
        .I4(cb_rxdatavalid_cnt[1]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__2_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hDFCC000000000000)) 
    \cb_rxdatavalid_cnt[2]_i_2__2 
       (.I0(CB_flag_flopped),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(master_do_rd_en),
        .I5(enchansync_dlyd_i_1),
        .O(\cb_rxdatavalid_cnt[2]_i_2__2_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    \count_maxskew_load[0]_i_1 
       (.I0(count_maxskew_load[2]),
        .I1(count_maxskew_load[1]),
        .I2(count_maxskew_load[0]),
        .I3(\count_maxskew_load[2]_i_2_n_0 ),
        .O(\count_maxskew_load[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h0098)) 
    \count_maxskew_load[1]_i_1 
       (.I0(count_maxskew_load[0]),
        .I1(count_maxskew_load[1]),
        .I2(count_maxskew_load[2]),
        .I3(\count_maxskew_load[2]_i_2_n_0 ),
        .O(\count_maxskew_load[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hFEAA)) 
    \count_maxskew_load[2]_i_1 
       (.I0(\count_maxskew_load[2]_i_2_n_0 ),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(count_maxskew_load[2]),
        .O(\count_maxskew_load[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \count_maxskew_load[2]_i_2 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[0]),
        .I3(enchansync_dlyd_i_1),
        .I4(alignment_done_r),
        .O(\count_maxskew_load[2]_i_2_n_0 ));
  FDCE \count_maxskew_load_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[0]_i_1_n_0 ),
        .Q(count_maxskew_load[0]));
  FDCE \count_maxskew_load_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[1]_i_1_n_0 ),
        .Q(count_maxskew_load[1]));
  FDCE \count_maxskew_load_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[2]_i_1_n_0 ),
        .Q(count_maxskew_load[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane2_i_inferred_i_1
       (.I0(master_do_rd_en_out_reg),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hABFE)) 
    hold_rd_ptr_i_1__1
       (.I0(\count_maxskew_load[2]_i_2_n_0 ),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(count_maxskew_load[2]),
        .O(hold_rd_ptr_i_1__1_n_0));
  FDCE hold_rd_ptr_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__1_n_0),
        .Q(hold_rd_ptr_i));
  FDCE rxchanisaligned_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned1_out),
        .Q(rxchanisaligned));
endmodule

module aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE
   (master_stop_prev_cb_r,
    rxchanisaligned,
    do_rd_en_reg,
    user_clk,
    cbcc_reset_cbstg2_rd_clk,
    master_stop_prev_cb_r_reg_0,
    CB_av_s_r_reg_0,
    \cb_rxdatavalid_cnt_reg[0]_0 ,
    Q,
    master_do_rd_en,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_lane3_i_inferred_i_1_0,
    rxchanisaligned_reg_0,
    empty);
  output master_stop_prev_cb_r;
  output rxchanisaligned;
  output do_rd_en_reg;
  input user_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input master_stop_prev_cb_r_reg_0;
  input CB_av_s_r_reg_0;
  input \cb_rxdatavalid_cnt_reg[0]_0 ;
  input [3:0]Q;
  input master_do_rd_en;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_lane3_i_inferred_i_1_0;
  input [1:0]rxchanisaligned_reg_0;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_av_s_r_reg_0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_5__1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt_reg[0]_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_lane3_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__2_n_0;
  wire \master_ack_cnt[0]_i_1__1_n_0 ;
  wire \master_ack_cnt[1]_i_1__1_n_0 ;
  wire \master_ack_cnt[1]_i_2__1_n_0 ;
  wire \master_ack_cnt[1]_i_3__1_n_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1__1_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__2_n_0;
  wire [1:0]rxchanisaligned_reg_0;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1__1_n_0;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1__1
       (.I0(CB_align_ver),
        .I1(CB_av_s_r_reg_0),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h00000000FFAA00EA)) 
    \cb_rxdatavalid_cnt[0]_i_1__2 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__2_n_0 ),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ),
        .I3(\master_ack_cnt[1]_i_3__1_n_0 ),
        .I4(\cb_rxdatavalid_cnt_reg[0]_0 ),
        .I5(\cb_rxdatavalid_cnt[0]_i_5__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_2__2 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_3__1 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \cb_rxdatavalid_cnt[0]_i_5__1 
       (.I0(Q[1]),
        .I1(CB_av_s_r_reg_0),
        .I2(Q[2]),
        .I3(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[0]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF98181818)) 
    \cb_rxdatavalid_cnt[1]_i_1__2 
       (.I0(\cb_rxdatavalid_cnt[1]_i_2__1_n_0 ),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(Q[0]),
        .I4(master_do_rd_en),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \cb_rxdatavalid_cnt[1]_i_2__1 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(Q[1]),
        .I2(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1__2 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hD0C0D0C0F0C0D0C0)) 
    \cb_rxdatavalid_cnt[2]_i_2__1 
       (.I0(CB_flag_flopped),
        .I1(Q[3]),
        .I2(master_do_rd_en),
        .I3(Q[2]),
        .I4(CB_av_s_r_reg_0),
        .I5(Q[1]),
        .O(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane3_i_inferred_i_1
       (.I0(do_rd_en_lane3_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF08FF08FF080000)) 
    hold_rd_ptr_i_1__2
       (.I0(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ),
        .I1(CB_av_s_r_reg_0),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1__2_n_0));
  FDCE hold_rd_ptr_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__2_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h1555155511551555)) 
    \master_ack_cnt[0]_i_1__1 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(CB_av_s_r_reg_0),
        .I2(Q[3]),
        .I3(master_do_rd_en),
        .I4(Q[2]),
        .I5(CB_flag_flopped),
        .O(\master_ack_cnt[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF777)) 
    \master_ack_cnt[1]_i_1__1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(CB_av_s_r_reg_0),
        .I3(\master_ack_cnt[1]_i_3__1_n_0 ),
        .O(\master_ack_cnt[1]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h0666)) 
    \master_ack_cnt[1]_i_2__1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(CB_av_s_r_reg_0),
        .I3(\master_ack_cnt[1]_i_3__1_n_0 ),
        .O(\master_ack_cnt[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h88C8)) 
    \master_ack_cnt[1]_i_3__1 
       (.I0(Q[3]),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(CB_flag_flopped),
        .O(\master_ack_cnt[1]_i_3__1_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1__1_n_0 ),
        .D(\master_ack_cnt[0]_i_1__1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1__1_n_0 ),
        .D(\master_ack_cnt[1]_i_2__1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h3F3F3F3F00080808)) 
    master_stop_next_cb_r_i_1__1
       (.I0(CB_av_s_r_reg_0),
        .I1(rxchanisaligned_reg_0[1]),
        .I2(rxchanisaligned_reg_0[0]),
        .I3(\master_ack_cnt_reg_n_0_[0] ),
        .I4(\master_ack_cnt_reg_n_0_[1] ),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1__1_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1__1_n_0),
        .Q(master_stop_next_cb_r));
  FDCE master_stop_prev_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_reg_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__2
       (.I0(rxchanisaligned_reg_0[1]),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__2_n_0));
  FDCE rxchanisaligned_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__2_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0EEE0E000000000)) 
    slave_stop_cb_r_i_1__1
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(cb_rxdatavalid_cnt[2]),
        .I4(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ),
        .I5(CB_av_s_r_reg_0),
        .O(slave_stop_cb_r_i_1__1_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1__1_n_0),
        .Q(slave_stop_cb_r));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE" *) 
module aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE_70
   (master_stop_prev_cb_r,
    rxchanisaligned,
    do_rd_en_reg,
    user_clk,
    cbcc_reset_cbstg2_rd_clk,
    master_stop_prev_cb_r_reg_0,
    CB_av_s_r_reg_0,
    \cb_rxdatavalid_cnt_reg[0]_0 ,
    Q,
    master_do_rd_en,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_lane1_i_inferred_i_1_0,
    rxchanisaligned_reg_0,
    empty);
  output master_stop_prev_cb_r;
  output rxchanisaligned;
  output do_rd_en_reg;
  input user_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input master_stop_prev_cb_r_reg_0;
  input CB_av_s_r_reg_0;
  input \cb_rxdatavalid_cnt_reg[0]_0 ;
  input [3:0]Q;
  input master_do_rd_en;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_lane1_i_inferred_i_1_0;
  input [1:0]rxchanisaligned_reg_0;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_av_s_r_reg_0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_5__0_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt_reg[0]_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_lane1_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__0_n_0;
  wire \master_ack_cnt[0]_i_1__0_n_0 ;
  wire \master_ack_cnt[1]_i_1__0_n_0 ;
  wire \master_ack_cnt[1]_i_2__0_n_0 ;
  wire \master_ack_cnt[1]_i_3__0_n_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1__0_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__1_n_0;
  wire [1:0]rxchanisaligned_reg_0;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1__0_n_0;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1__0
       (.I0(CB_align_ver),
        .I1(CB_av_s_r_reg_0),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h00000000FFAA00EA)) 
    \cb_rxdatavalid_cnt[0]_i_1__0 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__0_n_0 ),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ),
        .I3(\master_ack_cnt[1]_i_3__0_n_0 ),
        .I4(\cb_rxdatavalid_cnt_reg[0]_0 ),
        .I5(\cb_rxdatavalid_cnt[0]_i_5__0_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_2__0 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_3__0 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \cb_rxdatavalid_cnt[0]_i_5__0 
       (.I0(Q[1]),
        .I1(CB_av_s_r_reg_0),
        .I2(Q[2]),
        .I3(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[0]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF98181818)) 
    \cb_rxdatavalid_cnt[1]_i_1__0 
       (.I0(\cb_rxdatavalid_cnt[1]_i_2__0_n_0 ),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(Q[0]),
        .I4(master_do_rd_en),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \cb_rxdatavalid_cnt[1]_i_2__0 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(Q[1]),
        .I2(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1__0 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hD0C0D0C0F0C0D0C0)) 
    \cb_rxdatavalid_cnt[2]_i_2__0 
       (.I0(CB_flag_flopped),
        .I1(Q[3]),
        .I2(master_do_rd_en),
        .I3(Q[2]),
        .I4(CB_av_s_r_reg_0),
        .I5(Q[1]),
        .O(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane1_i_inferred_i_1
       (.I0(do_rd_en_lane1_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF08FF08FF080000)) 
    hold_rd_ptr_i_1__0
       (.I0(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ),
        .I1(CB_av_s_r_reg_0),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1__0_n_0));
  FDCE hold_rd_ptr_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__0_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h1555155511551555)) 
    \master_ack_cnt[0]_i_1__0 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(CB_av_s_r_reg_0),
        .I2(Q[3]),
        .I3(master_do_rd_en),
        .I4(Q[2]),
        .I5(CB_flag_flopped),
        .O(\master_ack_cnt[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF777)) 
    \master_ack_cnt[1]_i_1__0 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(CB_av_s_r_reg_0),
        .I3(\master_ack_cnt[1]_i_3__0_n_0 ),
        .O(\master_ack_cnt[1]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h0666)) 
    \master_ack_cnt[1]_i_2__0 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(CB_av_s_r_reg_0),
        .I3(\master_ack_cnt[1]_i_3__0_n_0 ),
        .O(\master_ack_cnt[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h88C8)) 
    \master_ack_cnt[1]_i_3__0 
       (.I0(Q[3]),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(CB_flag_flopped),
        .O(\master_ack_cnt[1]_i_3__0_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1__0_n_0 ),
        .D(\master_ack_cnt[0]_i_1__0_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1__0_n_0 ),
        .D(\master_ack_cnt[1]_i_2__0_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h3F3F3F3F00080808)) 
    master_stop_next_cb_r_i_1__0
       (.I0(CB_av_s_r_reg_0),
        .I1(rxchanisaligned_reg_0[1]),
        .I2(rxchanisaligned_reg_0[0]),
        .I3(\master_ack_cnt_reg_n_0_[0] ),
        .I4(\master_ack_cnt_reg_n_0_[1] ),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1__0_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1__0_n_0),
        .Q(master_stop_next_cb_r));
  FDCE master_stop_prev_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_reg_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__1
       (.I0(rxchanisaligned_reg_0[1]),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__1_n_0));
  FDCE rxchanisaligned_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__1_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0EEE0E000000000)) 
    slave_stop_cb_r_i_1__0
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(cb_rxdatavalid_cnt[2]),
        .I4(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ),
        .I5(CB_av_s_r_reg_0),
        .O(slave_stop_cb_r_i_1__0_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1__0_n_0),
        .Q(slave_stop_cb_r));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE" *) 
module aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE_81
   (rxchanisaligned,
    do_rd_en_reg,
    master_do_rd_en_reg,
    master_do_rd_en_reg_0,
    user_clk,
    cbcc_reset_cbstg2_rd_clk,
    enchansync_dlyd_i,
    Q,
    \master_ack_cnt_reg[0]_0 ,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_i_inferred_i_1_0,
    \cb_rxdatavalid_cnt_reg[0]_0 ,
    \cb_rxdatavalid_cnt_reg[0]_1 ,
    rxchanisaligned_reg_0,
    empty);
  output rxchanisaligned;
  output do_rd_en_reg;
  output master_do_rd_en_reg;
  output master_do_rd_en_reg_0;
  input user_clk;
  input cbcc_reset_cbstg2_rd_clk;
  input enchansync_dlyd_i;
  input [3:0]Q;
  input \master_ack_cnt_reg[0]_0 ;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_i_inferred_i_1_0;
  input [0:0]\cb_rxdatavalid_cnt_reg[0]_0 ;
  input [0:0]\cb_rxdatavalid_cnt_reg[0]_1 ;
  input [1:0]rxchanisaligned_reg_0;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_5_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2_n_0 ;
  wire [0:0]\cb_rxdatavalid_cnt_reg[0]_0 ;
  wire [0:0]\cb_rxdatavalid_cnt_reg[0]_1 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire enchansync_dlyd_i;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1_n_0;
  wire \master_ack_cnt[0]_i_1_n_0 ;
  wire \master_ack_cnt[1]_i_1_n_0 ;
  wire \master_ack_cnt[1]_i_2_n_0 ;
  wire \master_ack_cnt[1]_i_3_n_0 ;
  wire \master_ack_cnt_reg[0]_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en_reg;
  wire master_do_rd_en_reg_0;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_i_1_n_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__0_n_0;
  wire [1:0]rxchanisaligned_reg_0;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1_n_0;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1
       (.I0(CB_align_ver),
        .I1(enchansync_dlyd_i),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h00000000FFAA00EA)) 
    \cb_rxdatavalid_cnt[0]_i_1 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2_n_0 ),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(\cb_rxdatavalid_cnt[0]_i_3_n_0 ),
        .I3(\master_ack_cnt[1]_i_3_n_0 ),
        .I4(\cb_rxdatavalid_cnt[0]_i_4_n_0 ),
        .I5(\cb_rxdatavalid_cnt[0]_i_5_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_2 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(Q[1]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_3 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_4 
       (.I0(\master_ack_cnt_reg[0]_0 ),
        .I1(Q[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_4__0 
       (.I0(\master_ack_cnt_reg[0]_0 ),
        .I1(\cb_rxdatavalid_cnt_reg[0]_0 ),
        .O(master_do_rd_en_reg));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \cb_rxdatavalid_cnt[0]_i_4__2 
       (.I0(\master_ack_cnt_reg[0]_0 ),
        .I1(\cb_rxdatavalid_cnt_reg[0]_1 ),
        .O(master_do_rd_en_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \cb_rxdatavalid_cnt[0]_i_5 
       (.I0(Q[1]),
        .I1(enchansync_dlyd_i),
        .I2(Q[2]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF98181818)) 
    \cb_rxdatavalid_cnt[1]_i_1 
       (.I0(\cb_rxdatavalid_cnt[1]_i_2_n_0 ),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(Q[0]),
        .I4(\master_ack_cnt_reg[0]_0 ),
        .I5(\cb_rxdatavalid_cnt[2]_i_2_n_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \cb_rxdatavalid_cnt[1]_i_2 
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(\master_ack_cnt_reg[0]_0 ),
        .I2(Q[1]),
        .O(\cb_rxdatavalid_cnt[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(Q[1]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0C0D0C0F0C0D0C0)) 
    \cb_rxdatavalid_cnt[2]_i_2 
       (.I0(CB_flag_flopped),
        .I1(Q[3]),
        .I2(\master_ack_cnt_reg[0]_0 ),
        .I3(Q[2]),
        .I4(enchansync_dlyd_i),
        .I5(Q[1]),
        .O(\cb_rxdatavalid_cnt[2]_i_2_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_i_inferred_i_1
       (.I0(do_rd_en_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF08FF08FF080000)) 
    hold_rd_ptr_i_1
       (.I0(\cb_rxdatavalid_cnt[0]_i_3_n_0 ),
        .I1(enchansync_dlyd_i),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1_n_0));
  FDCE hold_rd_ptr_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h1555155511551555)) 
    \master_ack_cnt[0]_i_1 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(enchansync_dlyd_i),
        .I2(Q[3]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(Q[2]),
        .I5(CB_flag_flopped),
        .O(\master_ack_cnt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF777)) 
    \master_ack_cnt[1]_i_1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(enchansync_dlyd_i),
        .I3(\master_ack_cnt[1]_i_3_n_0 ),
        .O(\master_ack_cnt[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0666)) 
    \master_ack_cnt[1]_i_2 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(enchansync_dlyd_i),
        .I3(\master_ack_cnt[1]_i_3_n_0 ),
        .O(\master_ack_cnt[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h88C8)) 
    \master_ack_cnt[1]_i_3 
       (.I0(Q[3]),
        .I1(\master_ack_cnt_reg[0]_0 ),
        .I2(Q[2]),
        .I3(CB_flag_flopped),
        .O(\master_ack_cnt[1]_i_3_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1_n_0 ),
        .D(\master_ack_cnt[0]_i_1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(user_clk),
        .CE(\master_ack_cnt[1]_i_1_n_0 ),
        .D(\master_ack_cnt[1]_i_2_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h00FFFFFF002A0000)) 
    master_stop_next_cb_r_i_1
       (.I0(enchansync_dlyd_i),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt_reg_n_0_[1] ),
        .I3(rxchanisaligned_reg_0[0]),
        .I4(rxchanisaligned_reg_0[1]),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1_n_0),
        .Q(master_stop_next_cb_r));
  LUT4 #(
    .INIT(16'h3F20)) 
    master_stop_prev_cb_r_i_1
       (.I0(enchansync_dlyd_i),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(rxchanisaligned_reg_0[1]),
        .I3(master_stop_prev_cb_r),
        .O(master_stop_prev_cb_r_i_1_n_0));
  FDCE master_stop_prev_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_i_1_n_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__0
       (.I0(rxchanisaligned_reg_0[1]),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__0_n_0));
  FDCE rxchanisaligned_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__0_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0EEE0E000000000)) 
    slave_stop_cb_r_i_1
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(cb_rxdatavalid_cnt[2]),
        .I4(\cb_rxdatavalid_cnt[0]_i_3_n_0 ),
        .I5(enchansync_dlyd_i),
        .O(slave_stop_cb_r_i_1_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1_n_0),
        .Q(slave_stop_cb_r));
endmodule

module aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING
   (valid_btf_detect_dlyd1,
    enchansync_dlyd_i,
    RXHEADER_OUT_ERR_LANE3,
    RXLOSSOFSYNC_OUT_LANE3,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_3_c,
    master_stop_prev_cb_r,
    any_vld_btf_lane3_i,
    bit_err_chan_bond_lane3_i,
    Q,
    wr_err_rd_clk_sync_reg_0,
    final_gater_for_fifo_din_lane3_i,
    rx_header_1_i_0,
    \fifo_dout_reg[64]_0 ,
    do_rd_en_lane3_i,
    rxfsm_reset_i,
    hold_reg_r_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    init_clk,
    srst,
    user_clk,
    out,
    in0,
    EN_CHAN_SYNC,
    rxdatavalid_to_fifo_lane3_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    CB_flag_direct,
    \count_for_reset_r_reg[23]_0 ,
    master_stop_prev_cb_r_reg,
    master_do_rd_en,
    rxbuferr_out_lane2_i,
    hard_err_usr_reg,
    FINAL_GATER_FOR_FIFO_DIN_i_2__1_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    \cb_rxdatavalid_cnt_reg[0] ,
    hard_err_rst_int,
    \count_for_reset_r_reg[23]_1 ,
    rst_drp,
    link_reset_0_c,
    link_reset_1_c,
    link_reset_2_c,
    rxchanisaligned_reg,
    D,
    CB_detect,
    \valid_btf_detect_extend_r_reg[4]_0 );
  output valid_btf_detect_dlyd1;
  output enchansync_dlyd_i;
  output RXHEADER_OUT_ERR_LANE3;
  output RXLOSSOFSYNC_OUT_LANE3;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_3_c;
  output master_stop_prev_cb_r;
  output any_vld_btf_lane3_i;
  output bit_err_chan_bond_lane3_i;
  output [66:0]Q;
  output wr_err_rd_clk_sync_reg_0;
  output final_gater_for_fifo_din_lane3_i;
  output rx_header_1_i_0;
  output \fifo_dout_reg[64]_0 ;
  output do_rd_en_lane3_i;
  output rxfsm_reset_i;
  output hold_reg_r_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input init_clk;
  input srst;
  input user_clk;
  input out;
  input in0;
  input EN_CHAN_SYNC;
  input rxdatavalid_to_fifo_lane3_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input CB_flag_direct;
  input \count_for_reset_r_reg[23]_0 ;
  input master_stop_prev_cb_r_reg;
  input master_do_rd_en;
  input [1:0]rxbuferr_out_lane2_i;
  input hard_err_usr_reg;
  input FINAL_GATER_FOR_FIFO_DIN_i_2__1_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input \cb_rxdatavalid_cnt_reg[0] ;
  input hard_err_rst_int;
  input \count_for_reset_r_reg[23]_1 ;
  input rst_drp;
  input link_reset_0_c;
  input link_reset_1_c;
  input link_reset_2_c;
  input [1:0]rxchanisaligned_reg;
  input [65:0]D;
  input CB_detect;
  input [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;

  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1__2_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__2_n_0;
  wire CB_align_ver_i_3__2_n_0;
  wire CB_align_ver_i_4__2_n_0;
  wire CB_align_ver_i_5__2_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR_i_1__2_n_0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [65:0]D;
  wire EN_CHAN_SYNC;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2__1_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_8__2_n_0;
  wire \LINK_RESET[0]_i_2__2_n_0 ;
  wire \LINK_RESET[0]_i_3__2_n_0 ;
  wire \LINK_RESET[0]_i_4__2_n_0 ;
  wire \LINK_RESET[0]_i_5__2_n_0 ;
  wire \LINK_RESET[0]_i_6__2_n_0 ;
  wire [66:0]Q;
  wire RXHEADER_OUT_ERR_LANE3;
  wire RXLOSSOFSYNC_OUT_LANE3;
  wire any_vld_btf_lane3_i;
  wire bit_err_chan_bond_lane3_i;
  wire buffer_too_empty_c;
  wire \cb_rxdatavalid_cnt_reg[0] ;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3__2_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[23]_1 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane3_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__2_n_0;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1__2_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire \fifo_dout_reg[64]_0 ;
  wire final_gater_for_fifo_din_lane3_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_rst_int;
  wire hard_err_usr_reg;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__2_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire [1:0]p_0_in;
  wire p_0_in10_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire [5:0]p_0_in__17;
  wire [4:0]p_0_in__18;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rst_drp;
  wire rx_header_1_i_0;
  wire [1:0]rxbuferr_out_lane2_i;
  wire [1:0]rxbuferr_out_lane3_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_lane3_i;
  wire rxfsm_reset_i;
  wire rxfsm_reset_i_inferred_i_2_n_0;
  wire sel;
  wire srst;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire user_clk;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1__2_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_err_rd_clk_sync_reg_0;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__2_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h11101010)) 
    ANY_VLD_BTF_FLAG_i_1__2
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(any_vld_btf_lane3_i),
        .I3(p_7_in),
        .I4(p_0_in3_in),
        .O(ANY_VLD_BTF_FLAG_i_1__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    ANY_VLD_BTF_FLAG_i_2__2
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_3__2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0),
        .O(p_7_in));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__2_n_0),
        .Q(any_vld_btf_lane3_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000020)) 
    CB_align_ver_i_1__2
       (.I0(CB_align_ver_i_2__2_n_0),
        .I1(CB_align_ver_i_3__2_n_0),
        .I2(Q[59]),
        .I3(Q[53]),
        .I4(Q[50]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000004)) 
    CB_align_ver_i_2__2
       (.I0(Q[52]),
        .I1(master_do_rd_en),
        .I2(Q[58]),
        .I3(Q[49]),
        .I4(CB_align_ver_i_4__2_n_0),
        .O(CB_align_ver_i_2__2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    CB_align_ver_i_3__2
       (.I0(Q[51]),
        .I1(Q[61]),
        .I2(Q[56]),
        .I3(Q[63]),
        .I4(CB_align_ver_i_5__2_n_0),
        .O(CB_align_ver_i_3__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4__2
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(Q[60]),
        .I3(Q[62]),
        .O(CB_align_ver_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    CB_align_ver_i_5__2
       (.I0(Q[54]),
        .I1(Q[48]),
        .I2(Q[57]),
        .I3(Q[55]),
        .O(CB_align_ver_i_5__2_n_0));
  FDRE CB_align_ver_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__2
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(RXLOSSOFSYNC_OUT_LANE3),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1__2
       (.I0(Q[65]),
        .I1(master_do_rd_en),
        .I2(hold_reg_r),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(CC_RX_HEADER_OUT_ERR_i_1__2_n_0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR_i_1__2_n_0),
        .Q(RXHEADER_OUT_ERR_LANE3),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__2
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_lane3_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2__1
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3__1
       (.I0(p_0_in3_in),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_2__1_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4__1
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5__1
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6__1
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7__1
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8__1
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0),
        .Q(final_gater_for_fifo_din_lane3_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT6 #(
    .INIT(64'h00000000E2E2E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__2
       (.I0(bit_err_chan_bond_lane3_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__2
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_8__2_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__2
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__2
       (.I0(wr_monitor_flag_reg[4]),
        .I1(wr_monitor_flag_reg[3]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__2
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__2
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__2
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_8__2
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_8__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0),
        .Q(bit_err_chan_bond_lane3_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1__2 
       (.I0(\LINK_RESET[0]_i_2__2_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3__2_n_0 ),
        .I4(\LINK_RESET[0]_i_4__2_n_0 ),
        .I5(\LINK_RESET[0]_i_5__2_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2__2 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__2 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__2 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6__2_n_0 ),
        .O(\LINK_RESET[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__2 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6__2 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6__2_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_3_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_0_REG_i_1__2
       (.I0(p_0_in[0]),
        .I1(hold_reg_r),
        .O(\fifo_dout_reg[64]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_1_REG_i_1__2
       (.I0(hold_reg_r),
        .I1(p_0_in[1]),
        .O(rx_header_1_i_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(EN_CHAN_SYNC),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_lane3_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__2 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__2_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__2_n_0 ,\count_for_reset_r_reg[0]_i_2__2_n_1 ,\count_for_reset_r_reg[0]_i_2__2_n_2 ,\count_for_reset_r_reg[0]_i_2__2_n_3 ,\count_for_reset_r_reg[0]_i_2__2_n_4 ,\count_for_reset_r_reg[0]_i_2__2_n_5 ,\count_for_reset_r_reg[0]_i_2__2_n_6 ,\count_for_reset_r_reg[0]_i_2__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__2_n_8 ,\count_for_reset_r_reg[0]_i_2__2_n_9 ,\count_for_reset_r_reg[0]_i_2__2_n_10 ,\count_for_reset_r_reg[0]_i_2__2_n_11 ,\count_for_reset_r_reg[0]_i_2__2_n_12 ,\count_for_reset_r_reg[0]_i_2__2_n_13 ,\count_for_reset_r_reg[0]_i_2__2_n_14 ,\count_for_reset_r_reg[0]_i_2__2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__2_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__2 
       (.CI(\count_for_reset_r_reg[8]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__2_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__2_n_1 ,\count_for_reset_r_reg[16]_i_1__2_n_2 ,\count_for_reset_r_reg[16]_i_1__2_n_3 ,\count_for_reset_r_reg[16]_i_1__2_n_4 ,\count_for_reset_r_reg[16]_i_1__2_n_5 ,\count_for_reset_r_reg[16]_i_1__2_n_6 ,\count_for_reset_r_reg[16]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__2_n_8 ,\count_for_reset_r_reg[16]_i_1__2_n_9 ,\count_for_reset_r_reg[16]_i_1__2_n_10 ,\count_for_reset_r_reg[16]_i_1__2_n_11 ,\count_for_reset_r_reg[16]_i_1__2_n_12 ,\count_for_reset_r_reg[16]_i_1__2_n_13 ,\count_for_reset_r_reg[16]_i_1__2_n_14 ,\count_for_reset_r_reg[16]_i_1__2_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__2 
       (.CI(\count_for_reset_r_reg[0]_i_2__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__2_n_0 ,\count_for_reset_r_reg[8]_i_1__2_n_1 ,\count_for_reset_r_reg[8]_i_1__2_n_2 ,\count_for_reset_r_reg[8]_i_1__2_n_3 ,\count_for_reset_r_reg[8]_i_1__2_n_4 ,\count_for_reset_r_reg[8]_i_1__2_n_5 ,\count_for_reset_r_reg[8]_i_1__2_n_6 ,\count_for_reset_r_reg[8]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__2_n_8 ,\count_for_reset_r_reg[8]_i_1__2_n_9 ,\count_for_reset_r_reg[8]_i_1__2_n_10 ,\count_for_reset_r_reg[8]_i_1__2_n_11 ,\count_for_reset_r_reg[8]_i_1__2_n_12 ,\count_for_reset_r_reg[8]_i_1__2_n_13 ,\count_for_reset_r_reg[8]_i_1__2_n_14 ,\count_for_reset_r_reg[8]_i_1__2_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__2
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h0000110000001000)) 
    do_wr_en_i_1__2
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(final_gater_for_fifo_din_lane3_i),
        .I3(raw_data_r[66]),
        .I4(overflow_flag_c),
        .I5(FINAL_GATER_FOR_FIFO_DIN0),
        .O(do_wr_en_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__2_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1__2 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    hard_err_usr_i_3
       (.I0(rxbuferr_out_lane3_i[1]),
        .I1(rxbuferr_out_lane3_i[0]),
        .I2(rxbuferr_out_lane2_i[1]),
        .I3(rxbuferr_out_lane2_i[0]),
        .I4(hard_err_usr_reg),
        .O(wr_err_rd_clk_sync_reg_0));
  FDRE hold_reg_r_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  LUT4 #(
    .INIT(16'h1110)) 
    new_do_wr_en_i_1__2
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(do_wr_en),
        .I3(FINAL_GATER_FOR_FIFO_DIN0),
        .O(new_do_wr_en_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__2_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1__1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_lane3_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_lane3_i[0]),
        .R(do_rd_en));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxfsm_reset_i_inferred_i_1
       (.I0(rxfsm_reset_i_inferred_i_2_n_0),
        .I1(hard_err_rst_int),
        .I2(\count_for_reset_r_reg[23]_1 ),
        .I3(rst_drp),
        .O(rxfsm_reset_i));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxfsm_reset_i_inferred_i_2
       (.I0(link_reset_3_c),
        .I1(link_reset_0_c),
        .I2(link_reset_1_c),
        .I3(link_reset_2_c),
        .O(rxfsm_reset_i_inferred_i_2_n_0));
  aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_av_s_r_reg_0(enchansync_dlyd_i),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({Q[66],p_0_in10_in,Q[65:64]}),
        .\cb_rxdatavalid_cnt_reg[0]_0 (\cb_rxdatavalid_cnt_reg[0] ),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_lane3_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_lane3_i),
        .empty(underflow_flag_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(master_stop_prev_cb_r),
        .master_stop_prev_cb_r_reg_0(master_stop_prev_cb_r_reg),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(rxchanisaligned_reg),
        .user_clk(user_clk));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
  aurora_64b66b_w256_1375Gbps_fifo_gen_slave \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(user_clk),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  LUT1 #(
    .INIT(2'h1)) 
    \sym_dec_i/RX_DATA_REG[63]_i_1__2 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_63 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_64 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_65 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__1
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__2 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__17[0]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__17[1]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__17[2]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__2 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__17[3]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__2 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__17[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__2 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__2 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__17[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__17[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane3_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__18[0]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__18[1]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__18[2]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__2 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__18[3]));
  LUT6 #(
    .INIT(64'h0000000022222AAA)) 
    \wr_monitor_flag[4]_i_1__2 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[1]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__2 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__18[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__18[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__18[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__18[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__18[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__18[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__parameterized0
   (valid_btf_detect_dlyd1,
    rxbuferr_out_lane2_i,
    RXHEADER_OUT_ERR_LANE2,
    RXLOSSOFSYNC_OUT_LANE2,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    start_cb_writes_lane2_i,
    link_reset_2_c,
    any_vld_btf_lane2_i,
    bit_err_chan_bond_lane2_i,
    Q,
    final_gater_for_fifo_din_lane2_i,
    rx_header_1_i_1,
    \fifo_dout_reg[64]_0 ,
    LINK_RESET_OUT0,
    SR,
    \CHBONDO_reg[0]_0 ,
    \CHBONDO_reg[1]_0 ,
    do_rd_en_lane2_i,
    \CHBONDO_reg[0]_1 ,
    hold_reg_r_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    init_clk,
    srst,
    user_clk,
    out,
    in0,
    EN_CHAN_SYNC,
    D,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_9_in,
    CB_detect0,
    CB_flag_direct,
    \count_for_reset_r_reg[23]_0 ,
    master_do_rd_en,
    FINAL_GATER_FOR_FIFO_DIN_reg_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    link_reset_1_c,
    link_reset_0_c,
    link_reset_3_c,
    LINK_RESET_OUT_reg,
    rst_drp,
    hard_err_rst_int,
    enchansync_dlyd_i,
    master_stop_prev_cb_r,
    enchansync_dlyd_i_0,
    master_stop_prev_cb_r_1,
    start_cb_writes_mastr_reg_0,
    CB_detect,
    \valid_btf_detect_extend_r_reg[4]_0 );
  output valid_btf_detect_dlyd1;
  output [1:0]rxbuferr_out_lane2_i;
  output RXHEADER_OUT_ERR_LANE2;
  output RXLOSSOFSYNC_OUT_LANE2;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output start_cb_writes_lane2_i;
  output link_reset_2_c;
  output any_vld_btf_lane2_i;
  output bit_err_chan_bond_lane2_i;
  output [65:0]Q;
  output final_gater_for_fifo_din_lane2_i;
  output rx_header_1_i_1;
  output \fifo_dout_reg[64]_0 ;
  output LINK_RESET_OUT0;
  output [0:0]SR;
  output \CHBONDO_reg[0]_0 ;
  output [1:0]\CHBONDO_reg[1]_0 ;
  output do_rd_en_lane2_i;
  output \CHBONDO_reg[0]_1 ;
  output hold_reg_r_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input init_clk;
  input srst;
  input user_clk;
  input out;
  input in0;
  input EN_CHAN_SYNC;
  input [66:0]D;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_9_in;
  input CB_detect0;
  input CB_flag_direct;
  input \count_for_reset_r_reg[23]_0 ;
  input master_do_rd_en;
  input FINAL_GATER_FOR_FIFO_DIN_reg_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input link_reset_1_c;
  input link_reset_0_c;
  input link_reset_3_c;
  input LINK_RESET_OUT_reg;
  input rst_drp;
  input hard_err_rst_int;
  input enchansync_dlyd_i;
  input master_stop_prev_cb_r;
  input enchansync_dlyd_i_0;
  input master_stop_prev_cb_r_1;
  input start_cb_writes_mastr_reg_0;
  input CB_detect;
  input [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;

  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1_n_0;
  wire ANY_VLD_BTF_FLAG_i_2__1_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__1_n_0;
  wire CB_align_ver_i_3__1_n_0;
  wire CB_align_ver_i_4__1_n_0;
  wire CB_align_ver_i_5__1_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR_i_1__1_n_0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire \CHBONDO_reg[0]_0 ;
  wire \CHBONDO_reg[0]_1 ;
  wire [1:0]\CHBONDO_reg[1]_0 ;
  wire [66:0]D;
  wire EN_CHAN_SYNC;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_reg_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_8__1_n_0;
  wire \LINK_RESET[0]_i_2__1_n_0 ;
  wire \LINK_RESET[0]_i_3__1_n_0 ;
  wire \LINK_RESET[0]_i_4__1_n_0 ;
  wire \LINK_RESET[0]_i_5__1_n_0 ;
  wire \LINK_RESET[0]_i_6__1_n_0 ;
  wire LINK_RESET_OUT0;
  wire LINK_RESET_OUT_reg;
  wire [65:0]Q;
  wire RXHEADER_OUT_ERR_LANE2;
  wire RXLOSSOFSYNC_OUT_LANE2;
  wire [0:0]SR;
  wire any_vld_btf_lane2_i;
  wire bit_err_chan_bond_lane2_i;
  wire buffer_too_empty_c;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire [1:0]ch_bond_m;
  wire \count_for_reset_r[0]_i_3__1_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__1_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane2_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1_n_0;
  wire enchansync_dlyd_i;
  wire enchansync_dlyd_i_0;
  wire enchansync_dlyd_i_1;
  wire [71:0]fifo_din_i_reg;
  wire \fifo_din_i_reg[71]_i_1__1_n_0 ;
  wire [70:0]fifo_dout_i;
  wire \fifo_dout_reg[64]_0 ;
  wire final_gater_for_fifo_din_lane2_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_rst_int;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_1;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire [1:0]p_0_in;
  wire p_0_in11_in;
  wire p_0_in12_in;
  wire p_0_in4_in;
  wire [5:0]p_0_in__13;
  wire [4:0]p_0_in__14;
  wire p_7_in;
  wire p_9_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rst_drp;
  wire rx_header_1_i_1;
  wire [1:0]rxbuferr_out_lane2_i;
  wire rxchanisaligned;
  wire rxchanisaligned1_out;
  wire rxdatavalid_lookahead_i;
  wire sel;
  wire srst;
  wire start_cb_writes_lane2_i;
  wire start_cb_writes_mastr;
  wire start_cb_writes_mastr_i_1_n_0;
  wire start_cb_writes_mastr_i_3_n_0;
  wire start_cb_writes_mastr_i_4_n_0;
  wire start_cb_writes_mastr_i_5_n_0;
  wire start_cb_writes_mastr_i_6_n_0;
  wire start_cb_writes_mastr_i_7_n_0;
  wire start_cb_writes_mastr_reg_0;
  wire start_cb_writes_stg1;
  wire start_cb_writes_stg2;
  wire start_cb_writes_stg3;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire user_clk;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[0]_i_1_n_0 ;
  wire \wait_for_rd_en[1]_i_1_n_0 ;
  wire \wait_for_rd_en[2]_i_1__1_n_0 ;
  wire \wait_for_rd_en[2]_i_2_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__1_CO_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_master_fifo.data_fifo_dout_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ANY_VLD_BTF_FLAG_i_1
       (.I0(any_vld_btf_lane2_i),
        .I1(p_7_in),
        .I2(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .O(ANY_VLD_BTF_FLAG_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    ANY_VLD_BTF_FLAG_i_2__1
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .O(ANY_VLD_BTF_FLAG_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    ANY_VLD_BTF_FLAG_i_3__1
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1_n_0),
        .Q(any_vld_btf_lane2_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000200)) 
    CB_align_ver_i_1__1
       (.I0(CB_align_ver_i_2__1_n_0),
        .I1(CB_align_ver_i_3__1_n_0),
        .I2(Q[51]),
        .I3(Q[59]),
        .I4(Q[48]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000004)) 
    CB_align_ver_i_2__1
       (.I0(Q[63]),
        .I1(Q[62]),
        .I2(Q[55]),
        .I3(Q[50]),
        .I4(CB_align_ver_i_4__1_n_0),
        .O(CB_align_ver_i_2__1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    CB_align_ver_i_3__1
       (.I0(Q[49]),
        .I1(Q[54]),
        .I2(Q[52]),
        .I3(Q[53]),
        .I4(CB_align_ver_i_5__1_n_0),
        .O(CB_align_ver_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4__1
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(Q[61]),
        .I3(master_do_rd_en),
        .O(CB_align_ver_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    CB_align_ver_i_5__1
       (.I0(Q[58]),
        .I1(Q[56]),
        .I2(Q[60]),
        .I3(Q[57]),
        .O(CB_align_ver_i_5__1_n_0));
  FDRE CB_align_ver_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__1
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(RXLOSSOFSYNC_OUT_LANE2),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1__1
       (.I0(Q[64]),
        .I1(master_do_rd_en),
        .I2(hold_reg_r),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(CC_RX_HEADER_OUT_ERR_i_1__1_n_0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR_i_1__1_n_0),
        .Q(RXHEADER_OUT_ERR_LANE2),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  FDRE \CHBONDO_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(ch_bond_m[0]),
        .Q(\CHBONDO_reg[1]_0 [0]),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE \CHBONDO_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(ch_bond_m[1]),
        .Q(\CHBONDO_reg[1]_0 [1]),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__1
       (.I0(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I1(p_7_in),
        .I2(final_gater_for_fifo_din_lane2_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0),
        .Q(final_gater_for_fifo_din_lane2_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT6 #(
    .INIT(64'h00000000E2E2E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__1
       (.I0(bit_err_chan_bond_lane2_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__1
       (.I0(fifo_din_i_reg[50]),
        .I1(fifo_din_i_reg[49]),
        .I2(fifo_din_i_reg[48]),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_8__1_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__1
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__1
       (.I0(wr_monitor_flag_reg[4]),
        .I1(wr_monitor_flag_reg[3]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__1
       (.I0(fifo_din_i_reg[53]),
        .I1(fifo_din_i_reg[54]),
        .I2(fifo_din_i_reg[52]),
        .I3(fifo_din_i_reg[51]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__1
       (.I0(fifo_din_i_reg[58]),
        .I1(fifo_din_i_reg[57]),
        .I2(fifo_din_i_reg[56]),
        .I3(fifo_din_i_reg[55]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_8__1
       (.I0(fifo_din_i_reg[59]),
        .I1(fifo_din_i_reg[60]),
        .I2(fifo_din_i_reg[61]),
        .I3(fifo_din_i_reg[62]),
        .I4(fifo_din_i_reg[63]),
        .I5(fifo_din_i_reg[68]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_8__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0),
        .Q(bit_err_chan_bond_lane2_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_1 
       (.I0(rst_drp),
        .I1(hard_err_rst_int),
        .I2(link_reset_2_c),
        .I3(link_reset_1_c),
        .I4(link_reset_0_c),
        .I5(link_reset_3_c),
        .O(SR));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1__1 
       (.I0(\LINK_RESET[0]_i_2__1_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3__1_n_0 ),
        .I4(\LINK_RESET[0]_i_4__1_n_0 ),
        .I5(\LINK_RESET[0]_i_5__1_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2__1 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__1 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__1 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6__1_n_0 ),
        .O(\LINK_RESET[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__1 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6__1 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    LINK_RESET_OUT_i_1
       (.I0(link_reset_2_c),
        .I1(link_reset_1_c),
        .I2(link_reset_0_c),
        .I3(link_reset_3_c),
        .I4(LINK_RESET_OUT_reg),
        .O(LINK_RESET_OUT0));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_2_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_0_REG_i_1__1
       (.I0(p_0_in[0]),
        .I1(hold_reg_r),
        .O(\fifo_dout_reg[64]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_1_REG_i_1__1
       (.I0(hold_reg_r),
        .I1(p_0_in[1]),
        .O(rx_header_1_i_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(EN_CHAN_SYNC),
        .Q(enchansync_dlyd_i_1),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(D[66]),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg3),
        .Q(start_cb_writes_lane2_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__1 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__1_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__1_n_0 ,\count_for_reset_r_reg[0]_i_2__1_n_1 ,\count_for_reset_r_reg[0]_i_2__1_n_2 ,\count_for_reset_r_reg[0]_i_2__1_n_3 ,\count_for_reset_r_reg[0]_i_2__1_n_4 ,\count_for_reset_r_reg[0]_i_2__1_n_5 ,\count_for_reset_r_reg[0]_i_2__1_n_6 ,\count_for_reset_r_reg[0]_i_2__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__1_n_8 ,\count_for_reset_r_reg[0]_i_2__1_n_9 ,\count_for_reset_r_reg[0]_i_2__1_n_10 ,\count_for_reset_r_reg[0]_i_2__1_n_11 ,\count_for_reset_r_reg[0]_i_2__1_n_12 ,\count_for_reset_r_reg[0]_i_2__1_n_13 ,\count_for_reset_r_reg[0]_i_2__1_n_14 ,\count_for_reset_r_reg[0]_i_2__1_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__1_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__1 
       (.CI(\count_for_reset_r_reg[8]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__1_n_1 ,\count_for_reset_r_reg[16]_i_1__1_n_2 ,\count_for_reset_r_reg[16]_i_1__1_n_3 ,\count_for_reset_r_reg[16]_i_1__1_n_4 ,\count_for_reset_r_reg[16]_i_1__1_n_5 ,\count_for_reset_r_reg[16]_i_1__1_n_6 ,\count_for_reset_r_reg[16]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__1_n_8 ,\count_for_reset_r_reg[16]_i_1__1_n_9 ,\count_for_reset_r_reg[16]_i_1__1_n_10 ,\count_for_reset_r_reg[16]_i_1__1_n_11 ,\count_for_reset_r_reg[16]_i_1__1_n_12 ,\count_for_reset_r_reg[16]_i_1__1_n_13 ,\count_for_reset_r_reg[16]_i_1__1_n_14 ,\count_for_reset_r_reg[16]_i_1__1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__1 
       (.CI(\count_for_reset_r_reg[0]_i_2__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__1_n_0 ,\count_for_reset_r_reg[8]_i_1__1_n_1 ,\count_for_reset_r_reg[8]_i_1__1_n_2 ,\count_for_reset_r_reg[8]_i_1__1_n_3 ,\count_for_reset_r_reg[8]_i_1__1_n_4 ,\count_for_reset_r_reg[8]_i_1__1_n_5 ,\count_for_reset_r_reg[8]_i_1__1_n_6 ,\count_for_reset_r_reg[8]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__1_n_8 ,\count_for_reset_r_reg[8]_i_1__1_n_9 ,\count_for_reset_r_reg[8]_i_1__1_n_10 ,\count_for_reset_r_reg[8]_i_1__1_n_11 ,\count_for_reset_r_reg[8]_i_1__1_n_12 ,\count_for_reset_r_reg[8]_i_1__1_n_13 ,\count_for_reset_r_reg[8]_i_1__1_n_14 ,\count_for_reset_r_reg[8]_i_1__1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__1
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h000C000800080008)) 
    do_wr_en_i_1
       (.I0(final_gater_for_fifo_din_lane2_i),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .I4(p_7_in),
        .I5(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .O(do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h15)) 
    \fifo_din_i_reg[71]_i_1__1 
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .O(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(fifo_din_i_reg[0]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(fifo_din_i_reg[10]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(fifo_din_i_reg[11]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(fifo_din_i_reg[12]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(fifo_din_i_reg[13]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(fifo_din_i_reg[14]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(fifo_din_i_reg[15]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(fifo_din_i_reg[16]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(fifo_din_i_reg[17]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(fifo_din_i_reg[18]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(fifo_din_i_reg[19]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(fifo_din_i_reg[1]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(fifo_din_i_reg[20]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(fifo_din_i_reg[21]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(fifo_din_i_reg[22]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(fifo_din_i_reg[23]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(fifo_din_i_reg[24]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(fifo_din_i_reg[25]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(fifo_din_i_reg[26]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(fifo_din_i_reg[27]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(fifo_din_i_reg[28]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(fifo_din_i_reg[29]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(fifo_din_i_reg[2]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(fifo_din_i_reg[30]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(fifo_din_i_reg[31]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(fifo_din_i_reg[32]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(fifo_din_i_reg[33]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(fifo_din_i_reg[34]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(fifo_din_i_reg[35]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(fifo_din_i_reg[36]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(fifo_din_i_reg[37]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(fifo_din_i_reg[38]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(fifo_din_i_reg[39]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(fifo_din_i_reg[3]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(fifo_din_i_reg[40]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(fifo_din_i_reg[41]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(fifo_din_i_reg[42]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(fifo_din_i_reg[43]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(fifo_din_i_reg[44]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(fifo_din_i_reg[45]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(fifo_din_i_reg[46]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(fifo_din_i_reg[47]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(fifo_din_i_reg[48]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(fifo_din_i_reg[49]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(fifo_din_i_reg[4]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(fifo_din_i_reg[50]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(fifo_din_i_reg[51]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(fifo_din_i_reg[52]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(fifo_din_i_reg[53]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(fifo_din_i_reg[54]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(fifo_din_i_reg[55]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(fifo_din_i_reg[56]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(fifo_din_i_reg[57]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(fifo_din_i_reg[58]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(fifo_din_i_reg[59]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(fifo_din_i_reg[5]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(fifo_din_i_reg[60]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(fifo_din_i_reg[61]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(fifo_din_i_reg[62]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(fifo_din_i_reg[63]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(fifo_din_i_reg[64]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(fifo_din_i_reg[65]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(fifo_din_i_reg[66]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(fifo_din_i_reg[67]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in4_in),
        .Q(fifo_din_i_reg[68]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(fifo_din_i_reg[69]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(fifo_din_i_reg[6]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(fifo_din_i_reg[70]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(fifo_din_i_reg[71]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(fifo_din_i_reg[7]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(fifo_din_i_reg[8]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(fifo_din_i_reg[9]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in11_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in12_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE hold_reg_r_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  aurora_64b66b_w256_1375Gbps_CH_BOND_MASTER \master.master 
       (.CB_align_ver(CB_align_ver),
        .CB_flag_flopped(CB_flag_flopped),
        .D(ch_bond_m),
        .Q({Q[65],p_0_in12_in,Q[64],p_0_in11_in}),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_reg(do_rd_en_lane2_i),
        .enchansync_dlyd_i_1(enchansync_dlyd_i_1),
        .master_do_rd_en(master_do_rd_en),
        .master_do_rd_en_out_reg(do_rd_en_reg_n_0),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned1_out(rxchanisaligned1_out),
        .user_clk(user_clk));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_master,fifo_generator_v13_2_7,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
  aurora_64b66b_w256_1375Gbps_fifo_gen_master \master_fifo.data_fifo 
       (.din(fifo_din_i_reg),
        .dout({\NLW_master_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(user_clk),
        .rd_en(out),
        .rd_rst_busy(\NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  LUT4 #(
    .INIT(16'h7740)) 
    master_stop_prev_cb_r_i_1__0
       (.I0(\CHBONDO_reg[1]_0 [0]),
        .I1(\CHBONDO_reg[1]_0 [1]),
        .I2(enchansync_dlyd_i),
        .I3(master_stop_prev_cb_r),
        .O(\CHBONDO_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h7740)) 
    master_stop_prev_cb_r_i_1__1
       (.I0(\CHBONDO_reg[1]_0 [0]),
        .I1(\CHBONDO_reg[1]_0 [1]),
        .I2(enchansync_dlyd_i_0),
        .I3(master_stop_prev_cb_r_1),
        .O(\CHBONDO_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    new_do_wr_en_i_1
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I3(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .O(new_do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h1F)) 
    new_underflow_flag_c_inv_i_1__2
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .I2(underflow_flag_r3),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in4_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[66]),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_lane2_i[0]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    start_cb_writes_mastr_i_1
       (.I0(start_cb_writes_mastr_reg_0),
        .I1(p_7_in),
        .I2(start_cb_writes_mastr),
        .O(start_cb_writes_mastr_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    start_cb_writes_mastr_i_2
       (.I0(start_cb_writes_mastr_i_3_n_0),
        .I1(start_cb_writes_mastr_i_4_n_0),
        .I2(start_cb_writes_mastr_i_5_n_0),
        .I3(start_cb_writes_mastr_i_6_n_0),
        .I4(start_cb_writes_mastr_i_7_n_0),
        .I5(p_0_in4_in),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'h0008)) 
    start_cb_writes_mastr_i_3
       (.I0(p_0_in4_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(start_cb_writes_mastr_i_3_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    start_cb_writes_mastr_i_4
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(start_cb_writes_mastr_i_4_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    start_cb_writes_mastr_i_5
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(start_cb_writes_mastr_i_5_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    start_cb_writes_mastr_i_6
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(start_cb_writes_mastr_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    start_cb_writes_mastr_i_7
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(start_cb_writes_mastr_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_mastr_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_mastr_i_1_n_0),
        .Q(start_cb_writes_mastr),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_mastr),
        .Q(start_cb_writes_stg1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg1),
        .Q(start_cb_writes_stg2),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg2),
        .Q(start_cb_writes_stg3),
        .R(cbcc_fifo_reset_wr_clk));
  LUT1 #(
    .INIT(2'h1)) 
    \sym_dec_i/RX_DATA_REG[63]_i_1__1 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_66 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .rxchanisaligned1_out(rxchanisaligned1_out),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_67 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_68 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_69 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__2
       (.I0(underflow_flag_c),
        .I1(buffer_too_empty_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(\wait_for_rd_en[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(\wait_for_rd_en[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__1 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[0]_i_1_n_0 ),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[1]_i_1_n_0 ),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[2]_i_2_n_0 ),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__13[0]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__13[1]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__13[2]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__1 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__13[3]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__1 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__13[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__1 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__1 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__13[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__13[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane2_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__14[0]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__14[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__14[2]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__1 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__14[3]));
  LUT6 #(
    .INIT(64'h0000000022222AAA)) 
    \wr_monitor_flag[4]_i_1__1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[1]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__1 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__14[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__14[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__14[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__14[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__14[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__14[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__1
   (valid_btf_detect_dlyd1,
    rxbuferr_out_i,
    RXHEADER_OUT_ERR,
    RXLOSSOFSYNC_OUT,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_0_c,
    master_do_rd_en,
    any_vld_btf_i,
    bit_err_chan_bond_i,
    rxdatavalid_to_lanes_i,
    final_gater_for_fifo_din_i,
    rx_header_1_i_3,
    \fifo_dout_reg[64]_0 ,
    do_rd_en_i,
    CB_flag_direct,
    CB_flag_direct_0,
    CB_flag_direct_1,
    \fifo_dout_reg[63]_0 ,
    master_do_rd_en_reg_0,
    master_do_rd_en_reg_1,
    hold_reg_r_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    init_clk,
    srst,
    user_clk,
    out,
    in0,
    EN_CHAN_SYNC,
    rxdatavalid_to_fifo_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    \count_for_reset_r_reg[23]_0 ,
    Q,
    CB_flag_flopped_reg_0,
    CB_flag_flopped_reg_1,
    FINAL_GATER_FOR_FIFO_DIN_i_2_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    rxchanisaligned_reg,
    D,
    CB_detect,
    SR);
  output valid_btf_detect_dlyd1;
  output [1:0]rxbuferr_out_i;
  output RXHEADER_OUT_ERR;
  output RXLOSSOFSYNC_OUT;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_0_c;
  output master_do_rd_en;
  output any_vld_btf_i;
  output bit_err_chan_bond_i;
  output rxdatavalid_to_lanes_i;
  output final_gater_for_fifo_din_i;
  output rx_header_1_i_3;
  output \fifo_dout_reg[64]_0 ;
  output do_rd_en_i;
  output CB_flag_direct;
  output CB_flag_direct_0;
  output CB_flag_direct_1;
  output [63:0]\fifo_dout_reg[63]_0 ;
  output master_do_rd_en_reg_0;
  output master_do_rd_en_reg_1;
  output hold_reg_r_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input init_clk;
  input srst;
  input user_clk;
  input out;
  input in0;
  input EN_CHAN_SYNC;
  input rxdatavalid_to_fifo_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input \count_for_reset_r_reg[23]_0 ;
  input [1:0]Q;
  input [2:0]CB_flag_flopped_reg_0;
  input [2:0]CB_flag_flopped_reg_1;
  input FINAL_GATER_FOR_FIFO_DIN_i_2_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input [1:0]rxchanisaligned_reg;
  input [65:0]D;
  input CB_detect;
  input [0:0]SR;

  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1__0_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2_n_0;
  wire CB_align_ver_i_3_n_0;
  wire CB_align_ver_i_4_n_0;
  wire CB_align_ver_i_5_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_direct_0;
  wire CB_flag_direct_1;
  wire CB_flag_direct_2;
  wire CB_flag_flopped;
  wire [2:0]CB_flag_flopped_reg_0;
  wire [2:0]CB_flag_flopped_reg_1;
  wire CC_RX_HEADER_OUT_ERR_i_1_n_0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [65:0]D;
  wire EN_CHAN_SYNC;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_8_n_0;
  wire \LINK_RESET[0]_i_2_n_0 ;
  wire \LINK_RESET[0]_i_3_n_0 ;
  wire \LINK_RESET[0]_i_4_n_0 ;
  wire \LINK_RESET[0]_i_5_n_0 ;
  wire \LINK_RESET[0]_i_6_n_0 ;
  wire \LINK_RESET[0]_i_7_n_0 ;
  wire [1:0]Q;
  wire RXHEADER_OUT_ERR;
  wire RXLOSSOFSYNC_OUT;
  wire [0:0]SR;
  wire any_vld_btf_i;
  wire bit_err_chan_bond_i;
  wire buffer_too_empty_c;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1_n_9 ;
  wire do_rd_en;
  wire do_rd_en_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__0_n_0;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire [63:0]\fifo_dout_reg[63]_0 ;
  wire \fifo_dout_reg[64]_0 ;
  wire final_gater_for_fifo_din_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire master_do_rd_en;
  wire master_do_rd_en_q;
  wire master_do_rd_en_reg_0;
  wire master_do_rd_en_reg_1;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__0_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire [1:0]p_0_in;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire p_0_in9_in;
  wire [5:0]p_0_in__5;
  wire [4:0]p_0_in__6;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_1_i_3;
  wire [1:0]rxbuferr_out_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_i;
  wire rxdatavalid_to_lanes_i;
  wire sel;
  wire srst;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire user_clk;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h11101010)) 
    ANY_VLD_BTF_FLAG_i_1__0
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(any_vld_btf_i),
        .I3(p_7_in),
        .I4(p_0_in3_in),
        .O(ANY_VLD_BTF_FLAG_i_1__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    ANY_VLD_BTF_FLAG_i_2
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_3
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0),
        .O(p_7_in));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__0_n_0),
        .Q(any_vld_btf_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000020)) 
    CB_align_ver_i_1
       (.I0(CB_align_ver_i_2_n_0),
        .I1(CB_align_ver_i_3_n_0),
        .I2(\fifo_dout_reg[63]_0 [59]),
        .I3(\fifo_dout_reg[63]_0 [53]),
        .I4(\fifo_dout_reg[63]_0 [50]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000004)) 
    CB_align_ver_i_2
       (.I0(\fifo_dout_reg[63]_0 [52]),
        .I1(master_do_rd_en),
        .I2(\fifo_dout_reg[63]_0 [58]),
        .I3(\fifo_dout_reg[63]_0 [49]),
        .I4(CB_align_ver_i_4_n_0),
        .O(CB_align_ver_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    CB_align_ver_i_3
       (.I0(\fifo_dout_reg[63]_0 [51]),
        .I1(\fifo_dout_reg[63]_0 [61]),
        .I2(\fifo_dout_reg[63]_0 [56]),
        .I3(\fifo_dout_reg[63]_0 [63]),
        .I4(CB_align_ver_i_5_n_0),
        .O(CB_align_ver_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(\fifo_dout_reg[63]_0 [60]),
        .I3(\fifo_dout_reg[63]_0 [62]),
        .O(CB_align_ver_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    CB_align_ver_i_5
       (.I0(\fifo_dout_reg[63]_0 [54]),
        .I1(\fifo_dout_reg[63]_0 [48]),
        .I2(\fifo_dout_reg[63]_0 [57]),
        .I3(\fifo_dout_reg[63]_0 [55]),
        .O(CB_align_ver_i_5_n_0));
  FDRE CB_align_ver_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1
       (.I0(master_do_rd_en),
        .I1(p_0_in11_in),
        .O(CB_flag_direct_2));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__0
       (.I0(master_do_rd_en),
        .I1(CB_flag_flopped_reg_1[2]),
        .O(CB_flag_direct));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__1
       (.I0(master_do_rd_en),
        .I1(Q[1]),
        .O(CB_flag_direct_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__2
       (.I0(master_do_rd_en),
        .I1(CB_flag_flopped_reg_0[2]),
        .O(CB_flag_direct_1));
  FDRE CB_flag_flopped_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_flag_direct_2),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(RXLOSSOFSYNC_OUT),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1
       (.I0(master_do_rd_en),
        .I1(p_0_in13_in),
        .I2(hold_reg_r),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(CC_RX_HEADER_OUT_ERR_i_1_n_0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR_i_1_n_0),
        .Q(RXHEADER_OUT_ERR),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_2_0),
        .I1(p_0_in3_in),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0),
        .Q(final_gater_for_fifo_din_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT6 #(
    .INIT(64'h00000000E2E2E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1
       (.I0(bit_err_chan_bond_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_8_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4
       (.I0(wr_monitor_flag_reg[4]),
        .I1(wr_monitor_flag_reg[3]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_8
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0),
        .Q(bit_err_chan_bond_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8000000)) 
    \LINK_RESET[0]_i_1 
       (.I0(\LINK_RESET[0]_i_2_n_0 ),
        .I1(count_for_reset_r_reg[7]),
        .I2(\LINK_RESET[0]_i_3_n_0 ),
        .I3(\LINK_RESET[0]_i_4_n_0 ),
        .I4(\LINK_RESET[0]_i_5_n_0 ),
        .O(link_reset_0));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \LINK_RESET[0]_i_2 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .I2(count_for_reset_r_reg[5]),
        .I3(count_for_reset_r_reg[6]),
        .I4(count_for_reset_r_reg[4]),
        .I5(count_for_reset_r_reg[3]),
        .O(\LINK_RESET[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3 
       (.I0(count_for_reset_r_reg[5]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[3]),
        .I3(count_for_reset_r_reg[4]),
        .I4(count_for_reset_r_reg[0]),
        .I5(\LINK_RESET[0]_i_6_n_0 ),
        .O(\LINK_RESET[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_7_n_0 ),
        .O(\LINK_RESET[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \LINK_RESET[0]_i_6 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .O(\LINK_RESET[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_7 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_7_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_0_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_0_REG_i_1
       (.I0(p_0_in[0]),
        .I1(hold_reg_r),
        .O(\fifo_dout_reg[64]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_1_REG_i_1
       (.I0(hold_reg_r),
        .I1(p_0_in[1]),
        .O(rx_header_1_i_3));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    SOFT_ERR0_i_1
       (.I0(Q[0]),
        .I1(CB_flag_flopped_reg_0[1]),
        .I2(p_0_in13_in),
        .I3(master_do_rd_en),
        .I4(CB_flag_flopped_reg_1[1]),
        .O(rxdatavalid_to_lanes_i));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(EN_CHAN_SYNC),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2_n_0 ,\count_for_reset_r_reg[0]_i_2_n_1 ,\count_for_reset_r_reg[0]_i_2_n_2 ,\count_for_reset_r_reg[0]_i_2_n_3 ,\count_for_reset_r_reg[0]_i_2_n_4 ,\count_for_reset_r_reg[0]_i_2_n_5 ,\count_for_reset_r_reg[0]_i_2_n_6 ,\count_for_reset_r_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2_n_8 ,\count_for_reset_r_reg[0]_i_2_n_9 ,\count_for_reset_r_reg[0]_i_2_n_10 ,\count_for_reset_r_reg[0]_i_2_n_11 ,\count_for_reset_r_reg[0]_i_2_n_12 ,\count_for_reset_r_reg[0]_i_2_n_13 ,\count_for_reset_r_reg[0]_i_2_n_14 ,\count_for_reset_r_reg[0]_i_2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1 
       (.CI(\count_for_reset_r_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1_n_1 ,\count_for_reset_r_reg[16]_i_1_n_2 ,\count_for_reset_r_reg[16]_i_1_n_3 ,\count_for_reset_r_reg[16]_i_1_n_4 ,\count_for_reset_r_reg[16]_i_1_n_5 ,\count_for_reset_r_reg[16]_i_1_n_6 ,\count_for_reset_r_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1_n_8 ,\count_for_reset_r_reg[16]_i_1_n_9 ,\count_for_reset_r_reg[16]_i_1_n_10 ,\count_for_reset_r_reg[16]_i_1_n_11 ,\count_for_reset_r_reg[16]_i_1_n_12 ,\count_for_reset_r_reg[16]_i_1_n_13 ,\count_for_reset_r_reg[16]_i_1_n_14 ,\count_for_reset_r_reg[16]_i_1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1 
       (.CI(\count_for_reset_r_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1_n_0 ,\count_for_reset_r_reg[8]_i_1_n_1 ,\count_for_reset_r_reg[8]_i_1_n_2 ,\count_for_reset_r_reg[8]_i_1_n_3 ,\count_for_reset_r_reg[8]_i_1_n_4 ,\count_for_reset_r_reg[8]_i_1_n_5 ,\count_for_reset_r_reg[8]_i_1_n_6 ,\count_for_reset_r_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1_n_8 ,\count_for_reset_r_reg[8]_i_1_n_9 ,\count_for_reset_r_reg[8]_i_1_n_10 ,\count_for_reset_r_reg[8]_i_1_n_11 ,\count_for_reset_r_reg[8]_i_1_n_12 ,\count_for_reset_r_reg[8]_i_1_n_13 ,\count_for_reset_r_reg[8]_i_1_n_14 ,\count_for_reset_r_reg[8]_i_1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h0000110000001000)) 
    do_wr_en_i_1__0
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(final_gater_for_fifo_din_i),
        .I3(raw_data_r[66]),
        .I4(overflow_flag_c),
        .I5(FINAL_GATER_FOR_FIFO_DIN0),
        .O(do_wr_en_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__0_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(\fifo_dout_reg[63]_0 [0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(\fifo_dout_reg[63]_0 [10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(\fifo_dout_reg[63]_0 [11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(\fifo_dout_reg[63]_0 [12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(\fifo_dout_reg[63]_0 [13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(\fifo_dout_reg[63]_0 [14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(\fifo_dout_reg[63]_0 [15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(\fifo_dout_reg[63]_0 [16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(\fifo_dout_reg[63]_0 [17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(\fifo_dout_reg[63]_0 [18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(\fifo_dout_reg[63]_0 [19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(\fifo_dout_reg[63]_0 [1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(\fifo_dout_reg[63]_0 [20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(\fifo_dout_reg[63]_0 [21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(\fifo_dout_reg[63]_0 [22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(\fifo_dout_reg[63]_0 [23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(\fifo_dout_reg[63]_0 [24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(\fifo_dout_reg[63]_0 [25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(\fifo_dout_reg[63]_0 [26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(\fifo_dout_reg[63]_0 [27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(\fifo_dout_reg[63]_0 [28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(\fifo_dout_reg[63]_0 [29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(\fifo_dout_reg[63]_0 [2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(\fifo_dout_reg[63]_0 [30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(\fifo_dout_reg[63]_0 [31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(\fifo_dout_reg[63]_0 [32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(\fifo_dout_reg[63]_0 [33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(\fifo_dout_reg[63]_0 [34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(\fifo_dout_reg[63]_0 [35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(\fifo_dout_reg[63]_0 [36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(\fifo_dout_reg[63]_0 [37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(\fifo_dout_reg[63]_0 [38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(\fifo_dout_reg[63]_0 [39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(\fifo_dout_reg[63]_0 [3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(\fifo_dout_reg[63]_0 [40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(\fifo_dout_reg[63]_0 [41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(\fifo_dout_reg[63]_0 [42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(\fifo_dout_reg[63]_0 [43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(\fifo_dout_reg[63]_0 [44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(\fifo_dout_reg[63]_0 [45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(\fifo_dout_reg[63]_0 [46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(\fifo_dout_reg[63]_0 [47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(\fifo_dout_reg[63]_0 [48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(\fifo_dout_reg[63]_0 [49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(\fifo_dout_reg[63]_0 [4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(\fifo_dout_reg[63]_0 [50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(\fifo_dout_reg[63]_0 [51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(\fifo_dout_reg[63]_0 [52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(\fifo_dout_reg[63]_0 [53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(\fifo_dout_reg[63]_0 [54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(\fifo_dout_reg[63]_0 [55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(\fifo_dout_reg[63]_0 [56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(\fifo_dout_reg[63]_0 [57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(\fifo_dout_reg[63]_0 [58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(\fifo_dout_reg[63]_0 [59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(\fifo_dout_reg[63]_0 [5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(\fifo_dout_reg[63]_0 [60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(\fifo_dout_reg[63]_0 [61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(\fifo_dout_reg[63]_0 [62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(\fifo_dout_reg[63]_0 [63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in9_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(p_0_in13_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(\fifo_dout_reg[63]_0 [6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(p_0_in11_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(\fifo_dout_reg[63]_0 [7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(\fifo_dout_reg[63]_0 [8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(\fifo_dout_reg[63]_0 [9]),
        .R(1'b0));
  FDRE hold_reg_r_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE master_do_rd_en_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(master_do_rd_en_q),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE master_do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(master_do_rd_en_q),
        .Q(master_do_rd_en),
        .R(cbcc_fifo_reset_rd_clk));
  LUT4 #(
    .INIT(16'h1110)) 
    new_do_wr_en_i_1__0
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(do_wr_en),
        .I3(FINAL_GATER_FOR_FIFO_DIN0),
        .O(new_do_wr_en_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__0_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_i[0]),
        .R(do_rd_en));
  aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE_81 \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({p_0_in11_in,p_0_in10_in,p_0_in13_in,p_0_in9_in}),
        .\cb_rxdatavalid_cnt_reg[0]_0 (CB_flag_flopped_reg_1[0]),
        .\cb_rxdatavalid_cnt_reg[0]_1 (CB_flag_flopped_reg_0[0]),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_i),
        .empty(underflow_flag_c),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .\master_ack_cnt_reg[0]_0 (master_do_rd_en),
        .master_do_rd_en_reg(master_do_rd_en_reg_0),
        .master_do_rd_en_reg_0(master_do_rd_en_reg_1),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(rxchanisaligned_reg),
        .user_clk(user_clk));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
  aurora_64b66b_w256_1375Gbps_fifo_gen_slave__xdcDup__1 \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(user_clk),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  LUT1 #(
    .INIT(2'h1)) 
    \sym_dec_i/RX_DATA_REG[63]_i_1 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_82 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_83 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_84 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_85 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(SR));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__5[0]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__5[1]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__5[2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__5[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__5[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__5[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__6[0]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__6[1]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__6[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__6[3]));
  LUT6 #(
    .INIT(64'h0000000022222AAA)) 
    \wr_monitor_flag[4]_i_1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[1]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__6[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__6[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__6[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__6[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__6[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__6[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__2
   (valid_btf_detect_dlyd1,
    enchansync_dlyd_i,
    RXHEADER_OUT_ERR_LANE1,
    RXLOSSOFSYNC_OUT_LANE1,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_1_c,
    master_stop_prev_cb_r,
    any_vld_btf_lane1_i,
    bit_err_chan_bond_lane1_i,
    START_CB_WRITES_OUT_reg_0,
    Q,
    wr_err_rd_clk_sync_reg_0,
    final_gater_for_fifo_din_lane1_i,
    rx_header_1_i_2,
    \fifo_dout_reg[64]_0 ,
    do_rd_en_lane1_i,
    hard_err_usr0,
    hold_reg_r_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    init_clk,
    srst,
    user_clk,
    out,
    in0,
    EN_CHAN_SYNC,
    rxdatavalid_to_fifo_lane1_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    CB_flag_direct,
    \count_for_reset_r_reg[23]_0 ,
    master_stop_prev_cb_r_reg,
    start_cb_writes_lane2_i,
    master_do_rd_en,
    rxbuferr_out_i,
    hard_err_usr_reg,
    FINAL_GATER_FOR_FIFO_DIN_i_2__0_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    \cb_rxdatavalid_cnt_reg[0] ,
    CHANNEL_UP_RX_IF,
    hard_err_usr_reg_0,
    CHANNEL_UP_TX_IF,
    tx_buf_err_i,
    rxchanisaligned_reg,
    START_CB_WRITES_OUT_reg_1,
    D,
    CB_detect,
    SR);
  output valid_btf_detect_dlyd1;
  output enchansync_dlyd_i;
  output RXHEADER_OUT_ERR_LANE1;
  output RXLOSSOFSYNC_OUT_LANE1;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_1_c;
  output master_stop_prev_cb_r;
  output any_vld_btf_lane1_i;
  output bit_err_chan_bond_lane1_i;
  output START_CB_WRITES_OUT_reg_0;
  output [66:0]Q;
  output wr_err_rd_clk_sync_reg_0;
  output final_gater_for_fifo_din_lane1_i;
  output rx_header_1_i_2;
  output \fifo_dout_reg[64]_0 ;
  output do_rd_en_lane1_i;
  output hard_err_usr0;
  output hold_reg_r_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input init_clk;
  input srst;
  input user_clk;
  input out;
  input in0;
  input EN_CHAN_SYNC;
  input rxdatavalid_to_fifo_lane1_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input CB_flag_direct;
  input \count_for_reset_r_reg[23]_0 ;
  input master_stop_prev_cb_r_reg;
  input start_cb_writes_lane2_i;
  input master_do_rd_en;
  input [1:0]rxbuferr_out_i;
  input hard_err_usr_reg;
  input FINAL_GATER_FOR_FIFO_DIN_i_2__0_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input \cb_rxdatavalid_cnt_reg[0] ;
  input CHANNEL_UP_RX_IF;
  input hard_err_usr_reg_0;
  input CHANNEL_UP_TX_IF;
  input [0:0]tx_buf_err_i;
  input [1:0]rxchanisaligned_reg;
  input START_CB_WRITES_OUT_reg_1;
  input [65:0]D;
  input CB_detect;
  input [0:0]SR;

  wire ANY_VLD_BTF_FLAG0__4;
  wire ANY_VLD_BTF_FLAG_i_1__1_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__0_n_0;
  wire CB_align_ver_i_3__0_n_0;
  wire CB_align_ver_i_4__0_n_0;
  wire CB_align_ver_i_5__0_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR_i_1__0_n_0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire CHANNEL_UP_RX_IF;
  wire CHANNEL_UP_TX_IF;
  wire [65:0]D;
  wire EN_CHAN_SYNC;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2__0_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_8__0_n_0;
  wire \LINK_RESET[0]_i_2__0_n_0 ;
  wire \LINK_RESET[0]_i_3__0_n_0 ;
  wire \LINK_RESET[0]_i_4__0_n_0 ;
  wire \LINK_RESET[0]_i_5__0_n_0 ;
  wire \LINK_RESET[0]_i_6__0_n_0 ;
  wire \LINK_RESET[0]_i_7__0_n_0 ;
  wire [66:0]Q;
  wire RXHEADER_OUT_ERR_LANE1;
  wire RXLOSSOFSYNC_OUT_LANE1;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT_i_1_n_0;
  wire START_CB_WRITES_OUT_reg_0;
  wire START_CB_WRITES_OUT_reg_1;
  wire any_vld_btf_lane1_i;
  wire bit_err_chan_bond_lane1_i;
  wire buffer_too_empty_c;
  wire \cb_rxdatavalid_cnt_reg[0] ;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3__0_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__0_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane1_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__1_n_0;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1__0_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire \fifo_dout_reg[64]_0 ;
  wire final_gater_for_fifo_din_lane1_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_usr0;
  wire hard_err_usr_reg;
  wire hard_err_usr_reg_0;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_1_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__1_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire [1:0]p_0_in;
  wire p_0_in10_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire [4:0]p_0_in__10;
  wire [5:0]p_0_in__9;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_1_i_2;
  wire [1:0]rxbuferr_out_i;
  wire [1:0]rxbuferr_out_lane1_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_lane1_i;
  wire sel;
  wire srst;
  wire start_cb_writes_lane1_i;
  wire start_cb_writes_lane2_i;
  wire [0:0]tx_buf_err_i;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire user_clk;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1__0_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_err_rd_clk_sync_reg_0;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h11101010)) 
    ANY_VLD_BTF_FLAG_i_1__1
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(any_vld_btf_lane1_i),
        .I3(p_7_in),
        .I4(p_0_in3_in),
        .O(ANY_VLD_BTF_FLAG_i_1__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    ANY_VLD_BTF_FLAG_i_2__0
       (.I0(wait_for_wr_en_wr4[0]),
        .I1(wait_for_wr_en_wr4[5]),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .I4(wait_for_wr_en_wr4[2]),
        .I5(wait_for_wr_en_wr4[4]),
        .O(ANY_VLD_BTF_FLAG0__4));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_3__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0),
        .O(p_7_in));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__1_n_0),
        .Q(any_vld_btf_lane1_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000002)) 
    CB_align_ver_i_1__0
       (.I0(CB_align_ver_i_2__0_n_0),
        .I1(CB_align_ver_i_3__0_n_0),
        .I2(Q[63]),
        .I3(Q[53]),
        .I4(Q[48]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CB_align_ver_i_2__0
       (.I0(Q[55]),
        .I1(Q[52]),
        .I2(Q[58]),
        .I3(Q[49]),
        .I4(CB_align_ver_i_4__0_n_0),
        .O(CB_align_ver_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CB_align_ver_i_3__0
       (.I0(Q[51]),
        .I1(Q[61]),
        .I2(Q[50]),
        .I3(Q[54]),
        .I4(CB_align_ver_i_5__0_n_0),
        .O(CB_align_ver_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(Q[62]),
        .I3(master_do_rd_en),
        .O(CB_align_ver_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CB_align_ver_i_5__0
       (.I0(Q[59]),
        .I1(Q[57]),
        .I2(Q[60]),
        .I3(Q[56]),
        .O(CB_align_ver_i_5__0_n_0));
  FDRE CB_align_ver_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__0
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(RXLOSSOFSYNC_OUT_LANE1),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'h88080888)) 
    CC_RX_HEADER_OUT_ERR_i_1__0
       (.I0(Q[65]),
        .I1(master_do_rd_en),
        .I2(hold_reg_r),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(CC_RX_HEADER_OUT_ERR_i_1__0_n_0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR_i_1__0_n_0),
        .Q(RXHEADER_OUT_ERR_LANE1),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_lane1_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3__0
       (.I0(p_0_in3_in),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_2__0_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4__0
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5__0
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6__0
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7__0
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8__0
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0),
        .Q(final_gater_for_fifo_din_lane1_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT6 #(
    .INIT(64'h00000000E2E2E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__0
       (.I0(bit_err_chan_bond_lane1_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__0
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_8__0_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__0
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__0
       (.I0(wr_monitor_flag_reg[4]),
        .I1(wr_monitor_flag_reg[3]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__0
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__0
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__0
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_8__0
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_8__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0),
        .Q(bit_err_chan_bond_lane1_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8000000)) 
    \LINK_RESET[0]_i_1__0 
       (.I0(\LINK_RESET[0]_i_2__0_n_0 ),
        .I1(count_for_reset_r_reg[7]),
        .I2(\LINK_RESET[0]_i_3__0_n_0 ),
        .I3(\LINK_RESET[0]_i_4__0_n_0 ),
        .I4(\LINK_RESET[0]_i_5__0_n_0 ),
        .O(link_reset_0));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \LINK_RESET[0]_i_2__0 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .I2(count_for_reset_r_reg[5]),
        .I3(count_for_reset_r_reg[6]),
        .I4(count_for_reset_r_reg[4]),
        .I5(count_for_reset_r_reg[3]),
        .O(\LINK_RESET[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__0 
       (.I0(count_for_reset_r_reg[5]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[3]),
        .I3(count_for_reset_r_reg[4]),
        .I4(count_for_reset_r_reg[0]),
        .I5(\LINK_RESET[0]_i_6__0_n_0 ),
        .O(\LINK_RESET[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__0 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_7__0_n_0 ),
        .O(\LINK_RESET[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__0 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \LINK_RESET[0]_i_6__0 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .O(\LINK_RESET[0]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_7__0 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_7__0_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_1_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_0_REG_i_1__0
       (.I0(p_0_in[0]),
        .I1(hold_reg_r),
        .O(\fifo_dout_reg[64]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    RX_HEADER_1_REG_i_1__0
       (.I0(hold_reg_r),
        .I1(p_0_in[1]),
        .O(rx_header_1_i_2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(EN_CHAN_SYNC),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_lane1_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    START_CB_WRITES_OUT_i_1
       (.I0(start_cb_writes_lane1_i),
        .I1(START_CB_WRITES_OUT_reg_1),
        .I2(cbcc_fifo_reset_wr_clk),
        .O(START_CB_WRITES_OUT_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT_i_1_n_0),
        .Q(start_cb_writes_lane1_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    all_start_cb_writes_out_i_1
       (.I0(start_cb_writes_lane1_i),
        .I1(start_cb_writes_lane2_i),
        .O(START_CB_WRITES_OUT_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__0 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__0_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__0 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__0_n_0 ,\count_for_reset_r_reg[0]_i_2__0_n_1 ,\count_for_reset_r_reg[0]_i_2__0_n_2 ,\count_for_reset_r_reg[0]_i_2__0_n_3 ,\count_for_reset_r_reg[0]_i_2__0_n_4 ,\count_for_reset_r_reg[0]_i_2__0_n_5 ,\count_for_reset_r_reg[0]_i_2__0_n_6 ,\count_for_reset_r_reg[0]_i_2__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__0_n_8 ,\count_for_reset_r_reg[0]_i_2__0_n_9 ,\count_for_reset_r_reg[0]_i_2__0_n_10 ,\count_for_reset_r_reg[0]_i_2__0_n_11 ,\count_for_reset_r_reg[0]_i_2__0_n_12 ,\count_for_reset_r_reg[0]_i_2__0_n_13 ,\count_for_reset_r_reg[0]_i_2__0_n_14 ,\count_for_reset_r_reg[0]_i_2__0_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__0_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__0 
       (.CI(\count_for_reset_r_reg[8]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__0_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__0_n_1 ,\count_for_reset_r_reg[16]_i_1__0_n_2 ,\count_for_reset_r_reg[16]_i_1__0_n_3 ,\count_for_reset_r_reg[16]_i_1__0_n_4 ,\count_for_reset_r_reg[16]_i_1__0_n_5 ,\count_for_reset_r_reg[16]_i_1__0_n_6 ,\count_for_reset_r_reg[16]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__0_n_8 ,\count_for_reset_r_reg[16]_i_1__0_n_9 ,\count_for_reset_r_reg[16]_i_1__0_n_10 ,\count_for_reset_r_reg[16]_i_1__0_n_11 ,\count_for_reset_r_reg[16]_i_1__0_n_12 ,\count_for_reset_r_reg[16]_i_1__0_n_13 ,\count_for_reset_r_reg[16]_i_1__0_n_14 ,\count_for_reset_r_reg[16]_i_1__0_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__0 
       (.CI(\count_for_reset_r_reg[0]_i_2__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__0_n_0 ,\count_for_reset_r_reg[8]_i_1__0_n_1 ,\count_for_reset_r_reg[8]_i_1__0_n_2 ,\count_for_reset_r_reg[8]_i_1__0_n_3 ,\count_for_reset_r_reg[8]_i_1__0_n_4 ,\count_for_reset_r_reg[8]_i_1__0_n_5 ,\count_for_reset_r_reg[8]_i_1__0_n_6 ,\count_for_reset_r_reg[8]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__0_n_8 ,\count_for_reset_r_reg[8]_i_1__0_n_9 ,\count_for_reset_r_reg[8]_i_1__0_n_10 ,\count_for_reset_r_reg[8]_i_1__0_n_11 ,\count_for_reset_r_reg[8]_i_1__0_n_12 ,\count_for_reset_r_reg[8]_i_1__0_n_13 ,\count_for_reset_r_reg[8]_i_1__0_n_14 ,\count_for_reset_r_reg[8]_i_1__0_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__0
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h0000110000001000)) 
    do_wr_en_i_1__1
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(final_gater_for_fifo_din_lane1_i),
        .I3(raw_data_r[66]),
        .I4(overflow_flag_c),
        .I5(FINAL_GATER_FOR_FIFO_DIN0),
        .O(do_wr_en_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1__0 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(p_0_in[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(p_0_in[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFA8A8A8)) 
    hard_err_usr_i_1
       (.I0(CHANNEL_UP_RX_IF),
        .I1(wr_err_rd_clk_sync_reg_0),
        .I2(hard_err_usr_reg_0),
        .I3(CHANNEL_UP_TX_IF),
        .I4(tx_buf_err_i),
        .O(hard_err_usr0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    hard_err_usr_i_2
       (.I0(rxbuferr_out_lane1_i[1]),
        .I1(rxbuferr_out_lane1_i[0]),
        .I2(rxbuferr_out_i[1]),
        .I3(hard_err_usr_reg),
        .I4(rxbuferr_out_i[0]),
        .O(wr_err_rd_clk_sync_reg_0));
  FDRE hold_reg_r_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(user_clk),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  LUT4 #(
    .INIT(16'h1110)) 
    new_do_wr_en_i_1__1
       (.I0(ANY_VLD_BTF_FLAG0__4),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(do_wr_en),
        .I3(FINAL_GATER_FOR_FIFO_DIN0),
        .O(new_do_wr_en_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1__0
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(user_clk),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_lane1_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_lane1_i[0]),
        .R(do_rd_en));
  aurora_64b66b_w256_1375Gbps_CH_BOND_SLAVE_70 \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_av_s_r_reg_0(enchansync_dlyd_i),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({Q[66],p_0_in10_in,Q[65:64]}),
        .\cb_rxdatavalid_cnt_reg[0]_0 (\cb_rxdatavalid_cnt_reg[0] ),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_lane1_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_lane1_i),
        .empty(underflow_flag_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(master_stop_prev_cb_r),
        .master_stop_prev_cb_r_reg_0(master_stop_prev_cb_r_reg),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(rxchanisaligned_reg),
        .user_clk(user_clk));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
  aurora_64b66b_w256_1375Gbps_fifo_gen_slave__xdcDup__2 \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(user_clk),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  LUT1 #(
    .INIT(2'h1)) 
    \sym_dec_i/RX_DATA_REG[63]_i_1__0 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_71 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_72 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_73 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_74 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__0
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(SR));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__0 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(user_clk),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__9[0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__9[1]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__9[2]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__0 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__9[3]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__0 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__9[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__0 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__0 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__9[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__9[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane1_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__10[0]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__10[1]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__10[2]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__0 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__10[3]));
  LUT6 #(
    .INIT(64'h0000000022222AAA)) 
    \wr_monitor_flag[4]_i_1__0 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[1]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__0 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__10[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__10[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__10[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__10[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__10[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__10[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B
   (CC_detect_pulse_i,
    p_6_in,
    Q,
    CB_detect,
    CB_detect0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_i,
    CB_detect_dlyd0p5,
    CB_detect_dlyd0p5_reg,
    in0,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]Q;
  output CB_detect;
  output CB_detect0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_i;
  input CB_detect_dlyd0p5;
  input [1:0]CB_detect_dlyd0p5_reg;
  input in0;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire [1:0]CB_detect_dlyd0p5_reg;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2_n_0;
  wire CC_detect_dlyd1_i_3_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2_n_0;
  wire CC_detect_pulse_r_i_3_n_0;
  wire CC_detect_pulse_r_i_4_n_0;
  wire [0:0]E;
  wire [63:0]Q;
  wire \descrambler[57]_i_1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1
       (.I0(CC_detect_pulse_r_i_3_n_0),
        .I1(CC_detect_dlyd1_i_3_n_0),
        .I2(Q[54]),
        .I3(Q[55]),
        .I4(rxdatavalid_to_fifo_i),
        .I5(CC_detect_dlyd1_i_2_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1
       (.I0(CC_detect_pulse_r_i_3_n_0),
        .I1(CC_detect_dlyd1_i_2_n_0),
        .I2(rxdatavalid_to_fifo_i),
        .I3(Q[54]),
        .I4(Q[55]),
        .I5(CC_detect_dlyd1_i_3_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2
       (.I0(Q[60]),
        .I1(CB_detect_dlyd0p5_reg[1]),
        .I2(Q[61]),
        .I3(CB_detect_dlyd0p5_reg[0]),
        .O(CC_detect_dlyd1_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3
       (.I0(Q[59]),
        .I1(Q[62]),
        .I2(Q[51]),
        .I3(Q[53]),
        .O(CC_detect_dlyd1_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1
       (.I0(CC_detect_pulse_r_i_2_n_0),
        .I1(CC_detect_pulse_r_i_3_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2
       (.I0(CC_detect_dlyd1_i_3_n_0),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(rxdatavalid_to_fifo_i),
        .I4(CC_detect_dlyd1_i_2_n_0),
        .O(CC_detect_pulse_r_i_2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3
       (.I0(Q[56]),
        .I1(Q[58]),
        .I2(Q[48]),
        .I3(Q[52]),
        .I4(CC_detect_pulse_r_i_4_n_0),
        .O(CC_detect_pulse_r_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4
       (.I0(Q[50]),
        .I1(Q[57]),
        .I2(Q[63]),
        .I3(Q[49]),
        .O(CC_detect_pulse_r_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1 
       (.I0(in0),
        .O(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2_n_0 ),
        .I2(CC_detect_pulse_r_i_3_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2 
       (.I0(CC_detect_dlyd1_i_2_n_0),
        .I1(rxdatavalid_to_fifo_i),
        .I2(Q[55]),
        .I3(Q[54]),
        .I4(CC_detect_dlyd1_i_3_n_0),
        .O(\fifo_din_i_reg[70]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(Q[0]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(Q[10]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(Q[11]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(Q[12]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(Q[13]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(Q[14]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(Q[15]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(Q[16]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(Q[17]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(Q[18]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(Q[19]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(Q[1]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(Q[20]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(Q[21]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(Q[22]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(Q[23]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(Q[24]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(Q[25]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(Q[26]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(Q[27]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(Q[28]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(Q[29]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(Q[2]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(Q[30]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(Q[31]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(Q[32]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(Q[33]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(Q[34]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(Q[35]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(Q[36]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(Q[37]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(Q[38]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(Q[39]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(Q[3]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(Q[40]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(Q[41]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(Q[42]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(Q[43]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(Q[44]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(Q[45]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(Q[46]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(Q[47]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(Q[48]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(Q[49]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(Q[4]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(Q[50]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(Q[51]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(Q[52]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(Q[53]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(Q[54]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(Q[55]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(Q[56]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(Q[57]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(Q[58]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(Q[59]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(Q[5]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(Q[60]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(Q[61]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(Q[62]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(Q[63]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(Q[6]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(Q[7]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(Q[8]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(Q[9]),
        .R(\descrambler[57]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_30
   (CC_detect_pulse_i,
    p_6_in,
    Q,
    CB_detect,
    CB_detect0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_lane1_i,
    CB_detect_dlyd0p5,
    CB_detect_dlyd0p5_reg,
    in0,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]Q;
  output CB_detect;
  output CB_detect0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_lane1_i;
  input CB_detect_dlyd0p5;
  input [1:0]CB_detect_dlyd0p5_reg;
  input in0;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire [1:0]CB_detect_dlyd0p5_reg;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2__0_n_0;
  wire CC_detect_dlyd1_i_3__0_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__0_n_0;
  wire CC_detect_pulse_r_i_3__0_n_0;
  wire CC_detect_pulse_r_i_4__0_n_0;
  wire [0:0]E;
  wire [63:0]Q;
  wire \descrambler[57]_i_1__0_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2__0_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_lane1_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1__0
       (.I0(CC_detect_pulse_r_i_3__0_n_0),
        .I1(CC_detect_dlyd1_i_3__0_n_0),
        .I2(Q[54]),
        .I3(Q[55]),
        .I4(rxdatavalid_to_fifo_lane1_i),
        .I5(CC_detect_dlyd1_i_2__0_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1__0
       (.I0(CC_detect_pulse_r_i_3__0_n_0),
        .I1(CC_detect_dlyd1_i_2__0_n_0),
        .I2(rxdatavalid_to_fifo_lane1_i),
        .I3(Q[54]),
        .I4(Q[55]),
        .I5(CC_detect_dlyd1_i_3__0_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2__0
       (.I0(Q[60]),
        .I1(CB_detect_dlyd0p5_reg[1]),
        .I2(Q[61]),
        .I3(CB_detect_dlyd0p5_reg[0]),
        .O(CC_detect_dlyd1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3__0
       (.I0(Q[59]),
        .I1(Q[62]),
        .I2(Q[51]),
        .I3(Q[53]),
        .O(CC_detect_dlyd1_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1__0
       (.I0(CC_detect_pulse_r_i_2__0_n_0),
        .I1(CC_detect_pulse_r_i_3__0_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2__0
       (.I0(CC_detect_dlyd1_i_3__0_n_0),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(rxdatavalid_to_fifo_lane1_i),
        .I4(CC_detect_dlyd1_i_2__0_n_0),
        .O(CC_detect_pulse_r_i_2__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3__0
       (.I0(Q[56]),
        .I1(Q[58]),
        .I2(Q[48]),
        .I3(Q[52]),
        .I4(CC_detect_pulse_r_i_4__0_n_0),
        .O(CC_detect_pulse_r_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4__0
       (.I0(Q[50]),
        .I1(Q[57]),
        .I2(Q[63]),
        .I3(Q[49]),
        .O(CC_detect_pulse_r_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__0 
       (.I0(in0),
        .O(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1__0 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2__0_n_0 ),
        .I2(CC_detect_pulse_r_i_3__0_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2__0 
       (.I0(CC_detect_dlyd1_i_2__0_n_0),
        .I1(rxdatavalid_to_fifo_lane1_i),
        .I2(Q[55]),
        .I3(Q[54]),
        .I4(CC_detect_dlyd1_i_3__0_n_0),
        .O(\fifo_din_i_reg[70]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__0 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__0 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__0 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__0 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__0 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__0 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__0 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__0 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__0 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__0 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__0 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__0 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__0 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__0 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__0 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__0 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__0 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__0 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__0 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__0 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__0 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__0 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__0 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__0 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__0 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__0 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__0 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__0 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__0 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__0 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__0 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__0 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__0 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__0 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__0 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__0 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__0 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__0 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__0 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(Q[0]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(Q[10]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(Q[11]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(Q[12]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(Q[13]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(Q[14]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(Q[15]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(Q[16]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(Q[17]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(Q[18]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(Q[19]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(Q[1]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(Q[20]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(Q[21]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(Q[22]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(Q[23]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(Q[24]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(Q[25]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(Q[26]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(Q[27]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(Q[28]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(Q[29]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(Q[2]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(Q[30]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(Q[31]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(Q[32]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(Q[33]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(Q[34]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(Q[35]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(Q[36]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(Q[37]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(Q[38]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(Q[39]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(Q[3]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(Q[40]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(Q[41]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(Q[42]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(Q[43]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(Q[44]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(Q[45]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(Q[46]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(Q[47]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(Q[48]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(Q[49]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(Q[4]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(Q[50]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(Q[51]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(Q[52]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(Q[53]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(Q[54]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(Q[55]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(Q[56]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(Q[57]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(Q[58]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(Q[59]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(Q[5]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(Q[60]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(Q[61]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(Q[62]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(Q[63]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(Q[6]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(Q[7]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(Q[8]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(Q[9]),
        .R(\descrambler[57]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_31
   (CC_detect_pulse_i,
    Q,
    p_9_in,
    CB_detect,
    CB_detect0,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    D,
    in0,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output [63:0]Q;
  output p_9_in;
  output CB_detect;
  output CB_detect0;
  input CC_detect_dlyd1;
  input CB_detect_dlyd0p5;
  input [2:0]D;
  input in0;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__1_n_0;
  wire CC_detect_pulse_r_i_3__1_n_0;
  wire CC_detect_pulse_r_i_4__1_n_0;
  wire CC_detect_pulse_r_i_5_n_0;
  wire [2:0]D;
  wire [0:0]E;
  wire [63:0]Q;
  wire \descrambler[57]_i_1__1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire p_9_in;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    CB_detect_dlyd0p5_i_1__1
       (.I0(CC_detect_pulse_r_i_2__1_n_0),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(Q[51]),
        .I4(Q[59]),
        .O(CB_detect0));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    CC_detect_dlyd1_i_1__1
       (.I0(CC_detect_pulse_r_i_2__1_n_0),
        .I1(Q[54]),
        .I2(Q[55]),
        .I3(Q[51]),
        .I4(Q[59]),
        .O(p_9_in));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_pulse_r_i_1__1
       (.I0(Q[59]),
        .I1(Q[51]),
        .I2(Q[55]),
        .I3(Q[54]),
        .I4(CC_detect_pulse_r_i_2__1_n_0),
        .I5(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    CC_detect_pulse_r_i_2__1
       (.I0(CC_detect_pulse_r_i_3__1_n_0),
        .I1(CC_detect_pulse_r_i_4__1_n_0),
        .I2(CC_detect_pulse_r_i_5_n_0),
        .I3(Q[53]),
        .I4(D[2]),
        .I5(Q[56]),
        .O(CC_detect_pulse_r_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CC_detect_pulse_r_i_3__1
       (.I0(Q[61]),
        .I1(Q[49]),
        .I2(Q[60]),
        .I3(Q[50]),
        .O(CC_detect_pulse_r_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h1000)) 
    CC_detect_pulse_r_i_4__1
       (.I0(Q[48]),
        .I1(Q[58]),
        .I2(D[1]),
        .I3(Q[62]),
        .O(CC_detect_pulse_r_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_5
       (.I0(D[0]),
        .I1(Q[52]),
        .I2(Q[63]),
        .I3(Q[57]),
        .O(CC_detect_pulse_r_i_5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__1 
       (.I0(in0),
        .O(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \fifo_din_i_reg[70]_i_1__1 
       (.I0(CB_detect_dlyd0p5),
        .I1(Q[59]),
        .I2(Q[51]),
        .I3(Q[54]),
        .I4(Q[55]),
        .I5(CC_detect_pulse_r_i_2__1_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__1 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__1 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__1 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__1 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__1 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__1 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__1 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__1 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__1 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__1 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__1 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__1 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__1 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__1 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__1 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__1 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__1 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__1 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__1 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__1 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__1 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__1 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__1 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__1 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__1 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__1 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__1 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__1 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__1 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__1 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__1 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__1 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__1 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__1 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__1 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__1 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__1 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__1 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__1 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__1 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(Q[0]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(Q[10]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(Q[11]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(Q[12]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(Q[13]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(Q[14]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(Q[15]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(Q[16]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(Q[17]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(Q[18]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(Q[19]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(Q[1]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(Q[20]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(Q[21]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(Q[22]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(Q[23]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(Q[24]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(Q[25]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(Q[26]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(Q[27]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(Q[28]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(Q[29]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(Q[2]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(Q[30]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(Q[31]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(Q[32]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(Q[33]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(Q[34]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(Q[35]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(Q[36]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(Q[37]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(Q[38]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(Q[39]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(Q[3]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(Q[40]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(Q[41]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(Q[42]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(Q[43]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(Q[44]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(Q[45]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(Q[46]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(Q[47]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(Q[48]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(Q[49]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(Q[4]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(Q[50]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(Q[51]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(Q[52]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(Q[53]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(Q[54]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(Q[55]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(Q[56]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(Q[57]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(Q[58]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(Q[59]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(Q[5]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(Q[60]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(Q[61]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(Q[62]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(Q[63]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(Q[6]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(Q[7]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(Q[8]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(Q[9]),
        .R(\descrambler[57]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_32
   (CC_detect_pulse_i,
    p_6_in,
    UNSCRAMBLED_DATA_OUT,
    CB_detect,
    CB_detect0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_lane3_i,
    CB_detect_dlyd0p5,
    Q,
    in0,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CB_detect;
  output CB_detect0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_lane3_i;
  input CB_detect_dlyd0p5;
  input [1:0]Q;
  input in0;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2__1_n_0;
  wire CC_detect_dlyd1_i_3__1_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__2_n_0;
  wire CC_detect_pulse_r_i_3__2_n_0;
  wire CC_detect_pulse_r_i_4__2_n_0;
  wire [0:0]E;
  wire [1:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1__2_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2__1_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_lane3_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1__2
       (.I0(CC_detect_pulse_r_i_3__2_n_0),
        .I1(CC_detect_dlyd1_i_3__1_n_0),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[55]),
        .I4(rxdatavalid_to_fifo_lane3_i),
        .I5(CC_detect_dlyd1_i_2__1_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1__2
       (.I0(CC_detect_pulse_r_i_3__2_n_0),
        .I1(CC_detect_dlyd1_i_2__1_n_0),
        .I2(rxdatavalid_to_fifo_lane3_i),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_dlyd1_i_3__1_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2__1
       (.I0(UNSCRAMBLED_DATA_OUT[60]),
        .I1(Q[1]),
        .I2(UNSCRAMBLED_DATA_OUT[61]),
        .I3(Q[0]),
        .O(CC_detect_dlyd1_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3__1
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[62]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .O(CC_detect_dlyd1_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1__2
       (.I0(CC_detect_pulse_r_i_2__2_n_0),
        .I1(CC_detect_pulse_r_i_3__2_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2__2
       (.I0(CC_detect_dlyd1_i_3__1_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[55]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(rxdatavalid_to_fifo_lane3_i),
        .I4(CC_detect_dlyd1_i_2__1_n_0),
        .O(CC_detect_pulse_r_i_2__2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3__2
       (.I0(UNSCRAMBLED_DATA_OUT[56]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(UNSCRAMBLED_DATA_OUT[48]),
        .I3(UNSCRAMBLED_DATA_OUT[52]),
        .I4(CC_detect_pulse_r_i_4__2_n_0),
        .O(CC_detect_pulse_r_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4__2
       (.I0(UNSCRAMBLED_DATA_OUT[50]),
        .I1(UNSCRAMBLED_DATA_OUT[57]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[49]),
        .O(CC_detect_pulse_r_i_4__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__2 
       (.I0(in0),
        .O(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1__2 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2__1_n_0 ),
        .I2(CC_detect_pulse_r_i_3__2_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2__1 
       (.I0(CC_detect_dlyd1_i_2__1_n_0),
        .I1(rxdatavalid_to_fifo_lane3_i),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(CC_detect_dlyd1_i_3__1_n_0),
        .O(\fifo_din_i_reg[70]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__2 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__2 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__2 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__2 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__2 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__2 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__2 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__2 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__2 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__2 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__2 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__2 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__2 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__2 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__2 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__2 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__2 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__2 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__2 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__2 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__2 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__2 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__2 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__2 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__2 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__2 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__2 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__2 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__2 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__2 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__2 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__2 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__2 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__2 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__2 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__2 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__2 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__2 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__2 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1__2_n_0 ));
endmodule

module aurora_64b66b_w256_1375Gbps_ERR_DETECT
   (SOFT_ERR_reg_0,
    hard_err_i,
    RXHEADER_OUT_ERR_LANE3,
    user_clk,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    illegal_btf_i,
    rxdatavalid_to_lanes_i);
  output [0:0]SOFT_ERR_reg_0;
  output [0:0]hard_err_i;
  input RXHEADER_OUT_ERR_LANE3;
  input user_clk;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input illegal_btf_i;
  input rxdatavalid_to_lanes_i;

  wire HARD_ERR_reg_0;
  wire RXHEADER_OUT_ERR_LANE3;
  wire SOFT_ERR0;
  wire [0:0]SOFT_ERR_reg_0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire rx_header_err_r;
  wire rxdatavalid_to_lanes_i;
  wire user_clk;

  FDRE HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(HARD_ERR_reg_0),
        .Q(hard_err_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hA888)) 
    SOFT_ERR0__2
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(illegal_btf_i),
        .I3(rxdatavalid_to_lanes_i),
        .O(SOFT_ERR0));
  FDRE SOFT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(SOFT_ERR_reg_0),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RXHEADER_OUT_ERR_LANE3),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_ERR_DETECT" *) 
module aurora_64b66b_w256_1375Gbps_ERR_DETECT_15
   (hard_err_i,
    SOFT_ERR_reg_0,
    RXHEADER_OUT_ERR_LANE1,
    user_clk,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    illegal_btf_i,
    rxdatavalid_to_lanes_i,
    soft_err_reg,
    CHANNEL_UP_TX_IF);
  output [0:0]hard_err_i;
  output SOFT_ERR_reg_0;
  input RXHEADER_OUT_ERR_LANE1;
  input user_clk;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input illegal_btf_i;
  input rxdatavalid_to_lanes_i;
  input [2:0]soft_err_reg;
  input CHANNEL_UP_TX_IF;

  wire CHANNEL_UP_TX_IF;
  wire HARD_ERR_reg_0;
  wire RXHEADER_OUT_ERR_LANE1;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg_0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire rx_header_err_r;
  wire rxdatavalid_to_lanes_i;
  wire [1:1]soft_err_i;
  wire [2:0]soft_err_reg;
  wire user_clk;

  FDRE HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(HARD_ERR_reg_0),
        .Q(hard_err_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hA888)) 
    SOFT_ERR0__0
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(illegal_btf_i),
        .I3(rxdatavalid_to_lanes_i),
        .O(SOFT_ERR0));
  FDRE SOFT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RXHEADER_OUT_ERR_LANE1),
        .Q(rx_header_err_r),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFE0000)) 
    soft_err_i_1
       (.I0(soft_err_i),
        .I1(soft_err_reg[2]),
        .I2(soft_err_reg[0]),
        .I3(soft_err_reg[1]),
        .I4(CHANNEL_UP_TX_IF),
        .O(SOFT_ERR_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_ERR_DETECT" *) 
module aurora_64b66b_w256_1375Gbps_ERR_DETECT_21
   (soft_err_i,
    hard_err_i,
    RXHEADER_OUT_ERR,
    user_clk,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    illegal_btf_i,
    rxdatavalid_to_lanes_i);
  output [0:0]soft_err_i;
  output [0:0]hard_err_i;
  input RXHEADER_OUT_ERR;
  input user_clk;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input illegal_btf_i;
  input rxdatavalid_to_lanes_i;

  wire HARD_ERR_reg_0;
  wire RXHEADER_OUT_ERR;
  wire SOFT_ERR0__0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire rx_header_err_r;
  wire rxdatavalid_to_lanes_i;
  wire [0:0]soft_err_i;
  wire user_clk;

  FDRE HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(HARD_ERR_reg_0),
        .Q(hard_err_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hA888)) 
    SOFT_ERR0
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(illegal_btf_i),
        .I3(rxdatavalid_to_lanes_i),
        .O(SOFT_ERR0__0));
  FDRE SOFT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SOFT_ERR0__0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RXHEADER_OUT_ERR),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_ERR_DETECT" *) 
module aurora_64b66b_w256_1375Gbps_ERR_DETECT_9
   (SOFT_ERR_reg_0,
    hard_err_i,
    RXHEADER_OUT_ERR_LANE2,
    user_clk,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    illegal_btf_i,
    rxdatavalid_to_lanes_i);
  output [0:0]SOFT_ERR_reg_0;
  output [0:0]hard_err_i;
  input RXHEADER_OUT_ERR_LANE2;
  input user_clk;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input illegal_btf_i;
  input rxdatavalid_to_lanes_i;

  wire HARD_ERR_reg_0;
  wire RXHEADER_OUT_ERR_LANE2;
  wire SOFT_ERR0;
  wire [0:0]SOFT_ERR_reg_0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire rx_header_err_r;
  wire rxdatavalid_to_lanes_i;
  wire user_clk;

  FDRE HARD_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(HARD_ERR_reg_0),
        .Q(hard_err_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hA888)) 
    SOFT_ERR0__1
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(illegal_btf_i),
        .I3(rxdatavalid_to_lanes_i),
        .O(SOFT_ERR0));
  FDRE SOFT_ERR_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(SOFT_ERR_reg_0),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RXHEADER_OUT_ERR_LANE2),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_GLOBAL_LOGIC
   (RESET_LANES,
    EN_CHAN_SYNC,
    CHAN_BOND_RESET,
    chan_bond_reset_i,
    CHANNEL_UP_RX_IF,
    CHANNEL_UP_TX_IF,
    GEN_CH_BOND,
    hard_err,
    D,
    channel_bond_r_reg,
    \gen_cc_blk[1].gen_cc_flop ,
    \gen_cc_blk[2].gen_cc_flop ,
    \gen_cc_blk[3].gen_cc_flop ,
    SR,
    R0,
    \gen_cc_blk[0].gen_cc_flop ,
    \gen_cc_blk[1].gen_cc_flop_0 ,
    \gen_cc_blk[2].gen_cc_flop_0 ,
    \gen_cc_blk[3].gen_cc_flop_0 ,
    CHANNEL_UP_RX_IF_reg,
    stg5_reg,
    stg5_reg_0,
    stg5_reg_1,
    stg5_reg_2,
    stg5_reg_3,
    stg5_reg_4,
    stg5_reg_5,
    stg5_reg_6,
    stg5_reg_7,
    stg5_reg_8,
    stg5_reg_9,
    stg5_reg_10,
    stg5_reg_11,
    stg5_reg_12,
    stg5_reg_13,
    stg5_reg_14,
    user_clk,
    ch_bond_done_i,
    wait_for_lane_up_r0,
    CHANNEL_UP_TX_IF_reg,
    remote_ready_r_reg,
    got_idles_i,
    TXDATAVALID_IN,
    hard_err_i,
    gen_cc_i,
    rst_pma_init_usrclk,
    Q,
    tx_pe_data_v_i,
    rst_pma_init_usrclk_0,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    reset_lanes_flop_0_i,
    reset_lanes_flop_0_i_0,
    reset_lanes_flop_0_i_1,
    lane_up,
    \chan_bond_timer_reg[0] ,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    rx_pe_data_v_i);
  output RESET_LANES;
  output EN_CHAN_SYNC;
  output CHAN_BOND_RESET;
  output chan_bond_reset_i;
  output CHANNEL_UP_RX_IF;
  output CHANNEL_UP_TX_IF;
  output [0:0]GEN_CH_BOND;
  output hard_err;
  output [3:0]D;
  output channel_bond_r_reg;
  output [3:0]\gen_cc_blk[1].gen_cc_flop ;
  output [3:0]\gen_cc_blk[2].gen_cc_flop ;
  output [3:0]\gen_cc_blk[3].gen_cc_flop ;
  output SR;
  output R0;
  output \gen_cc_blk[0].gen_cc_flop ;
  output \gen_cc_blk[1].gen_cc_flop_0 ;
  output \gen_cc_blk[2].gen_cc_flop_0 ;
  output \gen_cc_blk[3].gen_cc_flop_0 ;
  output CHANNEL_UP_RX_IF_reg;
  output stg5_reg;
  output stg5_reg_0;
  output stg5_reg_1;
  output stg5_reg_2;
  output stg5_reg_3;
  output stg5_reg_4;
  output stg5_reg_5;
  output stg5_reg_6;
  output stg5_reg_7;
  output stg5_reg_8;
  output stg5_reg_9;
  output stg5_reg_10;
  output stg5_reg_11;
  output stg5_reg_12;
  output stg5_reg_13;
  output stg5_reg_14;
  input user_clk;
  input [0:3]ch_bond_done_i;
  input wait_for_lane_up_r0;
  input CHANNEL_UP_TX_IF_reg;
  input remote_ready_r_reg;
  input [0:3]got_idles_i;
  input TXDATAVALID_IN;
  input [0:3]hard_err_i;
  input [0:3]gen_cc_i;
  input rst_pma_init_usrclk;
  input [31:0]Q;
  input [0:0]tx_pe_data_v_i;
  input rst_pma_init_usrclk_0;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input reset_lanes_flop_0_i;
  input reset_lanes_flop_0_i_0;
  input reset_lanes_flop_0_i_1;
  input [0:0]lane_up;
  input \chan_bond_timer_reg[0] ;
  input \TX_DATA_reg[63] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input [0:3]rx_pe_data_v_i;

  wire CHANNEL_UP_RX_IF;
  wire CHANNEL_UP_RX_IF_reg;
  wire CHANNEL_UP_TX_IF;
  wire CHANNEL_UP_TX_IF_reg;
  wire CHAN_BOND_RESET;
  wire [3:0]D;
  wire EN_CHAN_SYNC;
  wire [0:0]GEN_CH_BOND;
  wire [31:0]Q;
  wire R0;
  wire RESET_LANES;
  wire SR;
  wire TXDATAVALID_IN;
  wire \TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire [0:3]ch_bond_done_i;
  wire chan_bond_reset_i;
  wire \chan_bond_timer_reg[0] ;
  wire channel_bond_gen_i_n_1;
  wire channel_bond_gen_i_n_2;
  wire channel_bond_gen_i_n_3;
  wire channel_bond_gen_i_n_4;
  wire channel_bond_r_reg;
  wire \gen_cc_blk[0].gen_cc_flop ;
  wire [3:0]\gen_cc_blk[1].gen_cc_flop ;
  wire \gen_cc_blk[1].gen_cc_flop_0 ;
  wire [3:0]\gen_cc_blk[2].gen_cc_flop ;
  wire \gen_cc_blk[2].gen_cc_flop_0 ;
  wire [3:0]\gen_cc_blk[3].gen_cc_flop ;
  wire \gen_cc_blk[3].gen_cc_flop_0 ;
  wire [0:3]gen_cc_i;
  wire [0:3]got_idles_i;
  wire hard_err;
  wire [0:3]hard_err_i;
  wire [0:0]lane_up;
  wire remote_ready_r_reg;
  wire reset_lanes_flop_0_i;
  wire reset_lanes_flop_0_i_0;
  wire reset_lanes_flop_0_i_1;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:3]rx_pe_data_v_i;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_10;
  wire stg5_reg_11;
  wire stg5_reg_12;
  wire stg5_reg_13;
  wire stg5_reg_14;
  wire stg5_reg_2;
  wire stg5_reg_3;
  wire stg5_reg_4;
  wire stg5_reg_5;
  wire stg5_reg_6;
  wire stg5_reg_7;
  wire stg5_reg_8;
  wire stg5_reg_9;
  wire [0:0]tx_pe_data_v_i;
  wire user_clk;
  wire wait_for_lane_up_r0;

  aurora_64b66b_w256_1375Gbps_CHANNEL_BOND_GEN channel_bond_gen_i
       (.TXDATAVALID_IN(TXDATAVALID_IN),
        .\free_count_r_reg[4]_0 (CHANNEL_UP_TX_IF_reg),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_int_reg_0(GEN_CH_BOND),
        .gen_ch_bond_int_reg_1(channel_bond_gen_i_n_1),
        .gen_ch_bond_int_reg_2(channel_bond_gen_i_n_2),
        .gen_ch_bond_int_reg_3(channel_bond_gen_i_n_3),
        .gen_ch_bond_int_reg_4(channel_bond_gen_i_n_4),
        .gen_ch_bond_int_reg_5(CHANNEL_UP_TX_IF),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_CHANNEL_ERR_DETECT channel_err_detect_i
       (.hard_err(hard_err),
        .hard_err_i(hard_err_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_CHANNEL_INIT_SM channel_init_sm_i
       (.CHANNEL_UP_RX_IF(CHANNEL_UP_RX_IF),
        .CHANNEL_UP_RX_IF_reg_0(CHANNEL_UP_RX_IF_reg),
        .CHANNEL_UP_TX_IF_reg_0(CHANNEL_UP_TX_IF),
        .CHANNEL_UP_TX_IF_reg_1(CHANNEL_UP_TX_IF_reg),
        .CHAN_BOND_RESET(CHAN_BOND_RESET),
        .D(D),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .Q(Q),
        .R0(R0),
        .RESET_LANES(RESET_LANES),
        .SR(SR),
        .\TX_DATA_reg[53] (channel_bond_gen_i_n_1),
        .\TX_DATA_reg[53]_0 (channel_bond_gen_i_n_2),
        .\TX_DATA_reg[53]_1 (channel_bond_gen_i_n_3),
        .\TX_DATA_reg[53]_2 (channel_bond_gen_i_n_4),
        .\TX_DATA_reg[59] (GEN_CH_BOND),
        .\TX_DATA_reg[63] (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_2 ),
        .ch_bond_done_i(ch_bond_done_i),
        .chan_bond_reset_i(chan_bond_reset_i),
        .\chan_bond_timer_reg[0]_0 (\chan_bond_timer_reg[0] ),
        .channel_bond_r_reg_0(channel_bond_r_reg),
        .\gen_cc_blk[0].gen_cc_flop (\gen_cc_blk[0].gen_cc_flop ),
        .\gen_cc_blk[1].gen_cc_flop (\gen_cc_blk[1].gen_cc_flop ),
        .\gen_cc_blk[1].gen_cc_flop_0 (\gen_cc_blk[1].gen_cc_flop_0 ),
        .\gen_cc_blk[2].gen_cc_flop (\gen_cc_blk[2].gen_cc_flop ),
        .\gen_cc_blk[2].gen_cc_flop_0 (\gen_cc_blk[2].gen_cc_flop_0 ),
        .\gen_cc_blk[3].gen_cc_flop (\gen_cc_blk[3].gen_cc_flop ),
        .\gen_cc_blk[3].gen_cc_flop_0 (\gen_cc_blk[3].gen_cc_flop_0 ),
        .gen_cc_i(gen_cc_i),
        .got_idles_i(got_idles_i),
        .lane_up(lane_up),
        .remote_ready_r_reg_0(remote_ready_r_reg),
        .reset_lanes_flop_0_i_0(reset_lanes_flop_0_i),
        .reset_lanes_flop_0_i_1(reset_lanes_flop_0_i_0),
        .reset_lanes_flop_0_i_2(reset_lanes_flop_0_i_1),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .rst_pma_init_usrclk_0(rst_pma_init_usrclk_0),
        .rst_pma_init_usrclk_1(rst_pma_init_usrclk_1),
        .rst_pma_init_usrclk_2(rst_pma_init_usrclk_2),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .stg5_reg(stg5_reg),
        .stg5_reg_0(stg5_reg_0),
        .stg5_reg_1(stg5_reg_1),
        .stg5_reg_10(stg5_reg_10),
        .stg5_reg_11(stg5_reg_11),
        .stg5_reg_12(stg5_reg_12),
        .stg5_reg_13(stg5_reg_13),
        .stg5_reg_14(stg5_reg_14),
        .stg5_reg_2(stg5_reg_2),
        .stg5_reg_3(stg5_reg_3),
        .stg5_reg_4(stg5_reg_4),
        .stg5_reg_5(stg5_reg_5),
        .stg5_reg_6(stg5_reg_6),
        .stg5_reg_7(stg5_reg_7),
        .stg5_reg_8(stg5_reg_8),
        .stg5_reg_9(stg5_reg_9),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(wait_for_lane_up_r0));
endmodule

module aurora_64b66b_w256_1375Gbps_LANE_INIT_SM
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    RXPOLARITY_IN_LANE3,
    CHECK_POLARITY_IN_LANE3,
    ENABLE_ERR_DETECT_reg_0,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    reset_count_r_reg_0,
    ready_r_reg0,
    RXLOSSOFSYNC_OUT_LANE3,
    RESET_LANES,
    HARD_ERR0__0);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output RXPOLARITY_IN_LANE3;
  output CHECK_POLARITY_IN_LANE3;
  output ENABLE_ERR_DETECT_reg_0;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input reset_count_r_reg_0;
  input ready_r_reg0;
  input RXLOSSOFSYNC_OUT_LANE3;
  input RESET_LANES;
  input HARD_ERR0__0;

  wire CHECK_POLARITY_IN_LANE3;
  wire ENABLE_ERR_DETECT_reg_0;
  wire HARD_ERR0__0;
  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE3;
  wire RXPOLARITY_IN_LANE3;
  wire align_r;
  wire align_r_i_2__2_n_0;
  wire begin_r;
  wire check_polarity_r_i_1__2_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c__0;
  wire next_begin_c_n_0;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__2_n_0;
  wire ready_r;
  wire ready_r_i_4__2_n_0;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r_i_1__2_n_0;
  wire reset_count_r_reg_0;
  wire rst_r_i_2__2_n_0;
  wire rst_r_reg_0;
  wire rx_polarity_dlyd_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire user_clk;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    HARD_ERR_i_1__1
       (.I0(enable_err_detect_i),
        .I1(HARD_ERR0__0),
        .O(ENABLE_ERR_DETECT_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_lane_3_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000C0000000A0A)) 
    align_r_i_1__2
       (.I0(align_r_i_2__2_n_0),
        .I1(ready_r_i_4__2_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE3),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_align_c));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    align_r_i_2__2
       (.I0(begin_r),
        .I1(rst_r_reg_0),
        .I2(count_8d_done_r),
        .I3(RESET_LANES),
        .O(align_r_i_2__2_n_0));
  FDRE align_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  FDSE begin_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_begin_c__0),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hBA)) 
    check_polarity_r_i_1__2
       (.I0(polarity_r),
        .I1(rx_polarity_dlyd_i),
        .I2(CHECK_POLARITY_IN_LANE3),
        .O(check_polarity_r_i_1__2_n_0));
  FDRE check_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(check_polarity_r_i_1__2_n_0),
        .Q(CHECK_POLARITY_IN_LANE3),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter1_r[0]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(count_8d_done_r),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \counter1_r[1]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[2] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    next_begin_c
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(next_begin_c_n_0));
  LUT6 #(
    .INIT(64'h0000000C04040000)) 
    polarity_r_i_1__2
       (.I0(rx_polarity_dlyd_i),
        .I1(ready_r_i_4__2_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE3),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_polarity_c));
  FDRE polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    prev_rx_polarity_r_i_1__2
       (.I0(RXPOLARITY_IN_LANE3),
        .I1(polarity_r),
        .I2(rst_r_reg_0),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__2_n_0),
        .Q(prev_rx_polarity_r),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'h01)) 
    ready_r_i_4__2
       (.I0(rst_r_reg_0),
        .I1(RESET_LANES),
        .I2(begin_r),
        .O(ready_r_i_4__2_n_0));
  FDRE ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__2
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1__2_n_0));
  FDSE reset_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_count_r_i_1__2_n_0),
        .Q(reset_count_r),
        .S(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT5 #(
    .INIT(32'h14140414)) 
    rst_r_i_1__2
       (.I0(rst_r_i_2__2_n_0),
        .I1(begin_r),
        .I2(rst_r_reg_0),
        .I3(count_8d_done_r),
        .I4(RESET_LANES),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rst_r_i_2__2
       (.I0(align_r),
        .I1(ready_r),
        .I2(polarity_r),
        .O(rst_r_i_2__2_n_0));
  FDRE rst_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(RXPOLARITY_IN_LANE3),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync u_cdc_rxlossofsync_in
       (.RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE3(RXLOSSOFSYNC_OUT_LANE3),
        .RXPOLARITY_IN_LANE3(RXPOLARITY_IN_LANE3),
        .SYSTEM_RESET_reg(u_cdc_rxlossofsync_in_n_2),
        .align_r(align_r),
        .begin_r_reg(next_begin_c_n_0),
        .next_begin_c(next_begin_c__0),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .ready_r(ready_r),
        .ready_r_reg(ready_r_i_4__2_n_0),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(reset_count_r_reg_0),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_LANE_INIT_SM" *) 
module aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_10
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    RXPOLARITY_IN_LANE2,
    CHECK_POLARITY_IN_LANE2,
    ENABLE_ERR_DETECT_reg_0,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    reset_count_r_reg_0,
    ready_r_reg0,
    RXLOSSOFSYNC_OUT_LANE2,
    RESET_LANES,
    HARD_ERR0__0);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output RXPOLARITY_IN_LANE2;
  output CHECK_POLARITY_IN_LANE2;
  output ENABLE_ERR_DETECT_reg_0;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input reset_count_r_reg_0;
  input ready_r_reg0;
  input RXLOSSOFSYNC_OUT_LANE2;
  input RESET_LANES;
  input HARD_ERR0__0;

  wire CHECK_POLARITY_IN_LANE2;
  wire ENABLE_ERR_DETECT_reg_0;
  wire HARD_ERR0__0;
  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE2;
  wire RXPOLARITY_IN_LANE2;
  wire align_r;
  wire align_r_i_2__1_n_0;
  wire begin_r;
  wire check_polarity_r_i_1__1_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c__0;
  wire next_begin_c_n_0;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__1_n_0;
  wire ready_r;
  wire ready_r_i_4__1_n_0;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r_i_1__1_n_0;
  wire reset_count_r_reg_0;
  wire rst_r_i_2__1_n_0;
  wire rst_r_reg_0;
  wire rx_polarity_dlyd_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire user_clk;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    HARD_ERR_i_1
       (.I0(enable_err_detect_i),
        .I1(HARD_ERR0__0),
        .O(ENABLE_ERR_DETECT_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_lane_2_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000C0000000A0A)) 
    align_r_i_1__1
       (.I0(align_r_i_2__1_n_0),
        .I1(ready_r_i_4__1_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE2),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_align_c));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    align_r_i_2__1
       (.I0(begin_r),
        .I1(rst_r_reg_0),
        .I2(count_8d_done_r),
        .I3(RESET_LANES),
        .O(align_r_i_2__1_n_0));
  FDRE align_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  FDSE begin_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_begin_c__0),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hBA)) 
    check_polarity_r_i_1__1
       (.I0(polarity_r),
        .I1(rx_polarity_dlyd_i),
        .I2(CHECK_POLARITY_IN_LANE2),
        .O(check_polarity_r_i_1__1_n_0));
  FDRE check_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(check_polarity_r_i_1__1_n_0),
        .Q(CHECK_POLARITY_IN_LANE2),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter1_r[0]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(count_8d_done_r),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \counter1_r[1]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[2] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    next_begin_c
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(next_begin_c_n_0));
  LUT6 #(
    .INIT(64'h0000000C04040000)) 
    polarity_r_i_1__1
       (.I0(rx_polarity_dlyd_i),
        .I1(ready_r_i_4__1_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE2),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_polarity_c));
  FDRE polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    prev_rx_polarity_r_i_1__1
       (.I0(RXPOLARITY_IN_LANE2),
        .I1(polarity_r),
        .I2(rst_r_reg_0),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__1_n_0),
        .Q(prev_rx_polarity_r),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h01)) 
    ready_r_i_4__1
       (.I0(rst_r_reg_0),
        .I1(RESET_LANES),
        .I2(begin_r),
        .O(ready_r_i_4__1_n_0));
  FDRE ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__1
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1__1_n_0));
  FDSE reset_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_count_r_i_1__1_n_0),
        .Q(reset_count_r),
        .S(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT5 #(
    .INIT(32'h14140414)) 
    rst_r_i_1__1
       (.I0(rst_r_i_2__1_n_0),
        .I1(begin_r),
        .I2(rst_r_reg_0),
        .I3(count_8d_done_r),
        .I4(RESET_LANES),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rst_r_i_2__1
       (.I0(align_r),
        .I1(ready_r),
        .I2(polarity_r),
        .O(rst_r_i_2__1_n_0));
  FDRE rst_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(RXPOLARITY_IN_LANE2),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_14 u_cdc_rxlossofsync_in
       (.RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE2(RXLOSSOFSYNC_OUT_LANE2),
        .RXPOLARITY_IN_LANE2(RXPOLARITY_IN_LANE2),
        .SYSTEM_RESET_reg(u_cdc_rxlossofsync_in_n_2),
        .align_r(align_r),
        .begin_r_reg(next_begin_c_n_0),
        .next_begin_c(next_begin_c__0),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .ready_r(ready_r),
        .ready_r_reg(ready_r_i_4__1_n_0),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(reset_count_r_reg_0),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_LANE_INIT_SM" *) 
module aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_16
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    RXPOLARITY_IN_LANE1,
    CHECK_POLARITY_IN_LANE1,
    lane_up_flop_i_1,
    ENABLE_ERR_DETECT_reg_0,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    reset_count_r_reg_0,
    ready_r_reg0,
    RXLOSSOFSYNC_OUT_LANE1,
    RESET_LANES,
    \chan_bond_timer_reg[0] ,
    \chan_bond_timer_reg[0]_0 ,
    \chan_bond_timer_reg[0]_1 ,
    HARD_ERR0__0);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output RXPOLARITY_IN_LANE1;
  output CHECK_POLARITY_IN_LANE1;
  output lane_up_flop_i_1;
  output ENABLE_ERR_DETECT_reg_0;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input reset_count_r_reg_0;
  input ready_r_reg0;
  input RXLOSSOFSYNC_OUT_LANE1;
  input RESET_LANES;
  input \chan_bond_timer_reg[0] ;
  input \chan_bond_timer_reg[0]_0 ;
  input \chan_bond_timer_reg[0]_1 ;
  input HARD_ERR0__0;

  wire CHECK_POLARITY_IN_LANE1;
  wire ENABLE_ERR_DETECT_reg_0;
  wire HARD_ERR0__0;
  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE1;
  wire RXPOLARITY_IN_LANE1;
  wire align_r;
  wire align_r_i_2__0_n_0;
  wire begin_r;
  wire \chan_bond_timer_reg[0] ;
  wire \chan_bond_timer_reg[0]_0 ;
  wire \chan_bond_timer_reg[0]_1 ;
  wire check_polarity_r_i_1__0_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire lane_up_flop_i_0;
  wire lane_up_flop_i_1;
  wire next_align_c;
  wire next_begin_c__0;
  wire next_begin_c_n_0;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__0_n_0;
  wire ready_r;
  wire ready_r_i_4__0_n_0;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r_i_1__0_n_0;
  wire reset_count_r_reg_0;
  wire rst_r_i_2__0_n_0;
  wire rst_r_reg_0;
  wire rx_polarity_dlyd_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire user_clk;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    HARD_ERR_i_1__0
       (.I0(enable_err_detect_i),
        .I1(HARD_ERR0__0),
        .O(ENABLE_ERR_DETECT_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_lane_1_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000C0000000A0A)) 
    align_r_i_1__0
       (.I0(align_r_i_2__0_n_0),
        .I1(ready_r_i_4__0_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE1),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_align_c));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    align_r_i_2__0
       (.I0(begin_r),
        .I1(rst_r_reg_0),
        .I2(count_8d_done_r),
        .I3(RESET_LANES),
        .O(align_r_i_2__0_n_0));
  FDRE align_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  FDSE begin_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_begin_c__0),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \chan_bond_timer[8]_i_3 
       (.I0(lane_up_flop_i_0),
        .I1(\chan_bond_timer_reg[0] ),
        .I2(\chan_bond_timer_reg[0]_0 ),
        .I3(\chan_bond_timer_reg[0]_1 ),
        .I4(reset_count_r_reg_0),
        .O(lane_up_flop_i_1));
  LUT3 #(
    .INIT(8'hBA)) 
    check_polarity_r_i_1__0
       (.I0(polarity_r),
        .I1(rx_polarity_dlyd_i),
        .I2(CHECK_POLARITY_IN_LANE1),
        .O(check_polarity_r_i_1__0_n_0));
  FDRE check_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(check_polarity_r_i_1__0_n_0),
        .Q(CHECK_POLARITY_IN_LANE1),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter1_r[0]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(count_8d_done_r),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \counter1_r[1]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[2] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    next_begin_c
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(next_begin_c_n_0));
  LUT6 #(
    .INIT(64'h0000000C04040000)) 
    polarity_r_i_1__0
       (.I0(rx_polarity_dlyd_i),
        .I1(ready_r_i_4__0_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT_LANE1),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_polarity_c));
  FDRE polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    prev_rx_polarity_r_i_1__0
       (.I0(RXPOLARITY_IN_LANE1),
        .I1(polarity_r),
        .I2(rst_r_reg_0),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__0_n_0),
        .Q(prev_rx_polarity_r),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'h01)) 
    ready_r_i_4__0
       (.I0(rst_r_reg_0),
        .I1(RESET_LANES),
        .I2(begin_r),
        .O(ready_r_i_4__0_n_0));
  FDRE ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__0
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1__0_n_0));
  FDSE reset_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_count_r_i_1__0_n_0),
        .Q(reset_count_r),
        .S(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT5 #(
    .INIT(32'h14140414)) 
    rst_r_i_1__0
       (.I0(rst_r_i_2__0_n_0),
        .I1(begin_r),
        .I2(rst_r_reg_0),
        .I3(count_8d_done_r),
        .I4(RESET_LANES),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rst_r_i_2__0
       (.I0(align_r),
        .I1(ready_r),
        .I2(polarity_r),
        .O(rst_r_i_2__0_n_0));
  FDRE rst_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(RXPOLARITY_IN_LANE1),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_20 u_cdc_rxlossofsync_in
       (.RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT_LANE1(RXLOSSOFSYNC_OUT_LANE1),
        .RXPOLARITY_IN_LANE1(RXPOLARITY_IN_LANE1),
        .SYSTEM_RESET_reg(u_cdc_rxlossofsync_in_n_2),
        .align_r(align_r),
        .begin_r_reg(next_begin_c_n_0),
        .next_begin_c(next_begin_c__0),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .ready_r(ready_r),
        .ready_r_reg(ready_r_i_4__0_n_0),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(reset_count_r_reg_0),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_LANE_INIT_SM" *) 
module aurora_64b66b_w256_1375Gbps_LANE_INIT_SM_22
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    RXPOLARITY_IN,
    CHECK_POLARITY_IN,
    ENABLE_ERR_DETECT_reg_0,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    user_clk,
    reset_count_r_reg_0,
    ready_r_reg0,
    RXLOSSOFSYNC_OUT,
    RESET_LANES,
    HARD_ERR0__0);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output RXPOLARITY_IN;
  output CHECK_POLARITY_IN;
  output ENABLE_ERR_DETECT_reg_0;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input user_clk;
  input reset_count_r_reg_0;
  input ready_r_reg0;
  input RXLOSSOFSYNC_OUT;
  input RESET_LANES;
  input HARD_ERR0__0;

  wire CHECK_POLARITY_IN;
  wire ENABLE_ERR_DETECT_reg_0;
  wire HARD_ERR0__0;
  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT;
  wire RXPOLARITY_IN;
  wire align_r;
  wire align_r_i_2_n_0;
  wire begin_r;
  wire check_polarity_r_i_1_n_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c__0;
  wire next_begin_c_n_0;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1_n_0;
  wire ready_r;
  wire ready_r_i_4_n_0;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r_i_1_n_0;
  wire reset_count_r_reg_0;
  wire rst_r_i_2_n_0;
  wire rst_r_reg_0;
  wire rx_polarity_dlyd_i;
  wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire user_clk;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    HARD_ERR_i_1__2
       (.I0(enable_err_detect_i),
        .I1(HARD_ERR0__0),
        .O(ENABLE_ERR_DETECT_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\aurora_lane_0_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT6 #(
    .INIT(64'h00000C0000000A0A)) 
    align_r_i_1
       (.I0(align_r_i_2_n_0),
        .I1(ready_r_i_4_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_align_c));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    align_r_i_2
       (.I0(begin_r),
        .I1(rst_r_reg_0),
        .I2(count_8d_done_r),
        .I3(RESET_LANES),
        .O(align_r_i_2_n_0));
  FDRE align_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  FDSE begin_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_begin_c__0),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hBA)) 
    check_polarity_r_i_1
       (.I0(polarity_r),
        .I1(rx_polarity_dlyd_i),
        .I2(CHECK_POLARITY_IN),
        .O(check_polarity_r_i_1_n_0));
  FDRE check_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(check_polarity_r_i_1_n_0),
        .Q(CHECK_POLARITY_IN),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \counter1_r[0]_i_1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(count_8d_done_r),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \counter1_r[1]_i_1 
       (.I0(\counter1_r_reg_n_0_[2] ),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(user_clk),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    next_begin_c
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(next_begin_c_n_0));
  LUT6 #(
    .INIT(64'h0000000C04040000)) 
    polarity_r_i_1
       (.I0(rx_polarity_dlyd_i),
        .I1(ready_r_i_4_n_0),
        .I2(ready_r),
        .I3(RXLOSSOFSYNC_OUT),
        .I4(polarity_r),
        .I5(align_r),
        .O(next_polarity_c));
  FDRE polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFEF0020)) 
    prev_rx_polarity_r_i_1
       (.I0(RXPOLARITY_IN),
        .I1(polarity_r),
        .I2(rst_r_reg_0),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1_n_0),
        .Q(prev_rx_polarity_r),
        .R(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'h01)) 
    ready_r_i_4
       (.I0(rst_r_reg_0),
        .I1(RESET_LANES),
        .I2(begin_r),
        .O(ready_r_i_4_n_0));
  FDRE ready_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1_n_0));
  FDSE reset_count_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(reset_count_r_i_1_n_0),
        .Q(reset_count_r),
        .S(reset_count_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'h14140414)) 
    rst_r_i_1
       (.I0(rst_r_i_2_n_0),
        .I1(begin_r),
        .I2(rst_r_reg_0),
        .I3(count_8d_done_r),
        .I4(RESET_LANES),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rst_r_i_2
       (.I0(align_r),
        .I1(ready_r),
        .I2(polarity_r),
        .O(rst_r_i_2_n_0));
  FDRE rst_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(RXPOLARITY_IN),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_26 u_cdc_rxlossofsync_in
       (.RESET_LANES(RESET_LANES),
        .RXLOSSOFSYNC_OUT(RXLOSSOFSYNC_OUT),
        .RXPOLARITY_IN(RXPOLARITY_IN),
        .SYSTEM_RESET_reg(u_cdc_rxlossofsync_in_n_2),
        .align_r(align_r),
        .begin_r_reg(next_begin_c_n_0),
        .next_begin_c(next_begin_c__0),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .ready_r(ready_r),
        .ready_r_reg(ready_r_i_4_n_0),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(reset_count_r_reg_0),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_MULTI_GT
   (gtwiz_userclk_rx_usrclk_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gt_to_common_qpllreset_out,
    gtwiz_userdata_rx_out,
    drpdo_out,
    drprdy_out,
    gt_powergood,
    txn,
    txp,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    tx_out_clk,
    HARD_ERR0__0,
    bufg_gt_clr_out,
    tx_buf_err_i,
    E,
    new_gtx_rx_pcsreset_comb0,
    rst_drp,
    out,
    i_in_meta_reg,
    gtwiz_userdata_tx_in,
    drpaddr_in,
    init_clk,
    drpdi_in,
    drpen_in,
    drpwe_in,
    gt_refclk1,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    txheader_in,
    Q,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    sync_clk,
    user_clk,
    HARD_ERR_reg,
    HARD_ERR_reg_0,
    mmcm_not_locked,
    fsm_resetdone_to_rxreset_in,
    fsm_resetdone_to_new_gtx_rx_comb);
  output gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output gt_to_common_qpllreset_out;
  output [255:0]gtwiz_userdata_rx_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]gt_powergood;
  output [0:3]txn;
  output [0:3]txp;
  output [3:0]rxbufstatus_out;
  output [3:0]rxdatavalid_out;
  output [7:0]rxheader_out;
  output [3:0]rxheadervalid_out;
  output tx_out_clk;
  output HARD_ERR0__0;
  output bufg_gt_clr_out;
  output [0:0]tx_buf_err_i;
  output [0:0]E;
  output new_gtx_rx_pcsreset_comb0;
  input rst_drp;
  input out;
  input i_in_meta_reg;
  input [255:0]gtwiz_userdata_tx_in;
  input [39:0]drpaddr_in;
  input init_clk;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input gt_refclk1;
  input [0:3]rxn;
  input [0:3]rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [7:0]txheader_in;
  input [6:0]Q;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  input sync_clk;
  input user_clk;
  input HARD_ERR_reg;
  input HARD_ERR_reg_0;
  input mmcm_not_locked;
  input fsm_resetdone_to_rxreset_in;
  input fsm_resetdone_to_new_gtx_rx_comb;

  wire [0:0]E;
  wire HARD_ERR0__0;
  wire HARD_ERR_reg;
  wire HARD_ERR_reg_0;
  wire [6:0]Q;
  wire aurora_64b66b_w256_1375Gbps_gt_i_n_461;
  wire aurora_64b66b_w256_1375Gbps_gt_i_n_464;
  wire aurora_64b66b_w256_1375Gbps_gt_i_n_465;
  wire aurora_64b66b_w256_1375Gbps_gt_i_n_466;
  wire aurora_64b66b_w256_1375Gbps_gt_i_n_467;
  wire bufg_gt_clr_out;
  wire [39:0]drpaddr_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire \fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[0] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[1] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[2] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[3] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[4] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[5] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[6] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[7] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[8] ;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_userclk_rx_active_in;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in_r;
  wire gtwiz_userclk_rx_reset_in_r_i_1_n_0;
  wire gtwiz_userclk_rx_usrclk_out;
  wire gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire gtx_rx_pcsreset_comb;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  wire i_in_meta_reg;
  wire init_clk;
  wire [7:1]int_gt_txbufstatus;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mmcm_not_locked;
  wire new_gtx_rx_pcsreset_comb0;
  wire out;
  wire [9:0]p_0_in__0;
  wire [7:0]p_0_in__1;
  wire [7:0]p_0_in__21;
  wire rst_drp;
  wire [3:0]rxbufstatus_out;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [3:0]rxpolarity_in;
  wire sync_clk;
  wire [0:0]tx_buf_err_i;
  wire tx_out_clk;
  wire [7:0]txheader_in;
  wire [0:3]txn;
  wire [0:3]txp;
  wire [3:0]txpmaresetdone_out;
  wire ultrascale_rx_userclk_n_1;
  wire user_clk;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ;
  wire [63:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_dmonitorout_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [10:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxbufstatus_out_UNCONNECTED;
  wire [7:1]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxdatavalid_out_UNCONNECTED;
  wire [23:2]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheader_out_UNCONNECTED;
  wire [7:1]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheadervalid_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxoutclk_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxprbserr_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxresetdone_out_UNCONNECTED;
  wire [7:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxstartofseq_out_UNCONNECTED;
  wire [6:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_txbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclk_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_aurora_64b66b_w256_1375Gbps_gt_i_txresetdone_out_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    HARD_ERR_i_2
       (.I0(HARD_ERR_reg),
        .I1(HARD_ERR_reg_0),
        .I2(int_gt_txbufstatus[3]),
        .I3(int_gt_txbufstatus[7]),
        .I4(int_gt_txbufstatus[1]),
        .I5(int_gt_txbufstatus[5]),
        .O(HARD_ERR0__0));
  (* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_gt,aurora_64b66b_w256_1375Gbps_gt_gtwizard_top,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "aurora_64b66b_w256_1375Gbps_gt_gtwizard_top,Vivado 2022.2" *) 
  aurora_64b66b_w256_1375Gbps_gt aurora_64b66b_w256_1375Gbps_gt_i
       (.dmonitorout_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_dmonitorout_out_UNCONNECTED[63:0]),
        .drpaddr_in(drpaddr_in),
        .drpclk_in({1'b0,1'b0,1'b0,init_clk}),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .eyescandataerror_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_eyescandataerror_out_UNCONNECTED[3:0]),
        .eyescanreset_in({1'b0,1'b0,1'b0,1'b0}),
        .eyescantrigger_in({1'b0,1'b0,1'b0,1'b0}),
        .gtpowergood_out(gt_powergood),
        .gtrefclk0_in({1'b0,1'b0,1'b0,gt_refclk1}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(i_in_meta_reg),
        .gtwiz_reset_qpll0reset_out(gt_to_common_qpllreset_out),
        .gtwiz_reset_rx_cdr_stable_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(out),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(rst_drp),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in({rxn[3],rxn[2],rxn[1],rxn[0]}),
        .gtyrxp_in({rxp[3],rxp[2],rxp[1],rxp[0]}),
        .gtytxn_out({txn[3],txn[2],txn[1],txn[0]}),
        .gtytxp_out({txp[3],txp[2],txp[1],txp[0]}),
        .loopback_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,loopback}),
        .lopt(lopt),
        .lopt_1(gtwiz_userclk_rx_reset_in_r),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0clk_in({1'b0,1'b0,1'b0,gt_qpllclk_quad1_in}),
        .qpll0refclk_in({1'b0,1'b0,1'b0,gt_qpllrefclk_quad1_in}),
        .qpll1clk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1refclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufstatus_out({rxbufstatus_out[3],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxbufstatus_out_UNCONNECTED[10:9],rxbufstatus_out[2],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxbufstatus_out_UNCONNECTED[7:6],rxbufstatus_out[1],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxbufstatus_out_UNCONNECTED[4:3],rxbufstatus_out[0],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxcdrhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrovrden_in({1'b0,1'b0,1'b0,gt_rxcdrovrden_in}),
        .rxdatavalid_out({NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxdatavalid_out_UNCONNECTED[7],rxdatavalid_out[3],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxdatavalid_out_UNCONNECTED[5],rxdatavalid_out[2],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxdatavalid_out_UNCONNECTED[3],rxdatavalid_out[1],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxdatavalid_out_UNCONNECTED[1],rxdatavalid_out[0]}),
        .rxdfelpmreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheader_out_UNCONNECTED[23:20],rxheader_out[7:6],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheader_out_UNCONNECTED[17:14],rxheader_out[5:4],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheader_out_UNCONNECTED[11:8],rxheader_out[3:2],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheader_out_UNCONNECTED[5:2],rxheader_out[1:0]}),
        .rxheadervalid_out({NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheadervalid_out_UNCONNECTED[7],rxheadervalid_out[3],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheadervalid_out_UNCONNECTED[5],rxheadervalid_out[2],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheadervalid_out_UNCONNECTED[3],rxheadervalid_out[1],NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxheadervalid_out_UNCONNECTED[1],rxheadervalid_out[0]}),
        .rxlpmen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoutclk_out({NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxoutclk_out_UNCONNECTED[3],aurora_64b66b_w256_1375Gbps_gt_i_n_461,NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxoutclk_out_UNCONNECTED[1:0]}),
        .rxpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmaresetdone_out({aurora_64b66b_w256_1375Gbps_gt_i_n_464,aurora_64b66b_w256_1375Gbps_gt_i_n_465,aurora_64b66b_w256_1375Gbps_gt_i_n_466,aurora_64b66b_w256_1375Gbps_gt_i_n_467}),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprbserr_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxprbserr_out_UNCONNECTED[3:0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxresetdone_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxresetdone_out_UNCONNECTED[3:0]),
        .rxstartofseq_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_rxstartofseq_out_UNCONNECTED[7:0]),
        .rxusrclk2_in({1'b0,1'b0,1'b0,ultrascale_rx_userclk_n_1}),
        .rxusrclk_in({1'b0,1'b0,1'b0,gtwiz_userclk_rx_usrclk_out}),
        .txbufstatus_out({int_gt_txbufstatus,NLW_aurora_64b66b_w256_1375Gbps_gt_i_txbufstatus_out_UNCONNECTED[0]}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,txheader_in[7:6],1'b0,1'b0,1'b0,1'b0,txheader_in[5:4],1'b0,1'b0,1'b0,1'b0,txheader_in[3:2],1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .txinhibit_in({1'b0,1'b0,1'b0,1'b0}),
        .txoutclk_out({NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclk_out_UNCONNECTED[3],tx_out_clk,NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclk_out_UNCONNECTED[1:0]}),
        .txoutclkfabric_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclkfabric_out_UNCONNECTED[3:0]),
        .txoutclkpcs_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_txoutclkpcs_out_UNCONNECTED[3:0]),
        .txpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in({1'b0,1'b0,1'b0,1'b0}),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in({1'b0,1'b0,1'b0,1'b0}),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(NLW_aurora_64b66b_w256_1375Gbps_gt_i_txresetdone_out_UNCONNECTED[3:0]),
        .txsequence_in({Q,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST }),
        .txusrclk2_in({1'b0,1'b0,1'b0,user_clk}),
        .txusrclk_in({1'b0,1'b0,1'b0,sync_clk}));
  LUT4 #(
    .INIT(16'h7FFF)) 
    bufg_gt_clr_out_INST_0
       (.I0(txpmaresetdone_out[1]),
        .I1(txpmaresetdone_out[0]),
        .I2(txpmaresetdone_out[3]),
        .I3(txpmaresetdone_out[2]),
        .O(bufg_gt_clr_out));
  LUT1 #(
    .INIT(2'h1)) 
    \fabric_pcs_rst_extend_cntr[0]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[1]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \fabric_pcs_rst_extend_cntr[2]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \fabric_pcs_rst_extend_cntr[3]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \fabric_pcs_rst_extend_cntr[4]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \fabric_pcs_rst_extend_cntr[5]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[6]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \fabric_pcs_rst_extend_cntr[7]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \fabric_pcs_rst_extend_cntr[8]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .O(p_0_in__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fabric_pcs_rst_extend_cntr[8]_i_2 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .O(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \fabric_pcs_rst_extend_cntr[9]_inv_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .O(p_0_in__0[9]));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[0] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[0]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[1] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[1]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[2] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[2]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[3] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[3]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[4] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[4]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[5] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[5]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[6] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[6]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[7] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[7]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[8] 
       (.C(user_clk),
        .CE(E),
        .CLR(mmcm_not_locked),
        .D(p_0_in__0[8]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ));
  (* inverted = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \fabric_pcs_rst_extend_cntr_reg[9]_inv 
       (.C(user_clk),
        .CE(E),
        .D(p_0_in__0[9]),
        .PRE(mmcm_not_locked),
        .Q(E));
  LUT4 #(
    .INIT(16'h7FFF)) 
    gtwiz_userclk_rx_reset_in_r_i_1
       (.I0(aurora_64b66b_w256_1375Gbps_gt_i_n_466),
        .I1(aurora_64b66b_w256_1375Gbps_gt_i_n_467),
        .I2(aurora_64b66b_w256_1375Gbps_gt_i_n_464),
        .I3(aurora_64b66b_w256_1375Gbps_gt_i_n_465),
        .O(gtwiz_userclk_rx_reset_in_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_userclk_rx_reset_in_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_reset_in_r_i_1_n_0),
        .Q(gtwiz_userclk_rx_reset_in_r),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    hard_err_usr_i_4
       (.I0(int_gt_txbufstatus[5]),
        .I1(int_gt_txbufstatus[1]),
        .I2(int_gt_txbufstatus[7]),
        .I3(int_gt_txbufstatus[3]),
        .O(tx_buf_err_i));
  LUT3 #(
    .INIT(8'hDF)) 
    new_gtx_rx_pcsreset_comb_i_1
       (.I0(gtwiz_userclk_rx_active_in),
        .I1(fsm_resetdone_to_rxreset_in),
        .I2(fsm_resetdone_to_new_gtx_rx_comb),
        .O(new_gtx_rx_pcsreset_comb0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* P_CONTENTS = "0" *) 
  (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
  (* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) 
  (* P_USRCLK2_DIV = "3'b000" *) 
  (* P_USRCLK2_INT_DIV = "0" *) 
  (* P_USRCLK_DIV = "3'b000" *) 
  (* P_USRCLK_INT_DIV = "0" *) 
  aurora_64b66b_w256_1375Gbps_ultrascale_rx_userclk ultrascale_rx_userclk
       (.gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_userclk_rx_active_out(gtwiz_userclk_rx_active_out),
        .gtwiz_userclk_rx_reset_in(gtwiz_userclk_rx_reset_in_r),
        .gtwiz_userclk_rx_srcclk_in(aurora_64b66b_w256_1375Gbps_gt_i_n_461),
        .gtwiz_userclk_rx_usrclk2_out(ultrascale_rx_userclk_n_1),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__21[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__21[1]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \usrclk_rx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__21[2]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \usrclk_rx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__21[3]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_rx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__21[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_rx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__21[5]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__21[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_1 
       (.I0(gtwiz_userclk_rx_active_in),
        .O(gtx_rx_pcsreset_comb));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__21[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_3 
       (.I0(gtwiz_userclk_rx_active_out),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_4 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[0] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[0]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[1] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[1]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[2] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[2]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[3] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[3]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[4] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[4]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[5] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[5]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[6] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[6]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[7] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__21[7]),
        .Q(gtwiz_userclk_rx_active_in));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_tx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \usrclk_tx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \usrclk_tx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_tx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_tx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__1[6]));
  LUT2 #(
    .INIT(4'h1)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_1 
       (.I0(E),
        .I1(gtwiz_userclk_tx_active_in),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__1[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_3 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[0] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[0]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[1] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[1]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[2] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[2]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[3] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[3]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[4] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[4]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[5] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[5]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[6] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[6]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[7] 
       (.C(user_clk),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked),
        .D(p_0_in__1[7]),
        .Q(gtwiz_userclk_tx_active_in));
endmodule

module aurora_64b66b_w256_1375Gbps_RESET_LOGIC
   (SYSTEM_RESET_reg_0,
    ready_r_reg0,
    ready_r_reg0_0,
    ready_r_reg0_1,
    ready_r_reg0_2,
    wait_for_lane_up_r0,
    in0,
    link_reset_out,
    power_down,
    sysreset_to_core_sync,
    user_clk,
    hard_err_i,
    ready_r_reg,
    ready_r_reg_0,
    ready_r_reg_1,
    lane_up,
    chan_bond_reset_i);
  output SYSTEM_RESET_reg_0;
  output ready_r_reg0;
  output ready_r_reg0_0;
  output ready_r_reg0_1;
  output ready_r_reg0_2;
  output wait_for_lane_up_r0;
  input in0;
  input link_reset_out;
  input power_down;
  input sysreset_to_core_sync;
  input user_clk;
  input [0:3]hard_err_i;
  input ready_r_reg;
  input ready_r_reg_0;
  input ready_r_reg_1;
  input [0:0]lane_up;
  input chan_bond_reset_i;

  wire SYSTEM_RESET0_n_0;
  wire SYSTEM_RESET_reg_0;
  wire chan_bond_reset_i;
  wire fsm_resetdone_sync;
  wire [0:3]hard_err_i;
  wire in0;
  wire [0:0]lane_up;
  wire link_reset_out;
  wire link_reset_sync;
  wire power_down;
  wire power_down_sync;
  wire ready_r_reg;
  wire ready_r_reg0;
  wire ready_r_reg0_0;
  wire ready_r_reg0_1;
  wire ready_r_reg0_2;
  wire ready_r_reg_0;
  wire ready_r_reg_1;
  wire sysreset_to_core_sync;
  wire user_clk;
  wire wait_for_lane_up_r0;

  LUT4 #(
    .INIT(16'hFFEF)) 
    SYSTEM_RESET0
       (.I0(link_reset_sync),
        .I1(sysreset_to_core_sync),
        .I2(fsm_resetdone_sync),
        .I3(power_down_sync),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(SYSTEM_RESET_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1
       (.I0(SYSTEM_RESET_reg_0),
        .I1(hard_err_i[0]),
        .O(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1__0
       (.I0(SYSTEM_RESET_reg_0),
        .I1(hard_err_i[1]),
        .O(ready_r_reg0_0));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1__1
       (.I0(SYSTEM_RESET_reg_0),
        .I1(hard_err_i[2]),
        .O(ready_r_reg0_1));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1__2
       (.I0(SYSTEM_RESET_reg_0),
        .I1(hard_err_i[3]),
        .O(ready_r_reg0_2));
  aurora_64b66b_w256_1375Gbps_rst_sync_4 u_link_rst_sync
       (.link_reset_out(link_reset_out),
        .link_reset_sync(link_reset_sync),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync_5 u_pd_sync
       (.power_down(power_down),
        .power_down_sync(power_down_sync),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync_6 u_rst_done_sync
       (.fsm_resetdone_sync(fsm_resetdone_sync),
        .in0(in0),
        .user_clk(user_clk));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFFFFFFF)) 
    wait_for_lane_up_r_i_1
       (.I0(SYSTEM_RESET_reg_0),
        .I1(ready_r_reg),
        .I2(ready_r_reg_0),
        .I3(ready_r_reg_1),
        .I4(lane_up),
        .I5(chan_bond_reset_i),
        .O(wait_for_lane_up_r0));
endmodule

module aurora_64b66b_w256_1375Gbps_RX_STREAM
   (m_axi_rx_tvalid,
    m_axi_rx_tdata,
    m_axi_rx_tvalid_reg,
    user_clk,
    D);
  output m_axi_rx_tvalid;
  output [0:255]m_axi_rx_tdata;
  input m_axi_rx_tvalid_reg;
  input user_clk;
  input [255:0]D;

  wire [255:0]D;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire m_axi_rx_tvalid_reg;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_RX_STREAM_DATAPATH rx_stream_datapath_i
       (.D(D),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .m_axi_rx_tvalid_reg_0(m_axi_rx_tvalid_reg),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_RX_STREAM_DATAPATH
   (m_axi_rx_tvalid,
    m_axi_rx_tdata,
    m_axi_rx_tvalid_reg_0,
    user_clk,
    D);
  output m_axi_rx_tvalid;
  output [0:255]m_axi_rx_tdata;
  input m_axi_rx_tvalid_reg_0;
  input user_clk;
  input [255:0]D;

  wire [255:0]D;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire m_axi_rx_tvalid_reg_0;
  wire user_clk;

  FDRE \m_axi_rx_tdata_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[255]),
        .Q(m_axi_rx_tdata[0]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[100] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[155]),
        .Q(m_axi_rx_tdata[100]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[101] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[154]),
        .Q(m_axi_rx_tdata[101]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[102] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[153]),
        .Q(m_axi_rx_tdata[102]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[103] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[152]),
        .Q(m_axi_rx_tdata[103]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[104] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[151]),
        .Q(m_axi_rx_tdata[104]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[105] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[150]),
        .Q(m_axi_rx_tdata[105]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[106] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[149]),
        .Q(m_axi_rx_tdata[106]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[107] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[148]),
        .Q(m_axi_rx_tdata[107]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[108] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[147]),
        .Q(m_axi_rx_tdata[108]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[109] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[146]),
        .Q(m_axi_rx_tdata[109]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[245]),
        .Q(m_axi_rx_tdata[10]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[110] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[145]),
        .Q(m_axi_rx_tdata[110]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[111] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[144]),
        .Q(m_axi_rx_tdata[111]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[112] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[143]),
        .Q(m_axi_rx_tdata[112]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[113] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[142]),
        .Q(m_axi_rx_tdata[113]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[114] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[141]),
        .Q(m_axi_rx_tdata[114]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[115] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[140]),
        .Q(m_axi_rx_tdata[115]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[116] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[139]),
        .Q(m_axi_rx_tdata[116]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[117] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[138]),
        .Q(m_axi_rx_tdata[117]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[118] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[137]),
        .Q(m_axi_rx_tdata[118]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[119] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[136]),
        .Q(m_axi_rx_tdata[119]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[244]),
        .Q(m_axi_rx_tdata[11]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[120] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[135]),
        .Q(m_axi_rx_tdata[120]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[121] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[134]),
        .Q(m_axi_rx_tdata[121]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[122] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[133]),
        .Q(m_axi_rx_tdata[122]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[123] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[132]),
        .Q(m_axi_rx_tdata[123]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[124] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[131]),
        .Q(m_axi_rx_tdata[124]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[125] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[130]),
        .Q(m_axi_rx_tdata[125]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[126] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[129]),
        .Q(m_axi_rx_tdata[126]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[127] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[128]),
        .Q(m_axi_rx_tdata[127]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[128] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[127]),
        .Q(m_axi_rx_tdata[128]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[129] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[126]),
        .Q(m_axi_rx_tdata[129]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[243]),
        .Q(m_axi_rx_tdata[12]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[130] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[125]),
        .Q(m_axi_rx_tdata[130]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[131] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[124]),
        .Q(m_axi_rx_tdata[131]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[132] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[123]),
        .Q(m_axi_rx_tdata[132]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[133] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[122]),
        .Q(m_axi_rx_tdata[133]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[134] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[121]),
        .Q(m_axi_rx_tdata[134]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[135] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[120]),
        .Q(m_axi_rx_tdata[135]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[136] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[119]),
        .Q(m_axi_rx_tdata[136]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[137] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[118]),
        .Q(m_axi_rx_tdata[137]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[138] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[117]),
        .Q(m_axi_rx_tdata[138]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[139] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[116]),
        .Q(m_axi_rx_tdata[139]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[242]),
        .Q(m_axi_rx_tdata[13]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[140] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[115]),
        .Q(m_axi_rx_tdata[140]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[141] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[114]),
        .Q(m_axi_rx_tdata[141]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[142] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[113]),
        .Q(m_axi_rx_tdata[142]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[143] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[112]),
        .Q(m_axi_rx_tdata[143]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[144] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[111]),
        .Q(m_axi_rx_tdata[144]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[145] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[110]),
        .Q(m_axi_rx_tdata[145]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[146] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[109]),
        .Q(m_axi_rx_tdata[146]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[147] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[108]),
        .Q(m_axi_rx_tdata[147]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[148] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[107]),
        .Q(m_axi_rx_tdata[148]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[149] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[106]),
        .Q(m_axi_rx_tdata[149]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[241]),
        .Q(m_axi_rx_tdata[14]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[150] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[105]),
        .Q(m_axi_rx_tdata[150]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[151] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[104]),
        .Q(m_axi_rx_tdata[151]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[152] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[103]),
        .Q(m_axi_rx_tdata[152]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[153] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[102]),
        .Q(m_axi_rx_tdata[153]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[154] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[101]),
        .Q(m_axi_rx_tdata[154]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[155] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[100]),
        .Q(m_axi_rx_tdata[155]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[156] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[99]),
        .Q(m_axi_rx_tdata[156]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[157] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[98]),
        .Q(m_axi_rx_tdata[157]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[158] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[97]),
        .Q(m_axi_rx_tdata[158]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[159] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[96]),
        .Q(m_axi_rx_tdata[159]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[240]),
        .Q(m_axi_rx_tdata[15]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[160] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[95]),
        .Q(m_axi_rx_tdata[160]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[161] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[94]),
        .Q(m_axi_rx_tdata[161]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[162] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[93]),
        .Q(m_axi_rx_tdata[162]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[163] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[92]),
        .Q(m_axi_rx_tdata[163]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[164] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[91]),
        .Q(m_axi_rx_tdata[164]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[165] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[90]),
        .Q(m_axi_rx_tdata[165]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[166] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[89]),
        .Q(m_axi_rx_tdata[166]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[167] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[88]),
        .Q(m_axi_rx_tdata[167]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[168] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[87]),
        .Q(m_axi_rx_tdata[168]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[169] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[86]),
        .Q(m_axi_rx_tdata[169]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[239]),
        .Q(m_axi_rx_tdata[16]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[170] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[85]),
        .Q(m_axi_rx_tdata[170]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[171] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[84]),
        .Q(m_axi_rx_tdata[171]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[172] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[83]),
        .Q(m_axi_rx_tdata[172]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[173] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[82]),
        .Q(m_axi_rx_tdata[173]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[174] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[81]),
        .Q(m_axi_rx_tdata[174]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[175] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[80]),
        .Q(m_axi_rx_tdata[175]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[176] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[79]),
        .Q(m_axi_rx_tdata[176]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[177] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[78]),
        .Q(m_axi_rx_tdata[177]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[178] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[77]),
        .Q(m_axi_rx_tdata[178]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[179] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[76]),
        .Q(m_axi_rx_tdata[179]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[238]),
        .Q(m_axi_rx_tdata[17]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[180] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[75]),
        .Q(m_axi_rx_tdata[180]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[181] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[74]),
        .Q(m_axi_rx_tdata[181]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[182] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[73]),
        .Q(m_axi_rx_tdata[182]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[183] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[72]),
        .Q(m_axi_rx_tdata[183]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[184] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[71]),
        .Q(m_axi_rx_tdata[184]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[185] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[70]),
        .Q(m_axi_rx_tdata[185]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[186] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[69]),
        .Q(m_axi_rx_tdata[186]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[187] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[68]),
        .Q(m_axi_rx_tdata[187]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[188] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[67]),
        .Q(m_axi_rx_tdata[188]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[189] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[66]),
        .Q(m_axi_rx_tdata[189]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[237]),
        .Q(m_axi_rx_tdata[18]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[190] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[65]),
        .Q(m_axi_rx_tdata[190]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[191] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[64]),
        .Q(m_axi_rx_tdata[191]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[192] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[63]),
        .Q(m_axi_rx_tdata[192]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[193] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[62]),
        .Q(m_axi_rx_tdata[193]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[194] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[61]),
        .Q(m_axi_rx_tdata[194]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[195] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[60]),
        .Q(m_axi_rx_tdata[195]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[196] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[59]),
        .Q(m_axi_rx_tdata[196]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[197] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[58]),
        .Q(m_axi_rx_tdata[197]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[198] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[57]),
        .Q(m_axi_rx_tdata[198]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[199] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[56]),
        .Q(m_axi_rx_tdata[199]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[236]),
        .Q(m_axi_rx_tdata[19]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[254]),
        .Q(m_axi_rx_tdata[1]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[200] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[55]),
        .Q(m_axi_rx_tdata[200]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[201] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[54]),
        .Q(m_axi_rx_tdata[201]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[202] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[53]),
        .Q(m_axi_rx_tdata[202]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[203] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[52]),
        .Q(m_axi_rx_tdata[203]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[204] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[51]),
        .Q(m_axi_rx_tdata[204]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[205] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[50]),
        .Q(m_axi_rx_tdata[205]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[206] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[49]),
        .Q(m_axi_rx_tdata[206]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[207] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[48]),
        .Q(m_axi_rx_tdata[207]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[208] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[47]),
        .Q(m_axi_rx_tdata[208]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[209] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[46]),
        .Q(m_axi_rx_tdata[209]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[235]),
        .Q(m_axi_rx_tdata[20]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[210] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[45]),
        .Q(m_axi_rx_tdata[210]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[211] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[44]),
        .Q(m_axi_rx_tdata[211]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[212] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[43]),
        .Q(m_axi_rx_tdata[212]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[213] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[42]),
        .Q(m_axi_rx_tdata[213]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[214] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[41]),
        .Q(m_axi_rx_tdata[214]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[215] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[40]),
        .Q(m_axi_rx_tdata[215]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[216] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[39]),
        .Q(m_axi_rx_tdata[216]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[217] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[38]),
        .Q(m_axi_rx_tdata[217]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[218] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[37]),
        .Q(m_axi_rx_tdata[218]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[219] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[36]),
        .Q(m_axi_rx_tdata[219]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[234]),
        .Q(m_axi_rx_tdata[21]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[220] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[35]),
        .Q(m_axi_rx_tdata[220]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[221] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[34]),
        .Q(m_axi_rx_tdata[221]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[222] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[33]),
        .Q(m_axi_rx_tdata[222]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[223] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[32]),
        .Q(m_axi_rx_tdata[223]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[224] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[31]),
        .Q(m_axi_rx_tdata[224]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[225] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[30]),
        .Q(m_axi_rx_tdata[225]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[226] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[29]),
        .Q(m_axi_rx_tdata[226]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[227] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[28]),
        .Q(m_axi_rx_tdata[227]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[228] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[27]),
        .Q(m_axi_rx_tdata[228]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[229] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[26]),
        .Q(m_axi_rx_tdata[229]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[233]),
        .Q(m_axi_rx_tdata[22]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[230] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[25]),
        .Q(m_axi_rx_tdata[230]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[231] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[24]),
        .Q(m_axi_rx_tdata[231]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[232] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[23]),
        .Q(m_axi_rx_tdata[232]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[233] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[22]),
        .Q(m_axi_rx_tdata[233]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[234] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[21]),
        .Q(m_axi_rx_tdata[234]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[235] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[20]),
        .Q(m_axi_rx_tdata[235]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[236] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[19]),
        .Q(m_axi_rx_tdata[236]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[237] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[18]),
        .Q(m_axi_rx_tdata[237]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[238] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[17]),
        .Q(m_axi_rx_tdata[238]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[239] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[16]),
        .Q(m_axi_rx_tdata[239]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[232]),
        .Q(m_axi_rx_tdata[23]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[240] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[15]),
        .Q(m_axi_rx_tdata[240]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[241] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[14]),
        .Q(m_axi_rx_tdata[241]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[242] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[13]),
        .Q(m_axi_rx_tdata[242]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[243] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[12]),
        .Q(m_axi_rx_tdata[243]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[244] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[11]),
        .Q(m_axi_rx_tdata[244]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[245] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[10]),
        .Q(m_axi_rx_tdata[245]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[246] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(m_axi_rx_tdata[246]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[247] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(m_axi_rx_tdata[247]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[248] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(m_axi_rx_tdata[248]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[249] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(m_axi_rx_tdata[249]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[231]),
        .Q(m_axi_rx_tdata[24]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[250] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(m_axi_rx_tdata[250]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[251] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(m_axi_rx_tdata[251]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[252] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(m_axi_rx_tdata[252]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[253] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(m_axi_rx_tdata[253]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[254] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(m_axi_rx_tdata[254]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[255] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(m_axi_rx_tdata[255]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[230]),
        .Q(m_axi_rx_tdata[25]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[229]),
        .Q(m_axi_rx_tdata[26]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[228]),
        .Q(m_axi_rx_tdata[27]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[227]),
        .Q(m_axi_rx_tdata[28]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[226]),
        .Q(m_axi_rx_tdata[29]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[253]),
        .Q(m_axi_rx_tdata[2]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[225]),
        .Q(m_axi_rx_tdata[30]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[224]),
        .Q(m_axi_rx_tdata[31]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[223]),
        .Q(m_axi_rx_tdata[32]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[222]),
        .Q(m_axi_rx_tdata[33]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[221]),
        .Q(m_axi_rx_tdata[34]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[220]),
        .Q(m_axi_rx_tdata[35]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[219]),
        .Q(m_axi_rx_tdata[36]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[218]),
        .Q(m_axi_rx_tdata[37]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[217]),
        .Q(m_axi_rx_tdata[38]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[216]),
        .Q(m_axi_rx_tdata[39]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[252]),
        .Q(m_axi_rx_tdata[3]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[215]),
        .Q(m_axi_rx_tdata[40]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[214]),
        .Q(m_axi_rx_tdata[41]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[213]),
        .Q(m_axi_rx_tdata[42]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[212]),
        .Q(m_axi_rx_tdata[43]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[211]),
        .Q(m_axi_rx_tdata[44]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[210]),
        .Q(m_axi_rx_tdata[45]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[209]),
        .Q(m_axi_rx_tdata[46]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[208]),
        .Q(m_axi_rx_tdata[47]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[207]),
        .Q(m_axi_rx_tdata[48]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[206]),
        .Q(m_axi_rx_tdata[49]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[251]),
        .Q(m_axi_rx_tdata[4]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[205]),
        .Q(m_axi_rx_tdata[50]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[204]),
        .Q(m_axi_rx_tdata[51]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[203]),
        .Q(m_axi_rx_tdata[52]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[202]),
        .Q(m_axi_rx_tdata[53]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[201]),
        .Q(m_axi_rx_tdata[54]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[200]),
        .Q(m_axi_rx_tdata[55]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[199]),
        .Q(m_axi_rx_tdata[56]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[198]),
        .Q(m_axi_rx_tdata[57]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[197]),
        .Q(m_axi_rx_tdata[58]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[196]),
        .Q(m_axi_rx_tdata[59]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[250]),
        .Q(m_axi_rx_tdata[5]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[195]),
        .Q(m_axi_rx_tdata[60]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[194]),
        .Q(m_axi_rx_tdata[61]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[193]),
        .Q(m_axi_rx_tdata[62]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[192]),
        .Q(m_axi_rx_tdata[63]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[191]),
        .Q(m_axi_rx_tdata[64]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[190]),
        .Q(m_axi_rx_tdata[65]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[189]),
        .Q(m_axi_rx_tdata[66]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[67] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[188]),
        .Q(m_axi_rx_tdata[67]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[187]),
        .Q(m_axi_rx_tdata[68]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[186]),
        .Q(m_axi_rx_tdata[69]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[249]),
        .Q(m_axi_rx_tdata[6]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[185]),
        .Q(m_axi_rx_tdata[70]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[71] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[184]),
        .Q(m_axi_rx_tdata[71]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[72] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[183]),
        .Q(m_axi_rx_tdata[72]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[73] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[182]),
        .Q(m_axi_rx_tdata[73]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[74] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[181]),
        .Q(m_axi_rx_tdata[74]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[75] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[180]),
        .Q(m_axi_rx_tdata[75]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[76] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[179]),
        .Q(m_axi_rx_tdata[76]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[77] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[178]),
        .Q(m_axi_rx_tdata[77]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[78] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[177]),
        .Q(m_axi_rx_tdata[78]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[79] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[176]),
        .Q(m_axi_rx_tdata[79]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[248]),
        .Q(m_axi_rx_tdata[7]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[80] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[175]),
        .Q(m_axi_rx_tdata[80]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[81] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[174]),
        .Q(m_axi_rx_tdata[81]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[82] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[173]),
        .Q(m_axi_rx_tdata[82]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[83] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[172]),
        .Q(m_axi_rx_tdata[83]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[84] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[171]),
        .Q(m_axi_rx_tdata[84]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[85] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[170]),
        .Q(m_axi_rx_tdata[85]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[86] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[169]),
        .Q(m_axi_rx_tdata[86]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[87] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[168]),
        .Q(m_axi_rx_tdata[87]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[88] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[167]),
        .Q(m_axi_rx_tdata[88]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[89] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[166]),
        .Q(m_axi_rx_tdata[89]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[247]),
        .Q(m_axi_rx_tdata[8]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[90] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[165]),
        .Q(m_axi_rx_tdata[90]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[91] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[164]),
        .Q(m_axi_rx_tdata[91]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[92] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[163]),
        .Q(m_axi_rx_tdata[92]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[93] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[162]),
        .Q(m_axi_rx_tdata[93]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[94] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[161]),
        .Q(m_axi_rx_tdata[94]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[95] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[160]),
        .Q(m_axi_rx_tdata[95]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[96] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[159]),
        .Q(m_axi_rx_tdata[96]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[97] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[158]),
        .Q(m_axi_rx_tdata[97]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[98] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[157]),
        .Q(m_axi_rx_tdata[98]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[99] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[156]),
        .Q(m_axi_rx_tdata[99]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(D[246]),
        .Q(m_axi_rx_tdata[9]),
        .R(1'b0));
  FDRE m_axi_rx_tvalid_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(m_axi_rx_tvalid_reg_0),
        .Q(m_axi_rx_tvalid),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B
   (\txseq_counter_i_reg[4] ,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    Q,
    user_clk,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_reg[4] ;
  output [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [6:0]Q;
  input user_clk;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_reg[4] ;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0232_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0236_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0240_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0244_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0248_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0252_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT3 #(
    .INIT(8'hEF)) 
    \scrambler[57]_i_1 
       (.I0(Q[0]),
        .I1(\txseq_counter_i_reg[4] ),
        .I2(Q[5]),
        .O(data_valid_i));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \scrambler[57]_i_3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[6]),
        .O(\txseq_counter_i_reg[4] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_33
   (\txseq_counter_i_lane1_reg[2] ,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    Q,
    user_clk,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_lane1_reg[2] ;
  output [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [6:0]Q;
  input user_clk;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i_lane1;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane1_reg[2] ;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__0 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__0 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__0 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__0 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__0 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__0 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData040_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData044_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData048_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData052_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData056_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData060_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData064_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData068_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData072_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData076_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData04_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData080_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData084_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData088_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData092_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData096_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0100_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0104_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0108_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0112_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0116_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData08_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0120_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0124_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0128_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0132_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0136_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0140_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0144_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0148_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0152_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0156_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData012_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0160_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0164_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0168_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0172_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0176_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0180_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0184_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0188_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0192_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0196_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData016_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0200_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0204_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0208_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0212_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0216_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0220_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0224_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0228_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0232_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0236_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData020_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0240_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0244_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0248_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0252_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData024_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData028_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData032_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData036_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__0 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__0 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__0 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__0 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__0 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__0 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__0 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__0 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__0 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__0 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__0 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__0 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__0 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__0 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__0 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__0 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__0 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__0 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__0 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__0 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__0 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__0 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__0 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__0 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__0 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__0 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__0 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__0 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__0 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__0 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__0 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__0 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__0 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__0 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__0 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__0 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__0 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__0 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__0 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__0 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__0 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__0 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__0 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__0 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__0 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__0 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__0 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \scrambler[57]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\txseq_counter_i_lane1_reg[2] ),
        .I5(Q[5]),
        .O(data_valid_i_lane1));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__0 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT2 #(
    .INIT(4'hE)) 
    \scrambler[57]_i_3__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\txseq_counter_i_lane1_reg[2] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__0 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__0 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__0 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__0 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane1),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_34
   (\txseq_counter_i_lane2_reg[2] ,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    Q,
    user_clk,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_lane2_reg[2] ;
  output [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [6:0]Q;
  input user_clk;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i_lane2;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane2_reg[2] ;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__1 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__1 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__1 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__1 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__1 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__1 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData040_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData044_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData048_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData052_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData056_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData060_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData064_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData068_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData072_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData076_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData04_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData080_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData084_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData088_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData092_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData096_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0100_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0104_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0108_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0112_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0116_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData08_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0120_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0124_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0128_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0132_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0136_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0140_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0144_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0148_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0152_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0156_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData012_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0160_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0164_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0168_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0172_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0176_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0180_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0184_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0188_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0192_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0196_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData016_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0200_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0204_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0208_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0212_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0216_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0220_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0224_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0228_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0232_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0236_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData020_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0240_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0244_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0248_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0252_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData024_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData028_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData032_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData036_out),
        .Q(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__1 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__1 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__1 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__1 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__1 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__1 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__1 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__1 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__1 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__1 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__1 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__1 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__1 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__1 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__1 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__1 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__1 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__1 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__1 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__1 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__1 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__1 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__1 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__1 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__1 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__1 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__1 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__1 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__1 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__1 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__1 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__1 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__1 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__1 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__1 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__1 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__1 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__1 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__1 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__1 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__1 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__1 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__1 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__1 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__1 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__1 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__1 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \scrambler[57]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\txseq_counter_i_lane2_reg[2] ),
        .I5(Q[5]),
        .O(data_valid_i_lane2));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__1 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT2 #(
    .INIT(4'hE)) 
    \scrambler[57]_i_3__1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\txseq_counter_i_lane2_reg[2] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__1 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__1 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__1 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__1 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane2),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B" *) 
module aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_35
   (\txseq_counter_i_lane3_reg[2] ,
    SCRAMBLED_DATA_OUT,
    Q,
    user_clk,
    \SCRAMBLED_DATA_OUT_reg[63]_0 );
  output \txseq_counter_i_lane3_reg[2] ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input user_clk;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire data_valid_i_lane3;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane3_reg[2] ;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__2 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__2 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__2 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__2 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__2 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__2 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__2 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__2 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__2 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__2 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__2 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__2 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__2 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__2 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__2 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__2 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__2 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__2 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__2 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__2 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__2 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__2 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__2 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__2 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__2 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__2 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__2 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__2 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__2 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__2 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__2 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__2 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__2 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__2 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__2 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__2 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__2 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__2 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__2 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__2 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__2 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__2 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__2 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__2 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__2 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__2 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__2 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__2 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__2 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__2 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__2 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__2 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__2 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \scrambler[57]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\txseq_counter_i_lane3_reg[2] ),
        .I5(Q[5]),
        .O(data_valid_i_lane3));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__2 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT2 #(
    .INIT(4'hE)) 
    \scrambler[57]_i_3__2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\txseq_counter_i_lane3_reg[2] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__2 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__2 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__2 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__2 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(user_clk),
        .CE(data_valid_i_lane3),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_STANDARD_CC_MODULE
   (do_cc_r0,
    Q,
    SR,
    user_clk,
    CHANNEL_UP_RX_IF,
    extend_cc_r);
  output do_cc_r0;
  output Q;
  input SR;
  input user_clk;
  input CHANNEL_UP_RX_IF;
  input extend_cc_r;

  wire CHANNEL_UP_RX_IF;
  wire DO_CC_i_1_n_0;
  wire Q;
  wire SR;
  wire \cc_count_r_reg_n_0_[5] ;
  wire count_13d_flop_r;
  wire count_13d_flop_r_i_1_n_0;
  wire count_13d_flop_r_i_2_n_0;
  wire count_13d_flop_r_i_3_n_0;
  wire \count_13d_srl_r_reg_n_0_[0] ;
  wire \count_13d_srl_r_reg_n_0_[10] ;
  wire \count_13d_srl_r_reg_n_0_[11] ;
  wire \count_13d_srl_r_reg_n_0_[1] ;
  wire \count_13d_srl_r_reg_n_0_[2] ;
  wire \count_13d_srl_r_reg_n_0_[3] ;
  wire \count_13d_srl_r_reg_n_0_[4] ;
  wire \count_13d_srl_r_reg_n_0_[5] ;
  wire \count_13d_srl_r_reg_n_0_[6] ;
  wire \count_13d_srl_r_reg_n_0_[7] ;
  wire \count_13d_srl_r_reg_n_0_[8] ;
  wire \count_13d_srl_r_reg_n_0_[9] ;
  wire count_16d_flop_r;
  wire count_16d_flop_r0;
  wire count_16d_flop_r_i_1_n_0;
  wire count_16d_flop_r_i_3_n_0;
  wire count_16d_flop_r_i_4_n_0;
  wire \count_16d_srl_r[0]_i_1_n_0 ;
  wire \count_16d_srl_r_reg_n_0_[0] ;
  wire \count_16d_srl_r_reg_n_0_[10] ;
  wire \count_16d_srl_r_reg_n_0_[11] ;
  wire \count_16d_srl_r_reg_n_0_[12] ;
  wire \count_16d_srl_r_reg_n_0_[13] ;
  wire \count_16d_srl_r_reg_n_0_[14] ;
  wire \count_16d_srl_r_reg_n_0_[1] ;
  wire \count_16d_srl_r_reg_n_0_[2] ;
  wire \count_16d_srl_r_reg_n_0_[3] ;
  wire \count_16d_srl_r_reg_n_0_[4] ;
  wire \count_16d_srl_r_reg_n_0_[5] ;
  wire \count_16d_srl_r_reg_n_0_[6] ;
  wire \count_16d_srl_r_reg_n_0_[7] ;
  wire \count_16d_srl_r_reg_n_0_[8] ;
  wire \count_16d_srl_r_reg_n_0_[9] ;
  wire count_24d_flop_r;
  wire count_24d_flop_r0;
  wire count_24d_flop_r_i_1_n_0;
  wire count_24d_flop_r_i_3_n_0;
  wire count_24d_flop_r_i_4_n_0;
  wire count_24d_flop_r_i_5_n_0;
  wire count_24d_flop_r_i_6_n_0;
  wire count_24d_srl_r0;
  wire \count_24d_srl_r_reg_n_0_[0] ;
  wire \count_24d_srl_r_reg_n_0_[10] ;
  wire \count_24d_srl_r_reg_n_0_[11] ;
  wire \count_24d_srl_r_reg_n_0_[12] ;
  wire \count_24d_srl_r_reg_n_0_[13] ;
  wire \count_24d_srl_r_reg_n_0_[14] ;
  wire \count_24d_srl_r_reg_n_0_[15] ;
  wire \count_24d_srl_r_reg_n_0_[16] ;
  wire \count_24d_srl_r_reg_n_0_[17] ;
  wire \count_24d_srl_r_reg_n_0_[18] ;
  wire \count_24d_srl_r_reg_n_0_[19] ;
  wire \count_24d_srl_r_reg_n_0_[1] ;
  wire \count_24d_srl_r_reg_n_0_[20] ;
  wire \count_24d_srl_r_reg_n_0_[21] ;
  wire \count_24d_srl_r_reg_n_0_[22] ;
  wire \count_24d_srl_r_reg_n_0_[2] ;
  wire \count_24d_srl_r_reg_n_0_[3] ;
  wire \count_24d_srl_r_reg_n_0_[4] ;
  wire \count_24d_srl_r_reg_n_0_[5] ;
  wire \count_24d_srl_r_reg_n_0_[6] ;
  wire \count_24d_srl_r_reg_n_0_[7] ;
  wire \count_24d_srl_r_reg_n_0_[8] ;
  wire \count_24d_srl_r_reg_n_0_[9] ;
  wire do_cc_r0;
  wire extend_cc_r;
  wire [4:0]p_1_in;
  wire p_1_in__0;
  wire [5:5]p_2_out;
  wire reset_r;
  wire user_clk;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    DO_CC0
       (.I0(p_1_in[0]),
        .I1(\cc_count_r_reg_n_0_[5] ),
        .I2(p_1_in[3]),
        .I3(p_1_in[4]),
        .I4(p_1_in[1]),
        .I5(p_1_in[2]),
        .O(p_1_in__0));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    DO_CC_i_1
       (.I0(p_1_in__0),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\count_16d_srl_r_reg_n_0_[14] ),
        .I3(\count_24d_srl_r_reg_n_0_[22] ),
        .I4(reset_r),
        .O(DO_CC_i_1_n_0));
  FDRE DO_CC_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(DO_CC_i_1_n_0),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h80FF)) 
    \cc_count_r[0]_i_1 
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(CHANNEL_UP_RX_IF),
        .O(p_2_out));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_2_out),
        .Q(p_1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(p_1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(p_1_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(p_1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(p_1_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(p_1_in[0]),
        .Q(\cc_count_r_reg_n_0_[5] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEAAA)) 
    count_13d_flop_r_i_1
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(count_13d_flop_r_i_2_n_0),
        .I2(count_13d_flop_r_i_3_n_0),
        .I3(reset_r),
        .O(count_13d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_13d_flop_r_i_2
       (.I0(\count_13d_srl_r_reg_n_0_[9] ),
        .I1(\count_13d_srl_r_reg_n_0_[8] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(\count_13d_srl_r_reg_n_0_[10] ),
        .I4(\count_13d_srl_r_reg_n_0_[6] ),
        .I5(\count_13d_srl_r_reg_n_0_[7] ),
        .O(count_13d_flop_r_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_13d_flop_r_i_3
       (.I0(\count_13d_srl_r_reg_n_0_[3] ),
        .I1(\count_13d_srl_r_reg_n_0_[2] ),
        .I2(\count_13d_srl_r_reg_n_0_[5] ),
        .I3(\count_13d_srl_r_reg_n_0_[4] ),
        .I4(\count_13d_srl_r_reg_n_0_[0] ),
        .I5(\count_13d_srl_r_reg_n_0_[1] ),
        .O(count_13d_flop_r_i_3_n_0));
  FDRE count_13d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_13d_flop_r_i_1_n_0),
        .Q(count_13d_flop_r),
        .R(SR));
  FDRE \count_13d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(count_13d_flop_r),
        .Q(\count_13d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[9] ),
        .Q(\count_13d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[10] ),
        .Q(\count_13d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[0] ),
        .Q(\count_13d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[1] ),
        .Q(\count_13d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[2] ),
        .Q(\count_13d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[3] ),
        .Q(\count_13d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[4] ),
        .Q(\count_13d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[5] ),
        .Q(\count_13d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[6] ),
        .Q(\count_13d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[7] ),
        .Q(\count_13d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[8] ),
        .Q(\count_13d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFBF8)) 
    count_16d_flop_r_i_1
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(count_16d_flop_r0),
        .I3(count_16d_flop_r),
        .O(count_16d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    count_16d_flop_r_i_2
       (.I0(count_16d_flop_r_i_3_n_0),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(reset_r),
        .I3(\count_16d_srl_r_reg_n_0_[12] ),
        .I4(\count_16d_srl_r_reg_n_0_[13] ),
        .I5(count_16d_flop_r_i_4_n_0),
        .O(count_16d_flop_r0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_16d_flop_r_i_3
       (.I0(\count_16d_srl_r_reg_n_0_[3] ),
        .I1(\count_16d_srl_r_reg_n_0_[2] ),
        .I2(\count_16d_srl_r_reg_n_0_[5] ),
        .I3(\count_16d_srl_r_reg_n_0_[4] ),
        .I4(\count_16d_srl_r_reg_n_0_[0] ),
        .I5(\count_16d_srl_r_reg_n_0_[1] ),
        .O(count_16d_flop_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_16d_flop_r_i_4
       (.I0(\count_16d_srl_r_reg_n_0_[9] ),
        .I1(\count_16d_srl_r_reg_n_0_[8] ),
        .I2(\count_16d_srl_r_reg_n_0_[11] ),
        .I3(\count_16d_srl_r_reg_n_0_[10] ),
        .I4(\count_16d_srl_r_reg_n_0_[6] ),
        .I5(\count_16d_srl_r_reg_n_0_[7] ),
        .O(count_16d_flop_r_i_4_n_0));
  FDRE count_16d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_16d_flop_r_i_1_n_0),
        .Q(count_16d_flop_r),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \count_16d_srl_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(CHANNEL_UP_RX_IF),
        .O(\count_16d_srl_r[0]_i_1_n_0 ));
  FDRE \count_16d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(count_16d_flop_r),
        .Q(\count_16d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[9] ),
        .Q(\count_16d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[10] ),
        .Q(\count_16d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[12] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[11] ),
        .Q(\count_16d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[13] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[12] ),
        .Q(\count_16d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[14] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[13] ),
        .Q(\count_16d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[0] ),
        .Q(\count_16d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[1] ),
        .Q(\count_16d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[2] ),
        .Q(\count_16d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[3] ),
        .Q(\count_16d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[4] ),
        .Q(\count_16d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[5] ),
        .Q(\count_16d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[6] ),
        .Q(\count_16d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[7] ),
        .Q(\count_16d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(\count_16d_srl_r[0]_i_1_n_0 ),
        .D(\count_16d_srl_r_reg_n_0_[8] ),
        .Q(\count_16d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFBFFF80)) 
    count_24d_flop_r_i_1
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\count_16d_srl_r_reg_n_0_[14] ),
        .I3(count_24d_flop_r0),
        .I4(count_24d_flop_r),
        .O(count_24d_flop_r_i_1_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    count_24d_flop_r_i_2
       (.I0(count_24d_flop_r_i_3_n_0),
        .I1(count_24d_flop_r_i_4_n_0),
        .I2(count_24d_flop_r_i_5_n_0),
        .I3(count_24d_flop_r_i_6_n_0),
        .O(count_24d_flop_r0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_24d_flop_r_i_3
       (.I0(\count_24d_srl_r_reg_n_0_[9] ),
        .I1(\count_24d_srl_r_reg_n_0_[8] ),
        .I2(\count_24d_srl_r_reg_n_0_[11] ),
        .I3(\count_24d_srl_r_reg_n_0_[10] ),
        .I4(\count_24d_srl_r_reg_n_0_[6] ),
        .I5(\count_24d_srl_r_reg_n_0_[7] ),
        .O(count_24d_flop_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    count_24d_flop_r_i_4
       (.I0(\count_24d_srl_r_reg_n_0_[21] ),
        .I1(\count_24d_srl_r_reg_n_0_[20] ),
        .I2(reset_r),
        .I3(\count_24d_srl_r_reg_n_0_[22] ),
        .I4(\count_24d_srl_r_reg_n_0_[18] ),
        .I5(\count_24d_srl_r_reg_n_0_[19] ),
        .O(count_24d_flop_r_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_24d_flop_r_i_5
       (.I0(\count_24d_srl_r_reg_n_0_[15] ),
        .I1(\count_24d_srl_r_reg_n_0_[14] ),
        .I2(\count_24d_srl_r_reg_n_0_[17] ),
        .I3(\count_24d_srl_r_reg_n_0_[16] ),
        .I4(\count_24d_srl_r_reg_n_0_[12] ),
        .I5(\count_24d_srl_r_reg_n_0_[13] ),
        .O(count_24d_flop_r_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_24d_flop_r_i_6
       (.I0(\count_24d_srl_r_reg_n_0_[3] ),
        .I1(\count_24d_srl_r_reg_n_0_[2] ),
        .I2(\count_24d_srl_r_reg_n_0_[5] ),
        .I3(\count_24d_srl_r_reg_n_0_[4] ),
        .I4(\count_24d_srl_r_reg_n_0_[0] ),
        .I5(\count_24d_srl_r_reg_n_0_[1] ),
        .O(count_24d_flop_r_i_6_n_0));
  FDRE count_24d_flop_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(count_24d_flop_r_i_1_n_0),
        .Q(count_24d_flop_r),
        .R(SR));
  LUT3 #(
    .INIT(8'h8F)) 
    \count_24d_srl_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(CHANNEL_UP_RX_IF),
        .O(count_24d_srl_r0));
  FDRE \count_24d_srl_r_reg[0] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(count_24d_flop_r),
        .Q(\count_24d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[10] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[9] ),
        .Q(\count_24d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[11] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[10] ),
        .Q(\count_24d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[12] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[11] ),
        .Q(\count_24d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[13] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[12] ),
        .Q(\count_24d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[14] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[13] ),
        .Q(\count_24d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[15] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[14] ),
        .Q(\count_24d_srl_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[16] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[15] ),
        .Q(\count_24d_srl_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[17] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[16] ),
        .Q(\count_24d_srl_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[18] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[17] ),
        .Q(\count_24d_srl_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[19] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[18] ),
        .Q(\count_24d_srl_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[1] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[0] ),
        .Q(\count_24d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[20] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[19] ),
        .Q(\count_24d_srl_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[21] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[20] ),
        .Q(\count_24d_srl_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[22] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[21] ),
        .Q(\count_24d_srl_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[2] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[1] ),
        .Q(\count_24d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[3] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[2] ),
        .Q(\count_24d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[4] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[3] ),
        .Q(\count_24d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[5] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[4] ),
        .Q(\count_24d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[6] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[5] ),
        .Q(\count_24d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[7] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[6] ),
        .Q(\count_24d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[8] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[7] ),
        .Q(\count_24d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[9] 
       (.C(user_clk),
        .CE(count_24d_srl_r0),
        .D(\count_24d_srl_r_reg_n_0_[8] ),
        .Q(\count_24d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    do_cc_r_i_1
       (.I0(Q),
        .I1(extend_cc_r),
        .O(do_cc_r0));
  FDRE reset_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(SR),
        .Q(reset_r),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_SYM_DEC
   (rx_pe_data_v_i,
    illegal_btf_i,
    got_idles_i,
    \remote_rdy_cntr_reg[1]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    RX_HEADER_0_REG_reg_0,
    user_clk,
    rx_header_1_i_0,
    \RX_DATA_REG_reg[0]_0 ,
    \RX_DATA_REG_reg[63]_0 ,
    RX_IDLE_reg_0,
    RXDATAVALID_IN_REG,
    \rx_na_idles_cntr_reg[0]_0 ,
    remote_ready_r_reg,
    remote_ready_r_reg_0,
    remote_ready_r_reg_1);
  output [0:0]rx_pe_data_v_i;
  output illegal_btf_i;
  output [0:0]got_idles_i;
  output \remote_rdy_cntr_reg[1]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input RX_HEADER_0_REG_reg_0;
  input user_clk;
  input rx_header_1_i_0;
  input \RX_DATA_REG_reg[0]_0 ;
  input [63:0]\RX_DATA_REG_reg[63]_0 ;
  input RX_IDLE_reg_0;
  input RXDATAVALID_IN_REG;
  input \rx_na_idles_cntr_reg[0]_0 ;
  input remote_ready_r_reg;
  input remote_ready_r_reg_0;
  input remote_ready_r_reg_1;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__2_n_0;
  wire ILLEGAL_BTF_i_3__2_n_0;
  wire ILLEGAL_BTF_i_4__2_n_0;
  wire ILLEGAL_BTF_i_5__2_n_0;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [63:0]\RX_DATA_REG_reg[63]_0 ;
  wire RX_HEADER_0_REG_reg_0;
  wire RX_IDLE_i_2__2_n_0;
  wire RX_IDLE_reg_0;
  wire RX_NA_IDLE_i_2__2_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]got_idles_i;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__2_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__2_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__2_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__2_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__2_n_0 ;
  wire \remote_rdy_cntr_reg[1]_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_r_reg;
  wire remote_ready_r_reg_0;
  wire remote_ready_r_reg_1;
  wire rx_header_1_i_0;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__2_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [0:0]rx_pe_data_v_i;
  wire [63:16]rxdata_s;
  wire [0:1]sync_header_c;
  wire user_clk;
  wire valid_d;

  LUT6 #(
    .INIT(64'hFFEF0000EEEB0000)) 
    ILLEGAL_BTF_i_1__2
       (.I0(ILLEGAL_BTF_i_2__2_n_0),
        .I1(p_0_in[6]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(ILLEGAL_BTF_i_3__2_n_0),
        .I5(p_0_in[5]),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    ILLEGAL_BTF_i_2__2
       (.I0(ILLEGAL_BTF_i_4__2_n_0),
        .I1(p_0_in[9]),
        .I2(p_0_in[8]),
        .I3(p_0_in[11]),
        .I4(p_0_in[10]),
        .I5(ILLEGAL_BTF_i_5__2_n_0),
        .O(ILLEGAL_BTF_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    ILLEGAL_BTF_i_3__2
       (.I0(RXDATAVALID_IN_REG),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(ILLEGAL_BTF_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    ILLEGAL_BTF_i_4__2
       (.I0(p_0_in[13]),
        .I1(p_0_in[12]),
        .I2(p_0_in[14]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_5__2
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .O(ILLEGAL_BTF_i_5__2_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(RX_IDLE_reg_0));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RX_HEADER_0_REG_reg_0),
        .Q(sync_header_c[1]),
        .R(1'b0));
  FDRE RX_HEADER_1_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_header_1_i_0),
        .Q(sync_header_c[0]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    RX_IDLE_i_1__2
       (.I0(RX_IDLE_i_2__2_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(sync_header_c[1]),
        .I4(sync_header_c[0]),
        .I5(ILLEGAL_BTF_i_2__2_n_0),
        .O(rx_idle_c));
  LUT2 #(
    .INIT(4'hE)) 
    RX_IDLE_i_2__2
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(RX_IDLE_i_2__2_n_0));
  FDRE RX_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(RX_IDLE_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    RX_NA_IDLE_i_1__2
       (.I0(RX_NA_IDLE_i_2__2_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__2_n_0),
        .O(rx_na_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'h40)) 
    RX_NA_IDLE_i_2__2
       (.I0(sync_header_c[1]),
        .I1(sync_header_c[0]),
        .I2(RXDATAVALID_IN_REG),
        .O(RX_NA_IDLE_i_2__2_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(RX_IDLE_reg_0));
  LUT3 #(
    .INIT(8'h40)) 
    \RX_PE_DATA[0]_i_1__2 
       (.I0(sync_header_c[0]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(valid_d),
        .Q(rx_pe_data_v_i),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(RX_IDLE_reg_0));
  LUT6 #(
    .INIT(64'h00004000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1__2 
       (.I0(\remote_rdy_cntr[0]_i_4__2_n_0 ),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[1]),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \remote_rdy_cntr[0]_i_2__2 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_ready_det),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \remote_rdy_cntr[0]_i_3__2 
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr[0]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__2 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(\remote_rdy_cntr[1]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__2 
       (.I0(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[2]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__2_n_0 ),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__2_n_0 ),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__2_n_0 ),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    remote_ready_det_i_1__2
       (.I0(ILLEGAL_BTF_i_3__2_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__2_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(RX_IDLE_reg_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    remote_ready_r_i_1
       (.I0(remote_ready_r_reg),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[0]),
        .I4(remote_ready_r_reg_0),
        .I5(remote_ready_r_reg_1),
        .O(\remote_rdy_cntr_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rx_na_idles_cntr[2]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[1]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rx_na_idles_cntr[3]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__2 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__2 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_DEC" *) 
module aurora_64b66b_w256_1375Gbps_SYM_DEC_11
   (rx_pe_data_v_i,
    illegal_btf_i,
    got_idles_i,
    \remote_rdy_cntr_reg[1]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    RX_HEADER_0_REG_reg_0,
    user_clk,
    rx_header_1_i_1,
    \RX_DATA_REG_reg[0]_0 ,
    \RX_DATA_REG_reg[63]_0 ,
    ILLEGAL_BTF_reg_0,
    RXDATAVALID_IN_REG,
    \rx_na_idles_cntr_reg[0]_0 );
  output [0:0]rx_pe_data_v_i;
  output illegal_btf_i;
  output [0:0]got_idles_i;
  output \remote_rdy_cntr_reg[1]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input RX_HEADER_0_REG_reg_0;
  input user_clk;
  input rx_header_1_i_1;
  input \RX_DATA_REG_reg[0]_0 ;
  input [63:0]\RX_DATA_REG_reg[63]_0 ;
  input ILLEGAL_BTF_reg_0;
  input RXDATAVALID_IN_REG;
  input \rx_na_idles_cntr_reg[0]_0 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__1_n_0;
  wire ILLEGAL_BTF_i_3__1_n_0;
  wire ILLEGAL_BTF_i_4__1_n_0;
  wire ILLEGAL_BTF_i_5__1_n_0;
  wire ILLEGAL_BTF_reg_0;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [63:0]\RX_DATA_REG_reg[63]_0 ;
  wire RX_HEADER_0_REG_reg_0;
  wire RX_IDLE_i_2__1_n_0;
  wire RX_NA_IDLE_i_2__1_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]got_idles_i;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__1_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__1_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__1_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__1_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__1_n_0 ;
  wire \remote_rdy_cntr_reg[1]_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire rx_header_1_i_1;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [0:0]rx_pe_data_v_i;
  wire [63:16]rxdata_s;
  wire [0:1]sync_header_c;
  wire user_clk;
  wire valid_d;

  LUT6 #(
    .INIT(64'hFFEF0000EEEB0000)) 
    ILLEGAL_BTF_i_1__1
       (.I0(ILLEGAL_BTF_i_2__1_n_0),
        .I1(p_0_in[6]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(ILLEGAL_BTF_i_3__1_n_0),
        .I5(p_0_in[5]),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    ILLEGAL_BTF_i_2__1
       (.I0(ILLEGAL_BTF_i_4__1_n_0),
        .I1(p_0_in[9]),
        .I2(p_0_in[8]),
        .I3(p_0_in[11]),
        .I4(p_0_in[10]),
        .I5(ILLEGAL_BTF_i_5__1_n_0),
        .O(ILLEGAL_BTF_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    ILLEGAL_BTF_i_3__1
       (.I0(RXDATAVALID_IN_REG),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(ILLEGAL_BTF_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    ILLEGAL_BTF_i_4__1
       (.I0(p_0_in[13]),
        .I1(p_0_in[12]),
        .I2(p_0_in[14]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_5__1
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .O(ILLEGAL_BTF_i_5__1_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RX_HEADER_0_REG_reg_0),
        .Q(sync_header_c[1]),
        .R(1'b0));
  FDRE RX_HEADER_1_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_header_1_i_1),
        .Q(sync_header_c[0]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    RX_IDLE_i_1__1
       (.I0(RX_IDLE_i_2__1_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(sync_header_c[1]),
        .I4(sync_header_c[0]),
        .I5(ILLEGAL_BTF_i_2__1_n_0),
        .O(rx_idle_c));
  LUT2 #(
    .INIT(4'hE)) 
    RX_IDLE_i_2__1
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(RX_IDLE_i_2__1_n_0));
  FDRE RX_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(ILLEGAL_BTF_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    RX_NA_IDLE_i_1__1
       (.I0(RX_NA_IDLE_i_2__1_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__1_n_0),
        .O(rx_na_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'h40)) 
    RX_NA_IDLE_i_2__1
       (.I0(sync_header_c[1]),
        .I1(sync_header_c[0]),
        .I2(RXDATAVALID_IN_REG),
        .O(RX_NA_IDLE_i_2__1_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(ILLEGAL_BTF_reg_0));
  LUT3 #(
    .INIT(8'h40)) 
    \RX_PE_DATA[0]_i_1__1 
       (.I0(sync_header_c[0]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(valid_d),
        .Q(rx_pe_data_v_i),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(ILLEGAL_BTF_reg_0));
  LUT6 #(
    .INIT(64'h00004000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1__1 
       (.I0(\remote_rdy_cntr[0]_i_4__1_n_0 ),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[1]),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \remote_rdy_cntr[0]_i_2__1 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_ready_det),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \remote_rdy_cntr[0]_i_3__1 
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr[0]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__1 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(\remote_rdy_cntr[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__1 
       (.I0(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[2]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__1_n_0 ),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__1_n_0 ),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__1_n_0 ),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    remote_ready_det_i_1__1
       (.I0(ILLEGAL_BTF_i_3__1_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__1_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(ILLEGAL_BTF_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    remote_ready_r_i_2
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rx_na_idles_cntr[2]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[1]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rx_na_idles_cntr[3]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__1 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__1 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_DEC" *) 
module aurora_64b66b_w256_1375Gbps_SYM_DEC_17
   (rx_pe_data_v_i,
    illegal_btf_i,
    got_idles_i,
    \remote_rdy_cntr_reg[1]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    RX_HEADER_0_REG_reg_0,
    user_clk,
    rx_header_1_i_2,
    \RX_DATA_REG_reg[0]_0 ,
    \RX_DATA_REG_reg[63]_0 ,
    RX_IDLE_reg_0,
    RXDATAVALID_IN_REG,
    \rx_na_idles_cntr_reg[0]_0 );
  output [0:0]rx_pe_data_v_i;
  output illegal_btf_i;
  output [0:0]got_idles_i;
  output \remote_rdy_cntr_reg[1]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input RX_HEADER_0_REG_reg_0;
  input user_clk;
  input rx_header_1_i_2;
  input \RX_DATA_REG_reg[0]_0 ;
  input [63:0]\RX_DATA_REG_reg[63]_0 ;
  input RX_IDLE_reg_0;
  input RXDATAVALID_IN_REG;
  input \rx_na_idles_cntr_reg[0]_0 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__0_n_0;
  wire ILLEGAL_BTF_i_3__0_n_0;
  wire ILLEGAL_BTF_i_4__0_n_0;
  wire ILLEGAL_BTF_i_5__0_n_0;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [63:0]\RX_DATA_REG_reg[63]_0 ;
  wire RX_HEADER_0_REG_reg_0;
  wire RX_IDLE_i_2__0_n_0;
  wire RX_IDLE_reg_0;
  wire RX_NA_IDLE_i_2__0_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]got_idles_i;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__0_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__0_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__0_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__0_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__0_n_0 ;
  wire \remote_rdy_cntr_reg[1]_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire rx_header_1_i_2;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__0_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [0:0]rx_pe_data_v_i;
  wire [63:16]rxdata_s;
  wire [0:1]sync_header_c;
  wire user_clk;
  wire valid_d;

  LUT6 #(
    .INIT(64'hFFEF0000EEEB0000)) 
    ILLEGAL_BTF_i_1__0
       (.I0(ILLEGAL_BTF_i_2__0_n_0),
        .I1(p_0_in[6]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(ILLEGAL_BTF_i_3__0_n_0),
        .I5(p_0_in[5]),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    ILLEGAL_BTF_i_2__0
       (.I0(ILLEGAL_BTF_i_4__0_n_0),
        .I1(p_0_in[9]),
        .I2(p_0_in[8]),
        .I3(p_0_in[11]),
        .I4(p_0_in[10]),
        .I5(ILLEGAL_BTF_i_5__0_n_0),
        .O(ILLEGAL_BTF_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    ILLEGAL_BTF_i_3__0
       (.I0(RXDATAVALID_IN_REG),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(ILLEGAL_BTF_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    ILLEGAL_BTF_i_4__0
       (.I0(p_0_in[13]),
        .I1(p_0_in[12]),
        .I2(p_0_in[14]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_5__0
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .O(ILLEGAL_BTF_i_5__0_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(RX_IDLE_reg_0));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(\RX_DATA_REG_reg[63]_0 [9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RX_HEADER_0_REG_reg_0),
        .Q(sync_header_c[1]),
        .R(1'b0));
  FDRE RX_HEADER_1_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_header_1_i_2),
        .Q(sync_header_c[0]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    RX_IDLE_i_1__0
       (.I0(RX_IDLE_i_2__0_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(sync_header_c[1]),
        .I4(sync_header_c[0]),
        .I5(ILLEGAL_BTF_i_2__0_n_0),
        .O(rx_idle_c));
  LUT2 #(
    .INIT(4'hE)) 
    RX_IDLE_i_2__0
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(RX_IDLE_i_2__0_n_0));
  FDRE RX_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(RX_IDLE_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    RX_NA_IDLE_i_1__0
       (.I0(RX_NA_IDLE_i_2__0_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__0_n_0),
        .O(rx_na_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'h40)) 
    RX_NA_IDLE_i_2__0
       (.I0(sync_header_c[1]),
        .I1(sync_header_c[0]),
        .I2(RXDATAVALID_IN_REG),
        .O(RX_NA_IDLE_i_2__0_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(RX_IDLE_reg_0));
  LUT3 #(
    .INIT(8'h40)) 
    \RX_PE_DATA[0]_i_1__0 
       (.I0(sync_header_c[0]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(valid_d),
        .Q(rx_pe_data_v_i),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(RX_IDLE_reg_0));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(RX_IDLE_reg_0));
  LUT6 #(
    .INIT(64'h00004000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1__0 
       (.I0(\remote_rdy_cntr[0]_i_4__0_n_0 ),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[1]),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \remote_rdy_cntr[0]_i_2__0 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_ready_det),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \remote_rdy_cntr[0]_i_3__0 
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__0 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__0 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(\remote_rdy_cntr[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__0 
       (.I0(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[2]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__0_n_0 ),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__0_n_0 ),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__0_n_0 ),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    remote_ready_det_i_1__0
       (.I0(ILLEGAL_BTF_i_3__0_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2__0_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(RX_IDLE_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    remote_ready_r_i_4
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rx_na_idles_cntr[2]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[1]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rx_na_idles_cntr[3]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__0 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__0 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_DEC" *) 
module aurora_64b66b_w256_1375Gbps_SYM_DEC_23
   (rx_pe_data_v_i,
    illegal_btf_i,
    got_idles_i,
    RXDATAVALID_IN_REG_reg_0,
    \remote_rdy_cntr_reg[1]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    RX_HEADER_0_REG_reg_0,
    user_clk,
    rx_header_1_i_3,
    \RX_DATA_REG_reg[0]_0 ,
    Q,
    ILLEGAL_BTF_reg_0,
    rxdatavalid_to_lanes_i,
    \rx_na_idles_cntr_reg[0]_0 );
  output [0:0]rx_pe_data_v_i;
  output illegal_btf_i;
  output [0:0]got_idles_i;
  output RXDATAVALID_IN_REG_reg_0;
  output \remote_rdy_cntr_reg[1]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input RX_HEADER_0_REG_reg_0;
  input user_clk;
  input rx_header_1_i_3;
  input \RX_DATA_REG_reg[0]_0 ;
  input [63:0]Q;
  input ILLEGAL_BTF_reg_0;
  input rxdatavalid_to_lanes_i;
  input \rx_na_idles_cntr_reg[0]_0 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2_n_0;
  wire ILLEGAL_BTF_i_3_n_0;
  wire ILLEGAL_BTF_i_4_n_0;
  wire ILLEGAL_BTF_i_5_n_0;
  wire ILLEGAL_BTF_reg_0;
  wire [63:0]Q;
  wire RXDATAVALID_IN_REG_reg_0;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire RX_HEADER_0_REG_reg_0;
  wire RX_IDLE_i_2_n_0;
  wire RX_NA_IDLE_i_2_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]got_idles_i;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__0;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1_n_0 ;
  wire \remote_rdy_cntr[0]_i_3_n_0 ;
  wire \remote_rdy_cntr[0]_i_4_n_0 ;
  wire \remote_rdy_cntr[1]_i_1_n_0 ;
  wire \remote_rdy_cntr[2]_i_1_n_0 ;
  wire \remote_rdy_cntr_reg[1]_0 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire rx_header_1_i_3;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [0:0]rx_pe_data_v_i;
  wire [63:16]rxdata_s;
  wire rxdatavalid_to_lanes_i;
  wire [0:1]sync_header_c;
  wire user_clk;
  wire valid_d;

  LUT6 #(
    .INIT(64'hFFEF0000EEEB0000)) 
    ILLEGAL_BTF_i_1
       (.I0(ILLEGAL_BTF_i_2_n_0),
        .I1(p_0_in[6]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(ILLEGAL_BTF_i_3_n_0),
        .I5(p_0_in[5]),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    ILLEGAL_BTF_i_2
       (.I0(ILLEGAL_BTF_i_4_n_0),
        .I1(p_0_in[9]),
        .I2(p_0_in[8]),
        .I3(p_0_in[11]),
        .I4(p_0_in[10]),
        .I5(ILLEGAL_BTF_i_5_n_0),
        .O(ILLEGAL_BTF_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    ILLEGAL_BTF_i_3
       (.I0(RXDATAVALID_IN_REG_reg_0),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(ILLEGAL_BTF_i_3_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    ILLEGAL_BTF_i_4
       (.I0(p_0_in[13]),
        .I1(p_0_in[12]),
        .I2(p_0_in[14]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_5
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .O(ILLEGAL_BTF_i_5_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(ILLEGAL_BTF_reg_0));
  FDRE RXDATAVALID_IN_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxdatavalid_to_lanes_i),
        .Q(RXDATAVALID_IN_REG_reg_0),
        .R(1'b0));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RX_HEADER_0_REG_reg_0),
        .Q(sync_header_c[1]),
        .R(1'b0));
  FDRE RX_HEADER_1_REG_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_header_1_i_3),
        .Q(sync_header_c[0]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    RX_IDLE_i_1
       (.I0(RX_IDLE_i_2_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(sync_header_c[1]),
        .I4(sync_header_c[0]),
        .I5(ILLEGAL_BTF_i_2_n_0),
        .O(rx_idle_c));
  LUT2 #(
    .INIT(4'hE)) 
    RX_IDLE_i_2
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(RX_IDLE_i_2_n_0));
  FDRE RX_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(got_idles_i),
        .R(ILLEGAL_BTF_reg_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    RX_NA_IDLE_i_1
       (.I0(RX_NA_IDLE_i_2_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2_n_0),
        .O(rx_na_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT3 #(
    .INIT(8'h40)) 
    RX_NA_IDLE_i_2
       (.I0(sync_header_c[1]),
        .I1(sync_header_c[0]),
        .I2(RXDATAVALID_IN_REG_reg_0),
        .O(RX_NA_IDLE_i_2_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(ILLEGAL_BTF_reg_0));
  LUT3 #(
    .INIT(8'h40)) 
    \RX_PE_DATA[0]_i_1 
       (.I0(sync_header_c[0]),
        .I1(RXDATAVALID_IN_REG_reg_0),
        .I2(sync_header_c[1]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(valid_d),
        .Q(rx_pe_data_v_i),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(ILLEGAL_BTF_reg_0));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(valid_d),
        .D(rxdata_s[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(ILLEGAL_BTF_reg_0));
  LUT6 #(
    .INIT(64'h00004000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1 
       (.I0(\remote_rdy_cntr[0]_i_4_n_0 ),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[2]),
        .I3(remote_rdy_cntr[1]),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \remote_rdy_cntr[0]_i_2 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_ready_det),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \remote_rdy_cntr[0]_i_3 
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(\remote_rdy_cntr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3_n_0 ),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1_n_0 ),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(user_clk),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1_n_0 ),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    remote_ready_det_i_1
       (.I0(ILLEGAL_BTF_i_3_n_0),
        .I1(p_0_in[5]),
        .I2(p_0_in[4]),
        .I3(p_0_in[7]),
        .I4(p_0_in[6]),
        .I5(ILLEGAL_BTF_i_2_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(ILLEGAL_BTF_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    remote_ready_r_i_3
       (.I0(remote_rdy_cntr[1]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[0]),
        .O(\remote_rdy_cntr_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rx_na_idles_cntr[2]_i_1 
       (.I0(rx_na_idles_cntr_reg[1]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rx_na_idles_cntr[3]_i_1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(p_0_in__0[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(\rx_na_idles_cntr_reg[0]_0 ),
        .O(\rx_na_idles_cntr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(user_clk),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__0[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
endmodule

module aurora_64b66b_w256_1375Gbps_SYM_GEN
   (rst_pma_init_usrclk,
    TXHEADER_IN_LANE3,
    TXDATA_IN_LANE3,
    RESET,
    user_clk,
    txdatavalid_symgen_i_lane3,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[59]_0 ,
    D,
    \TX_DATA_reg[63]_0 ,
    Q,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output rst_pma_init_usrclk;
  output [1:0]TXHEADER_IN_LANE3;
  output [63:0]TXDATA_IN_LANE3;
  input RESET;
  input user_clk;
  input txdatavalid_symgen_i_lane3;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;
  input \TX_DATA_reg[59]_0 ;
  input [3:0]D;
  input \TX_DATA_reg[63]_0 ;
  input [55:0]Q;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire [55:0]Q;
  wire RESET;
  wire [63:0]TXDATA_IN_LANE3;
  wire [1:0]TXHEADER_IN_LANE3;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire \TX_DATA_reg[63]_0 ;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  wire txdatavalid_symgen_i_lane3;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[48]),
        .Q(TXDATA_IN_LANE3[0]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[42]),
        .Q(TXDATA_IN_LANE3[10]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[43]),
        .Q(TXDATA_IN_LANE3[11]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[44]),
        .Q(TXDATA_IN_LANE3[12]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[45]),
        .Q(TXDATA_IN_LANE3[13]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[46]),
        .Q(TXDATA_IN_LANE3[14]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[47]),
        .Q(TXDATA_IN_LANE3[15]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[32]),
        .Q(TXDATA_IN_LANE3[16]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[33]),
        .Q(TXDATA_IN_LANE3[17]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[34]),
        .Q(TXDATA_IN_LANE3[18]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[35]),
        .Q(TXDATA_IN_LANE3[19]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[49]),
        .Q(TXDATA_IN_LANE3[1]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[36]),
        .Q(TXDATA_IN_LANE3[20]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[37]),
        .Q(TXDATA_IN_LANE3[21]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[38]),
        .Q(TXDATA_IN_LANE3[22]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[39]),
        .Q(TXDATA_IN_LANE3[23]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[24]),
        .Q(TXDATA_IN_LANE3[24]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[25]),
        .Q(TXDATA_IN_LANE3[25]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[26]),
        .Q(TXDATA_IN_LANE3[26]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[27]),
        .Q(TXDATA_IN_LANE3[27]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[28]),
        .Q(TXDATA_IN_LANE3[28]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[29]),
        .Q(TXDATA_IN_LANE3[29]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[50]),
        .Q(TXDATA_IN_LANE3[2]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[30]),
        .Q(TXDATA_IN_LANE3[30]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[31]),
        .Q(TXDATA_IN_LANE3[31]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[16]),
        .Q(TXDATA_IN_LANE3[32]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[17]),
        .Q(TXDATA_IN_LANE3[33]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[18]),
        .Q(TXDATA_IN_LANE3[34]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[19]),
        .Q(TXDATA_IN_LANE3[35]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[20]),
        .Q(TXDATA_IN_LANE3[36]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[21]),
        .Q(TXDATA_IN_LANE3[37]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[22]),
        .Q(TXDATA_IN_LANE3[38]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[23]),
        .Q(TXDATA_IN_LANE3[39]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[51]),
        .Q(TXDATA_IN_LANE3[3]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[8]),
        .Q(TXDATA_IN_LANE3[40]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[9]),
        .Q(TXDATA_IN_LANE3[41]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[10]),
        .Q(TXDATA_IN_LANE3[42]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[11]),
        .Q(TXDATA_IN_LANE3[43]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[12]),
        .Q(TXDATA_IN_LANE3[44]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[13]),
        .Q(TXDATA_IN_LANE3[45]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[14]),
        .Q(TXDATA_IN_LANE3[46]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[15]),
        .Q(TXDATA_IN_LANE3[47]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[4]),
        .Q(TXDATA_IN_LANE3[48]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[5]),
        .Q(TXDATA_IN_LANE3[49]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[52]),
        .Q(TXDATA_IN_LANE3[4]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[6]),
        .Q(TXDATA_IN_LANE3[50]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[7]),
        .Q(TXDATA_IN_LANE3[51]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[0]),
        .Q(TXDATA_IN_LANE3[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[1]),
        .Q(TXDATA_IN_LANE3[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[2]),
        .Q(TXDATA_IN_LANE3[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[3]),
        .Q(TXDATA_IN_LANE3[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[0]),
        .Q(TXDATA_IN_LANE3[56]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[1]),
        .Q(TXDATA_IN_LANE3[57]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[2]),
        .Q(TXDATA_IN_LANE3[58]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(TXDATA_IN_LANE3[59]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[53]),
        .Q(TXDATA_IN_LANE3[5]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(TXDATA_IN_LANE3[60]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(TXDATA_IN_LANE3[61]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(TXDATA_IN_LANE3[62]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[3]),
        .Q(TXDATA_IN_LANE3[63]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[54]),
        .Q(TXDATA_IN_LANE3[6]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[55]),
        .Q(TXDATA_IN_LANE3[7]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[40]),
        .Q(TXDATA_IN_LANE3[8]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[41]),
        .Q(TXDATA_IN_LANE3[9]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(TXHEADER_IN_LANE3[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_2),
        .Q(TXHEADER_IN_LANE3[1]),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_rst_sync_8 u_pma_init_data_sync
       (.GEN_CH_BOND(GEN_CH_BOND),
        .RESET(RESET),
        .TXHEADER_IN_LANE3(TXHEADER_IN_LANE3),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_2),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg5_reg_0(u_pma_init_data_sync_n_1),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_GEN" *) 
module aurora_64b66b_w256_1375Gbps_SYM_GEN_12
   (rst_pma_init_usrclk,
    TXHEADER_IN_LANE2,
    TXDATA_IN_LANE2,
    RESET,
    user_clk,
    txdatavalid_symgen_i_lane2,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[59]_0 ,
    D,
    \TX_DATA_reg[63]_0 ,
    Q,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output rst_pma_init_usrclk;
  output [1:0]TXHEADER_IN_LANE2;
  output [63:0]TXDATA_IN_LANE2;
  input RESET;
  input user_clk;
  input txdatavalid_symgen_i_lane2;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;
  input \TX_DATA_reg[59]_0 ;
  input [3:0]D;
  input \TX_DATA_reg[63]_0 ;
  input [55:0]Q;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire [55:0]Q;
  wire RESET;
  wire [63:0]TXDATA_IN_LANE2;
  wire [1:0]TXHEADER_IN_LANE2;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire \TX_DATA_reg[63]_0 ;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  wire txdatavalid_symgen_i_lane2;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[48]),
        .Q(TXDATA_IN_LANE2[0]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[42]),
        .Q(TXDATA_IN_LANE2[10]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[43]),
        .Q(TXDATA_IN_LANE2[11]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[44]),
        .Q(TXDATA_IN_LANE2[12]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[45]),
        .Q(TXDATA_IN_LANE2[13]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[46]),
        .Q(TXDATA_IN_LANE2[14]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[47]),
        .Q(TXDATA_IN_LANE2[15]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[32]),
        .Q(TXDATA_IN_LANE2[16]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[33]),
        .Q(TXDATA_IN_LANE2[17]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[34]),
        .Q(TXDATA_IN_LANE2[18]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[35]),
        .Q(TXDATA_IN_LANE2[19]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[49]),
        .Q(TXDATA_IN_LANE2[1]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[36]),
        .Q(TXDATA_IN_LANE2[20]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[37]),
        .Q(TXDATA_IN_LANE2[21]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[38]),
        .Q(TXDATA_IN_LANE2[22]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[39]),
        .Q(TXDATA_IN_LANE2[23]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[24]),
        .Q(TXDATA_IN_LANE2[24]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[25]),
        .Q(TXDATA_IN_LANE2[25]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[26]),
        .Q(TXDATA_IN_LANE2[26]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[27]),
        .Q(TXDATA_IN_LANE2[27]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[28]),
        .Q(TXDATA_IN_LANE2[28]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[29]),
        .Q(TXDATA_IN_LANE2[29]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[50]),
        .Q(TXDATA_IN_LANE2[2]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[30]),
        .Q(TXDATA_IN_LANE2[30]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[31]),
        .Q(TXDATA_IN_LANE2[31]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[16]),
        .Q(TXDATA_IN_LANE2[32]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[17]),
        .Q(TXDATA_IN_LANE2[33]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[18]),
        .Q(TXDATA_IN_LANE2[34]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[19]),
        .Q(TXDATA_IN_LANE2[35]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[20]),
        .Q(TXDATA_IN_LANE2[36]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[21]),
        .Q(TXDATA_IN_LANE2[37]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[22]),
        .Q(TXDATA_IN_LANE2[38]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[23]),
        .Q(TXDATA_IN_LANE2[39]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[51]),
        .Q(TXDATA_IN_LANE2[3]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[8]),
        .Q(TXDATA_IN_LANE2[40]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[9]),
        .Q(TXDATA_IN_LANE2[41]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[10]),
        .Q(TXDATA_IN_LANE2[42]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[11]),
        .Q(TXDATA_IN_LANE2[43]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[12]),
        .Q(TXDATA_IN_LANE2[44]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[13]),
        .Q(TXDATA_IN_LANE2[45]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[14]),
        .Q(TXDATA_IN_LANE2[46]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[15]),
        .Q(TXDATA_IN_LANE2[47]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[4]),
        .Q(TXDATA_IN_LANE2[48]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[5]),
        .Q(TXDATA_IN_LANE2[49]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[52]),
        .Q(TXDATA_IN_LANE2[4]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[6]),
        .Q(TXDATA_IN_LANE2[50]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[7]),
        .Q(TXDATA_IN_LANE2[51]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[0]),
        .Q(TXDATA_IN_LANE2[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[1]),
        .Q(TXDATA_IN_LANE2[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[2]),
        .Q(TXDATA_IN_LANE2[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[3]),
        .Q(TXDATA_IN_LANE2[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[0]),
        .Q(TXDATA_IN_LANE2[56]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[1]),
        .Q(TXDATA_IN_LANE2[57]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[2]),
        .Q(TXDATA_IN_LANE2[58]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(TXDATA_IN_LANE2[59]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[53]),
        .Q(TXDATA_IN_LANE2[5]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(TXDATA_IN_LANE2[60]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(TXDATA_IN_LANE2[61]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(TXDATA_IN_LANE2[62]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[3]),
        .Q(TXDATA_IN_LANE2[63]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[54]),
        .Q(TXDATA_IN_LANE2[6]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[55]),
        .Q(TXDATA_IN_LANE2[7]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[40]),
        .Q(TXDATA_IN_LANE2[8]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[41]),
        .Q(TXDATA_IN_LANE2[9]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(TXHEADER_IN_LANE2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_2),
        .Q(TXHEADER_IN_LANE2[1]),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_rst_sync_13 u_pma_init_data_sync
       (.GEN_CH_BOND(GEN_CH_BOND),
        .RESET(RESET),
        .TXHEADER_IN_LANE2(TXHEADER_IN_LANE2),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_2),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg5_reg_0(u_pma_init_data_sync_n_1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_GEN" *) 
module aurora_64b66b_w256_1375Gbps_SYM_GEN_18
   (rst_pma_init_usrclk,
    TXHEADER_IN_LANE1,
    TXDATA_IN_LANE1,
    RESET,
    user_clk,
    txdatavalid_symgen_i_lane1,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[59]_0 ,
    D,
    \TX_DATA_reg[63]_0 ,
    Q,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output rst_pma_init_usrclk;
  output [1:0]TXHEADER_IN_LANE1;
  output [63:0]TXDATA_IN_LANE1;
  input RESET;
  input user_clk;
  input txdatavalid_symgen_i_lane1;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;
  input \TX_DATA_reg[59]_0 ;
  input [3:0]D;
  input \TX_DATA_reg[63]_0 ;
  input [55:0]Q;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire [55:0]Q;
  wire RESET;
  wire [63:0]TXDATA_IN_LANE1;
  wire [1:0]TXHEADER_IN_LANE1;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire \TX_DATA_reg[63]_0 ;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  wire txdatavalid_symgen_i_lane1;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[48]),
        .Q(TXDATA_IN_LANE1[0]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[42]),
        .Q(TXDATA_IN_LANE1[10]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[43]),
        .Q(TXDATA_IN_LANE1[11]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[44]),
        .Q(TXDATA_IN_LANE1[12]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[45]),
        .Q(TXDATA_IN_LANE1[13]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[46]),
        .Q(TXDATA_IN_LANE1[14]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[47]),
        .Q(TXDATA_IN_LANE1[15]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[32]),
        .Q(TXDATA_IN_LANE1[16]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[33]),
        .Q(TXDATA_IN_LANE1[17]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[34]),
        .Q(TXDATA_IN_LANE1[18]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[35]),
        .Q(TXDATA_IN_LANE1[19]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[49]),
        .Q(TXDATA_IN_LANE1[1]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[36]),
        .Q(TXDATA_IN_LANE1[20]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[37]),
        .Q(TXDATA_IN_LANE1[21]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[38]),
        .Q(TXDATA_IN_LANE1[22]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[39]),
        .Q(TXDATA_IN_LANE1[23]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[24]),
        .Q(TXDATA_IN_LANE1[24]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[25]),
        .Q(TXDATA_IN_LANE1[25]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[26]),
        .Q(TXDATA_IN_LANE1[26]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[27]),
        .Q(TXDATA_IN_LANE1[27]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[28]),
        .Q(TXDATA_IN_LANE1[28]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[29]),
        .Q(TXDATA_IN_LANE1[29]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[50]),
        .Q(TXDATA_IN_LANE1[2]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[30]),
        .Q(TXDATA_IN_LANE1[30]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[31]),
        .Q(TXDATA_IN_LANE1[31]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[16]),
        .Q(TXDATA_IN_LANE1[32]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[17]),
        .Q(TXDATA_IN_LANE1[33]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[18]),
        .Q(TXDATA_IN_LANE1[34]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[19]),
        .Q(TXDATA_IN_LANE1[35]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[20]),
        .Q(TXDATA_IN_LANE1[36]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[21]),
        .Q(TXDATA_IN_LANE1[37]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[22]),
        .Q(TXDATA_IN_LANE1[38]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[23]),
        .Q(TXDATA_IN_LANE1[39]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[51]),
        .Q(TXDATA_IN_LANE1[3]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[8]),
        .Q(TXDATA_IN_LANE1[40]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[9]),
        .Q(TXDATA_IN_LANE1[41]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[10]),
        .Q(TXDATA_IN_LANE1[42]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[11]),
        .Q(TXDATA_IN_LANE1[43]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[12]),
        .Q(TXDATA_IN_LANE1[44]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[13]),
        .Q(TXDATA_IN_LANE1[45]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[14]),
        .Q(TXDATA_IN_LANE1[46]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[15]),
        .Q(TXDATA_IN_LANE1[47]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[4]),
        .Q(TXDATA_IN_LANE1[48]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[5]),
        .Q(TXDATA_IN_LANE1[49]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[52]),
        .Q(TXDATA_IN_LANE1[4]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[6]),
        .Q(TXDATA_IN_LANE1[50]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[7]),
        .Q(TXDATA_IN_LANE1[51]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[0]),
        .Q(TXDATA_IN_LANE1[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[1]),
        .Q(TXDATA_IN_LANE1[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[2]),
        .Q(TXDATA_IN_LANE1[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[3]),
        .Q(TXDATA_IN_LANE1[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[0]),
        .Q(TXDATA_IN_LANE1[56]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[1]),
        .Q(TXDATA_IN_LANE1[57]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[2]),
        .Q(TXDATA_IN_LANE1[58]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(TXDATA_IN_LANE1[59]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[53]),
        .Q(TXDATA_IN_LANE1[5]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(TXDATA_IN_LANE1[60]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(TXDATA_IN_LANE1[61]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(TXDATA_IN_LANE1[62]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[3]),
        .Q(TXDATA_IN_LANE1[63]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[54]),
        .Q(TXDATA_IN_LANE1[6]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[55]),
        .Q(TXDATA_IN_LANE1[7]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[40]),
        .Q(TXDATA_IN_LANE1[8]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(Q[41]),
        .Q(TXDATA_IN_LANE1[9]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(TXHEADER_IN_LANE1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_2),
        .Q(TXHEADER_IN_LANE1[1]),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_rst_sync_19 u_pma_init_data_sync
       (.GEN_CH_BOND(GEN_CH_BOND),
        .RESET(RESET),
        .TXHEADER_IN_LANE1(TXHEADER_IN_LANE1),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_2),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg5_reg_0(u_pma_init_data_sync_n_1),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .user_clk(user_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_SYM_GEN" *) 
module aurora_64b66b_w256_1375Gbps_SYM_GEN_24
   (rst_pma_init_usrclk,
    TXHEADER_IN,
    TXDATA_IN,
    RESET,
    user_clk,
    txdatavalid_symgen_i,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[59]_0 ,
    D,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output rst_pma_init_usrclk;
  output [1:0]TXHEADER_IN;
  output [63:0]TXDATA_IN;
  input RESET;
  input user_clk;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;
  input \TX_DATA_reg[59]_0 ;
  input [3:0]D;
  input \TX_DATA_reg[63]_0 ;
  input [55:0]\TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [3:0]D;
  wire [0:0]GEN_CH_BOND;
  wire RESET;
  wire [63:0]TXDATA_IN;
  wire [1:0]TXHEADER_IN;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire \TX_DATA_reg[63]_0 ;
  wire [55:0]\TX_DATA_reg[7]_0 ;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  wire txdatavalid_symgen_i;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [48]),
        .Q(TXDATA_IN[0]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [42]),
        .Q(TXDATA_IN[10]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [43]),
        .Q(TXDATA_IN[11]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [44]),
        .Q(TXDATA_IN[12]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [45]),
        .Q(TXDATA_IN[13]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [46]),
        .Q(TXDATA_IN[14]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [47]),
        .Q(TXDATA_IN[15]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [32]),
        .Q(TXDATA_IN[16]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [33]),
        .Q(TXDATA_IN[17]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [34]),
        .Q(TXDATA_IN[18]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [35]),
        .Q(TXDATA_IN[19]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [49]),
        .Q(TXDATA_IN[1]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [36]),
        .Q(TXDATA_IN[20]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [37]),
        .Q(TXDATA_IN[21]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [38]),
        .Q(TXDATA_IN[22]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [39]),
        .Q(TXDATA_IN[23]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [24]),
        .Q(TXDATA_IN[24]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [25]),
        .Q(TXDATA_IN[25]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [26]),
        .Q(TXDATA_IN[26]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [27]),
        .Q(TXDATA_IN[27]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [28]),
        .Q(TXDATA_IN[28]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [29]),
        .Q(TXDATA_IN[29]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [50]),
        .Q(TXDATA_IN[2]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [30]),
        .Q(TXDATA_IN[30]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [31]),
        .Q(TXDATA_IN[31]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [16]),
        .Q(TXDATA_IN[32]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [17]),
        .Q(TXDATA_IN[33]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [18]),
        .Q(TXDATA_IN[34]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [19]),
        .Q(TXDATA_IN[35]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [20]),
        .Q(TXDATA_IN[36]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [21]),
        .Q(TXDATA_IN[37]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [22]),
        .Q(TXDATA_IN[38]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [23]),
        .Q(TXDATA_IN[39]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [51]),
        .Q(TXDATA_IN[3]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [8]),
        .Q(TXDATA_IN[40]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [9]),
        .Q(TXDATA_IN[41]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [10]),
        .Q(TXDATA_IN[42]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [11]),
        .Q(TXDATA_IN[43]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [12]),
        .Q(TXDATA_IN[44]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [13]),
        .Q(TXDATA_IN[45]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [14]),
        .Q(TXDATA_IN[46]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [15]),
        .Q(TXDATA_IN[47]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [4]),
        .Q(TXDATA_IN[48]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [5]),
        .Q(TXDATA_IN[49]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [52]),
        .Q(TXDATA_IN[4]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [6]),
        .Q(TXDATA_IN[50]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [7]),
        .Q(TXDATA_IN[51]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[0]),
        .Q(TXDATA_IN[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[1]),
        .Q(TXDATA_IN[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[2]),
        .Q(TXDATA_IN[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(D[3]),
        .Q(TXDATA_IN[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [0]),
        .Q(TXDATA_IN[56]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [1]),
        .Q(TXDATA_IN[57]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [2]),
        .Q(TXDATA_IN[58]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(TXDATA_IN[59]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [53]),
        .Q(TXDATA_IN[5]),
        .R(\TX_DATA_reg[63]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(TXDATA_IN[60]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(TXDATA_IN[61]),
        .S(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(TXDATA_IN[62]),
        .S(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [3]),
        .Q(TXDATA_IN[63]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [54]),
        .Q(TXDATA_IN[6]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [55]),
        .Q(TXDATA_IN[7]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [40]),
        .Q(TXDATA_IN[8]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(user_clk),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 [41]),
        .Q(TXDATA_IN[9]),
        .R(\TX_DATA_reg[63]_0 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(TXHEADER_IN[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_2),
        .Q(TXHEADER_IN[1]),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_rst_sync_25 u_pma_init_data_sync
       (.GEN_CH_BOND(GEN_CH_BOND),
        .RESET(RESET),
        .TXHEADER_IN(TXHEADER_IN),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_2),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .stg5_reg_0(u_pma_init_data_sync_n_1),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_TX_STREAM
   (gen_cc_i,
    tx_pe_data_v_i,
    s_axi_tx_tready,
    extend_cc_r,
    \TX_PE_DATA_reg[0] ,
    R0,
    user_clk,
    do_cc_r0,
    Q,
    TXDATAVALID_IN,
    s_axi_tx_tvalid,
    s_axi_tx_tdata);
  output [0:3]gen_cc_i;
  output [0:0]tx_pe_data_v_i;
  output s_axi_tx_tready;
  output extend_cc_r;
  output [255:0]\TX_PE_DATA_reg[0] ;
  input R0;
  input user_clk;
  input do_cc_r0;
  input Q;
  input TXDATAVALID_IN;
  input s_axi_tx_tvalid;
  input [0:255]s_axi_tx_tdata;

  wire Q;
  wire R0;
  wire TXDATAVALID_IN;
  wire [255:0]\TX_PE_DATA_reg[0] ;
  wire do_cc_r0;
  wire extend_cc_r;
  wire [0:3]gen_cc_i;
  wire ll_valid_c;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [0:0]tx_pe_data_v_i;
  wire user_clk;

  aurora_64b66b_w256_1375Gbps_TX_STREAM_CONTROL_SM tx_stream_control_sm_i
       (.Q(Q),
        .R0(R0),
        .TXDATAVALID_IN(TXDATAVALID_IN),
        .do_cc_r0(do_cc_r0),
        .extend_cc_r(extend_cc_r),
        .gen_cc_i(gen_cc_i),
        .ll_valid_c(ll_valid_c),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_TX_STREAM_DATAPATH tx_stream_datapath_i
       (.\TX_PE_DATA_reg[0]_0 (\TX_PE_DATA_reg[0] ),
        .ll_valid_c(ll_valid_c),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .user_clk(user_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_TX_STREAM_CONTROL_SM
   (gen_cc_i,
    s_axi_tx_tready,
    extend_cc_r,
    ll_valid_c,
    R0,
    user_clk,
    do_cc_r0,
    Q,
    TXDATAVALID_IN,
    s_axi_tx_tvalid);
  output [0:3]gen_cc_i;
  output s_axi_tx_tready;
  output extend_cc_r;
  output ll_valid_c;
  input R0;
  input user_clk;
  input do_cc_r0;
  input Q;
  input TXDATAVALID_IN;
  input s_axi_tx_tvalid;

  wire Q;
  wire R0;
  wire TXDATAVALID_IN;
  wire do_cc_r;
  wire do_cc_r0;
  wire do_cc_r2;
  wire extend_cc_r;
  wire extend_cc_r_i_1_n_0;
  wire [0:3]gen_cc_i;
  wire ll_valid_c;
  wire pdu_ok_c__0;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire user_clk;

  FDRE #(
    .INIT(1'b0)) 
    do_cc_r2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r),
        .Q(do_cc_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    do_cc_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r0),
        .Q(do_cc_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB0)) 
    extend_cc_r_i_1
       (.I0(extend_cc_r),
        .I1(TXDATAVALID_IN),
        .I2(Q),
        .O(extend_cc_r_i_1_n_0));
  FDRE extend_cc_r_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(extend_cc_r_i_1_n_0),
        .Q(extend_cc_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[0].gen_cc_flop 
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[0]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[1].gen_cc_flop 
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[1]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[2].gen_cc_flop 
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[2]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* XILINX_TRANSFORM_PINMAP = "VCC:CE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[3].gen_cc_flop 
       (.C(user_clk),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[3]),
        .R(R0));
  LUT3 #(
    .INIT(8'h10)) 
    pdu_ok_c
       (.I0(Q),
        .I1(do_cc_r),
        .I2(TXDATAVALID_IN),
        .O(pdu_ok_c__0));
  FDRE s_axi_tx_tready_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(pdu_ok_c__0),
        .Q(s_axi_tx_tready),
        .R(R0));
  LUT2 #(
    .INIT(4'h8)) 
    \tx_pe_data_v_d[0]_i_1 
       (.I0(s_axi_tx_tvalid),
        .I1(s_axi_tx_tready),
        .O(ll_valid_c));
endmodule

module aurora_64b66b_w256_1375Gbps_TX_STREAM_DATAPATH
   (tx_pe_data_v_i,
    \TX_PE_DATA_reg[0]_0 ,
    ll_valid_c,
    user_clk,
    s_axi_tx_tdata);
  output [0:0]tx_pe_data_v_i;
  output [255:0]\TX_PE_DATA_reg[0]_0 ;
  input ll_valid_c;
  input user_clk;
  input [0:255]s_axi_tx_tdata;

  wire [255:0]\TX_PE_DATA_reg[0]_0 ;
  wire ll_valid_c;
  wire [0:255]s_axi_tx_tdata;
  wire [0:255]tx_pe_data_d;
  wire [0:0]tx_pe_data_v_d;
  wire [0:0]tx_pe_data_v_i;
  wire user_clk;

  FDRE \TX_PE_DATA_V_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_v_d),
        .Q(tx_pe_data_v_i),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[0]),
        .Q(\TX_PE_DATA_reg[0]_0 [255]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[100] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[100]),
        .Q(\TX_PE_DATA_reg[0]_0 [155]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[101] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[101]),
        .Q(\TX_PE_DATA_reg[0]_0 [154]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[102] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[102]),
        .Q(\TX_PE_DATA_reg[0]_0 [153]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[103] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[103]),
        .Q(\TX_PE_DATA_reg[0]_0 [152]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[104] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[104]),
        .Q(\TX_PE_DATA_reg[0]_0 [151]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[105] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[105]),
        .Q(\TX_PE_DATA_reg[0]_0 [150]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[106] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[106]),
        .Q(\TX_PE_DATA_reg[0]_0 [149]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[107] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[107]),
        .Q(\TX_PE_DATA_reg[0]_0 [148]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[108] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[108]),
        .Q(\TX_PE_DATA_reg[0]_0 [147]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[109] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[109]),
        .Q(\TX_PE_DATA_reg[0]_0 [146]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[10]),
        .Q(\TX_PE_DATA_reg[0]_0 [245]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[110] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[110]),
        .Q(\TX_PE_DATA_reg[0]_0 [145]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[111] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[111]),
        .Q(\TX_PE_DATA_reg[0]_0 [144]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[112] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[112]),
        .Q(\TX_PE_DATA_reg[0]_0 [143]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[113] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[113]),
        .Q(\TX_PE_DATA_reg[0]_0 [142]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[114] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[114]),
        .Q(\TX_PE_DATA_reg[0]_0 [141]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[115] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[115]),
        .Q(\TX_PE_DATA_reg[0]_0 [140]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[116] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[116]),
        .Q(\TX_PE_DATA_reg[0]_0 [139]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[117] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[117]),
        .Q(\TX_PE_DATA_reg[0]_0 [138]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[118] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[118]),
        .Q(\TX_PE_DATA_reg[0]_0 [137]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[119] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[119]),
        .Q(\TX_PE_DATA_reg[0]_0 [136]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[11]),
        .Q(\TX_PE_DATA_reg[0]_0 [244]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[120] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[120]),
        .Q(\TX_PE_DATA_reg[0]_0 [135]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[121] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[121]),
        .Q(\TX_PE_DATA_reg[0]_0 [134]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[122] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[122]),
        .Q(\TX_PE_DATA_reg[0]_0 [133]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[123] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[123]),
        .Q(\TX_PE_DATA_reg[0]_0 [132]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[124] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[124]),
        .Q(\TX_PE_DATA_reg[0]_0 [131]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[125] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[125]),
        .Q(\TX_PE_DATA_reg[0]_0 [130]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[126] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[126]),
        .Q(\TX_PE_DATA_reg[0]_0 [129]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[127] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[127]),
        .Q(\TX_PE_DATA_reg[0]_0 [128]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[128] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[128]),
        .Q(\TX_PE_DATA_reg[0]_0 [127]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[129] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[129]),
        .Q(\TX_PE_DATA_reg[0]_0 [126]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[12]),
        .Q(\TX_PE_DATA_reg[0]_0 [243]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[130] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[130]),
        .Q(\TX_PE_DATA_reg[0]_0 [125]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[131] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[131]),
        .Q(\TX_PE_DATA_reg[0]_0 [124]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[132] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[132]),
        .Q(\TX_PE_DATA_reg[0]_0 [123]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[133] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[133]),
        .Q(\TX_PE_DATA_reg[0]_0 [122]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[134] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[134]),
        .Q(\TX_PE_DATA_reg[0]_0 [121]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[135] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[135]),
        .Q(\TX_PE_DATA_reg[0]_0 [120]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[136] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[136]),
        .Q(\TX_PE_DATA_reg[0]_0 [119]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[137] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[137]),
        .Q(\TX_PE_DATA_reg[0]_0 [118]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[138] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[138]),
        .Q(\TX_PE_DATA_reg[0]_0 [117]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[139] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[139]),
        .Q(\TX_PE_DATA_reg[0]_0 [116]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[13]),
        .Q(\TX_PE_DATA_reg[0]_0 [242]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[140] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[140]),
        .Q(\TX_PE_DATA_reg[0]_0 [115]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[141] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[141]),
        .Q(\TX_PE_DATA_reg[0]_0 [114]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[142] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[142]),
        .Q(\TX_PE_DATA_reg[0]_0 [113]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[143] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[143]),
        .Q(\TX_PE_DATA_reg[0]_0 [112]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[144] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[144]),
        .Q(\TX_PE_DATA_reg[0]_0 [111]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[145] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[145]),
        .Q(\TX_PE_DATA_reg[0]_0 [110]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[146] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[146]),
        .Q(\TX_PE_DATA_reg[0]_0 [109]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[147] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[147]),
        .Q(\TX_PE_DATA_reg[0]_0 [108]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[148] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[148]),
        .Q(\TX_PE_DATA_reg[0]_0 [107]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[149] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[149]),
        .Q(\TX_PE_DATA_reg[0]_0 [106]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[14]),
        .Q(\TX_PE_DATA_reg[0]_0 [241]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[150] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[150]),
        .Q(\TX_PE_DATA_reg[0]_0 [105]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[151] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[151]),
        .Q(\TX_PE_DATA_reg[0]_0 [104]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[152] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[152]),
        .Q(\TX_PE_DATA_reg[0]_0 [103]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[153] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[153]),
        .Q(\TX_PE_DATA_reg[0]_0 [102]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[154] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[154]),
        .Q(\TX_PE_DATA_reg[0]_0 [101]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[155] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[155]),
        .Q(\TX_PE_DATA_reg[0]_0 [100]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[156] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[156]),
        .Q(\TX_PE_DATA_reg[0]_0 [99]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[157] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[157]),
        .Q(\TX_PE_DATA_reg[0]_0 [98]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[158] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[158]),
        .Q(\TX_PE_DATA_reg[0]_0 [97]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[159] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[159]),
        .Q(\TX_PE_DATA_reg[0]_0 [96]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[15]),
        .Q(\TX_PE_DATA_reg[0]_0 [240]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[160] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[160]),
        .Q(\TX_PE_DATA_reg[0]_0 [95]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[161] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[161]),
        .Q(\TX_PE_DATA_reg[0]_0 [94]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[162] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[162]),
        .Q(\TX_PE_DATA_reg[0]_0 [93]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[163] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[163]),
        .Q(\TX_PE_DATA_reg[0]_0 [92]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[164] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[164]),
        .Q(\TX_PE_DATA_reg[0]_0 [91]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[165] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[165]),
        .Q(\TX_PE_DATA_reg[0]_0 [90]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[166] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[166]),
        .Q(\TX_PE_DATA_reg[0]_0 [89]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[167] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[167]),
        .Q(\TX_PE_DATA_reg[0]_0 [88]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[168] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[168]),
        .Q(\TX_PE_DATA_reg[0]_0 [87]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[169] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[169]),
        .Q(\TX_PE_DATA_reg[0]_0 [86]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[16]),
        .Q(\TX_PE_DATA_reg[0]_0 [239]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[170] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[170]),
        .Q(\TX_PE_DATA_reg[0]_0 [85]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[171] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[171]),
        .Q(\TX_PE_DATA_reg[0]_0 [84]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[172] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[172]),
        .Q(\TX_PE_DATA_reg[0]_0 [83]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[173] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[173]),
        .Q(\TX_PE_DATA_reg[0]_0 [82]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[174] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[174]),
        .Q(\TX_PE_DATA_reg[0]_0 [81]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[175] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[175]),
        .Q(\TX_PE_DATA_reg[0]_0 [80]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[176] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[176]),
        .Q(\TX_PE_DATA_reg[0]_0 [79]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[177] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[177]),
        .Q(\TX_PE_DATA_reg[0]_0 [78]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[178] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[178]),
        .Q(\TX_PE_DATA_reg[0]_0 [77]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[179] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[179]),
        .Q(\TX_PE_DATA_reg[0]_0 [76]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[17]),
        .Q(\TX_PE_DATA_reg[0]_0 [238]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[180] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[180]),
        .Q(\TX_PE_DATA_reg[0]_0 [75]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[181] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[181]),
        .Q(\TX_PE_DATA_reg[0]_0 [74]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[182] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[182]),
        .Q(\TX_PE_DATA_reg[0]_0 [73]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[183] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[183]),
        .Q(\TX_PE_DATA_reg[0]_0 [72]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[184] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[184]),
        .Q(\TX_PE_DATA_reg[0]_0 [71]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[185] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[185]),
        .Q(\TX_PE_DATA_reg[0]_0 [70]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[186] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[186]),
        .Q(\TX_PE_DATA_reg[0]_0 [69]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[187] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[187]),
        .Q(\TX_PE_DATA_reg[0]_0 [68]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[188] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[188]),
        .Q(\TX_PE_DATA_reg[0]_0 [67]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[189] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[189]),
        .Q(\TX_PE_DATA_reg[0]_0 [66]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[18]),
        .Q(\TX_PE_DATA_reg[0]_0 [237]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[190] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[190]),
        .Q(\TX_PE_DATA_reg[0]_0 [65]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[191] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[191]),
        .Q(\TX_PE_DATA_reg[0]_0 [64]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[192] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[192]),
        .Q(\TX_PE_DATA_reg[0]_0 [63]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[193] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[193]),
        .Q(\TX_PE_DATA_reg[0]_0 [62]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[194] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[194]),
        .Q(\TX_PE_DATA_reg[0]_0 [61]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[195] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[195]),
        .Q(\TX_PE_DATA_reg[0]_0 [60]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[196] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[196]),
        .Q(\TX_PE_DATA_reg[0]_0 [59]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[197] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[197]),
        .Q(\TX_PE_DATA_reg[0]_0 [58]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[198] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[198]),
        .Q(\TX_PE_DATA_reg[0]_0 [57]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[199] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[199]),
        .Q(\TX_PE_DATA_reg[0]_0 [56]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[19]),
        .Q(\TX_PE_DATA_reg[0]_0 [236]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[1]),
        .Q(\TX_PE_DATA_reg[0]_0 [254]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[200] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[200]),
        .Q(\TX_PE_DATA_reg[0]_0 [55]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[201] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[201]),
        .Q(\TX_PE_DATA_reg[0]_0 [54]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[202] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[202]),
        .Q(\TX_PE_DATA_reg[0]_0 [53]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[203] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[203]),
        .Q(\TX_PE_DATA_reg[0]_0 [52]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[204] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[204]),
        .Q(\TX_PE_DATA_reg[0]_0 [51]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[205] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[205]),
        .Q(\TX_PE_DATA_reg[0]_0 [50]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[206] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[206]),
        .Q(\TX_PE_DATA_reg[0]_0 [49]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[207] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[207]),
        .Q(\TX_PE_DATA_reg[0]_0 [48]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[208] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[208]),
        .Q(\TX_PE_DATA_reg[0]_0 [47]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[209] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[209]),
        .Q(\TX_PE_DATA_reg[0]_0 [46]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[20]),
        .Q(\TX_PE_DATA_reg[0]_0 [235]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[210] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[210]),
        .Q(\TX_PE_DATA_reg[0]_0 [45]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[211] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[211]),
        .Q(\TX_PE_DATA_reg[0]_0 [44]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[212] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[212]),
        .Q(\TX_PE_DATA_reg[0]_0 [43]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[213] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[213]),
        .Q(\TX_PE_DATA_reg[0]_0 [42]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[214] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[214]),
        .Q(\TX_PE_DATA_reg[0]_0 [41]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[215] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[215]),
        .Q(\TX_PE_DATA_reg[0]_0 [40]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[216] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[216]),
        .Q(\TX_PE_DATA_reg[0]_0 [39]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[217] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[217]),
        .Q(\TX_PE_DATA_reg[0]_0 [38]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[218] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[218]),
        .Q(\TX_PE_DATA_reg[0]_0 [37]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[219] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[219]),
        .Q(\TX_PE_DATA_reg[0]_0 [36]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[21]),
        .Q(\TX_PE_DATA_reg[0]_0 [234]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[220] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[220]),
        .Q(\TX_PE_DATA_reg[0]_0 [35]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[221] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[221]),
        .Q(\TX_PE_DATA_reg[0]_0 [34]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[222] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[222]),
        .Q(\TX_PE_DATA_reg[0]_0 [33]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[223] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[223]),
        .Q(\TX_PE_DATA_reg[0]_0 [32]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[224] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[224]),
        .Q(\TX_PE_DATA_reg[0]_0 [31]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[225] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[225]),
        .Q(\TX_PE_DATA_reg[0]_0 [30]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[226] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[226]),
        .Q(\TX_PE_DATA_reg[0]_0 [29]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[227] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[227]),
        .Q(\TX_PE_DATA_reg[0]_0 [28]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[228] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[228]),
        .Q(\TX_PE_DATA_reg[0]_0 [27]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[229] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[229]),
        .Q(\TX_PE_DATA_reg[0]_0 [26]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[22]),
        .Q(\TX_PE_DATA_reg[0]_0 [233]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[230] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[230]),
        .Q(\TX_PE_DATA_reg[0]_0 [25]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[231] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[231]),
        .Q(\TX_PE_DATA_reg[0]_0 [24]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[232] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[232]),
        .Q(\TX_PE_DATA_reg[0]_0 [23]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[233] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[233]),
        .Q(\TX_PE_DATA_reg[0]_0 [22]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[234] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[234]),
        .Q(\TX_PE_DATA_reg[0]_0 [21]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[235] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[235]),
        .Q(\TX_PE_DATA_reg[0]_0 [20]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[236] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[236]),
        .Q(\TX_PE_DATA_reg[0]_0 [19]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[237] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[237]),
        .Q(\TX_PE_DATA_reg[0]_0 [18]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[238] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[238]),
        .Q(\TX_PE_DATA_reg[0]_0 [17]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[239] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[239]),
        .Q(\TX_PE_DATA_reg[0]_0 [16]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[23]),
        .Q(\TX_PE_DATA_reg[0]_0 [232]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[240] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[240]),
        .Q(\TX_PE_DATA_reg[0]_0 [15]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[241] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[241]),
        .Q(\TX_PE_DATA_reg[0]_0 [14]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[242] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[242]),
        .Q(\TX_PE_DATA_reg[0]_0 [13]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[243] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[243]),
        .Q(\TX_PE_DATA_reg[0]_0 [12]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[244] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[244]),
        .Q(\TX_PE_DATA_reg[0]_0 [11]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[245] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[245]),
        .Q(\TX_PE_DATA_reg[0]_0 [10]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[246] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[246]),
        .Q(\TX_PE_DATA_reg[0]_0 [9]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[247] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[247]),
        .Q(\TX_PE_DATA_reg[0]_0 [8]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[248] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[248]),
        .Q(\TX_PE_DATA_reg[0]_0 [7]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[249] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[249]),
        .Q(\TX_PE_DATA_reg[0]_0 [6]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[24]),
        .Q(\TX_PE_DATA_reg[0]_0 [231]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[250] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[250]),
        .Q(\TX_PE_DATA_reg[0]_0 [5]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[251] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[251]),
        .Q(\TX_PE_DATA_reg[0]_0 [4]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[252] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[252]),
        .Q(\TX_PE_DATA_reg[0]_0 [3]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[253] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[253]),
        .Q(\TX_PE_DATA_reg[0]_0 [2]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[254] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[254]),
        .Q(\TX_PE_DATA_reg[0]_0 [1]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[255] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[255]),
        .Q(\TX_PE_DATA_reg[0]_0 [0]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[25]),
        .Q(\TX_PE_DATA_reg[0]_0 [230]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[26]),
        .Q(\TX_PE_DATA_reg[0]_0 [229]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[27]),
        .Q(\TX_PE_DATA_reg[0]_0 [228]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[28]),
        .Q(\TX_PE_DATA_reg[0]_0 [227]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[29]),
        .Q(\TX_PE_DATA_reg[0]_0 [226]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[2]),
        .Q(\TX_PE_DATA_reg[0]_0 [253]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[30]),
        .Q(\TX_PE_DATA_reg[0]_0 [225]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[31]),
        .Q(\TX_PE_DATA_reg[0]_0 [224]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[32]),
        .Q(\TX_PE_DATA_reg[0]_0 [223]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[33]),
        .Q(\TX_PE_DATA_reg[0]_0 [222]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[34]),
        .Q(\TX_PE_DATA_reg[0]_0 [221]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[35]),
        .Q(\TX_PE_DATA_reg[0]_0 [220]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[36]),
        .Q(\TX_PE_DATA_reg[0]_0 [219]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[37]),
        .Q(\TX_PE_DATA_reg[0]_0 [218]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[38]),
        .Q(\TX_PE_DATA_reg[0]_0 [217]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[39]),
        .Q(\TX_PE_DATA_reg[0]_0 [216]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[3]),
        .Q(\TX_PE_DATA_reg[0]_0 [252]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[40]),
        .Q(\TX_PE_DATA_reg[0]_0 [215]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[41]),
        .Q(\TX_PE_DATA_reg[0]_0 [214]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[42]),
        .Q(\TX_PE_DATA_reg[0]_0 [213]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[43]),
        .Q(\TX_PE_DATA_reg[0]_0 [212]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[44]),
        .Q(\TX_PE_DATA_reg[0]_0 [211]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[45]),
        .Q(\TX_PE_DATA_reg[0]_0 [210]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[46]),
        .Q(\TX_PE_DATA_reg[0]_0 [209]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[47]),
        .Q(\TX_PE_DATA_reg[0]_0 [208]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[48]),
        .Q(\TX_PE_DATA_reg[0]_0 [207]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[49]),
        .Q(\TX_PE_DATA_reg[0]_0 [206]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[4]),
        .Q(\TX_PE_DATA_reg[0]_0 [251]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[50]),
        .Q(\TX_PE_DATA_reg[0]_0 [205]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[51]),
        .Q(\TX_PE_DATA_reg[0]_0 [204]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[52]),
        .Q(\TX_PE_DATA_reg[0]_0 [203]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[53]),
        .Q(\TX_PE_DATA_reg[0]_0 [202]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[54]),
        .Q(\TX_PE_DATA_reg[0]_0 [201]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[55]),
        .Q(\TX_PE_DATA_reg[0]_0 [200]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[56]),
        .Q(\TX_PE_DATA_reg[0]_0 [199]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[57]),
        .Q(\TX_PE_DATA_reg[0]_0 [198]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[58]),
        .Q(\TX_PE_DATA_reg[0]_0 [197]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[59]),
        .Q(\TX_PE_DATA_reg[0]_0 [196]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[5]),
        .Q(\TX_PE_DATA_reg[0]_0 [250]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[60]),
        .Q(\TX_PE_DATA_reg[0]_0 [195]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[61]),
        .Q(\TX_PE_DATA_reg[0]_0 [194]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[62]),
        .Q(\TX_PE_DATA_reg[0]_0 [193]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[63]),
        .Q(\TX_PE_DATA_reg[0]_0 [192]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[64]),
        .Q(\TX_PE_DATA_reg[0]_0 [191]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[65]),
        .Q(\TX_PE_DATA_reg[0]_0 [190]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[66]),
        .Q(\TX_PE_DATA_reg[0]_0 [189]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[67] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[67]),
        .Q(\TX_PE_DATA_reg[0]_0 [188]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[68]),
        .Q(\TX_PE_DATA_reg[0]_0 [187]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[69]),
        .Q(\TX_PE_DATA_reg[0]_0 [186]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[6]),
        .Q(\TX_PE_DATA_reg[0]_0 [249]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[70]),
        .Q(\TX_PE_DATA_reg[0]_0 [185]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[71] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[71]),
        .Q(\TX_PE_DATA_reg[0]_0 [184]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[72] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[72]),
        .Q(\TX_PE_DATA_reg[0]_0 [183]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[73] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[73]),
        .Q(\TX_PE_DATA_reg[0]_0 [182]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[74] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[74]),
        .Q(\TX_PE_DATA_reg[0]_0 [181]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[75] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[75]),
        .Q(\TX_PE_DATA_reg[0]_0 [180]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[76] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[76]),
        .Q(\TX_PE_DATA_reg[0]_0 [179]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[77] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[77]),
        .Q(\TX_PE_DATA_reg[0]_0 [178]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[78] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[78]),
        .Q(\TX_PE_DATA_reg[0]_0 [177]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[79] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[79]),
        .Q(\TX_PE_DATA_reg[0]_0 [176]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[7]),
        .Q(\TX_PE_DATA_reg[0]_0 [248]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[80] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[80]),
        .Q(\TX_PE_DATA_reg[0]_0 [175]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[81] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[81]),
        .Q(\TX_PE_DATA_reg[0]_0 [174]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[82] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[82]),
        .Q(\TX_PE_DATA_reg[0]_0 [173]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[83] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[83]),
        .Q(\TX_PE_DATA_reg[0]_0 [172]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[84] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[84]),
        .Q(\TX_PE_DATA_reg[0]_0 [171]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[85] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[85]),
        .Q(\TX_PE_DATA_reg[0]_0 [170]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[86] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[86]),
        .Q(\TX_PE_DATA_reg[0]_0 [169]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[87] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[87]),
        .Q(\TX_PE_DATA_reg[0]_0 [168]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[88] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[88]),
        .Q(\TX_PE_DATA_reg[0]_0 [167]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[89] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[89]),
        .Q(\TX_PE_DATA_reg[0]_0 [166]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[8]),
        .Q(\TX_PE_DATA_reg[0]_0 [247]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[90] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[90]),
        .Q(\TX_PE_DATA_reg[0]_0 [165]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[91] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[91]),
        .Q(\TX_PE_DATA_reg[0]_0 [164]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[92] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[92]),
        .Q(\TX_PE_DATA_reg[0]_0 [163]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[93] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[93]),
        .Q(\TX_PE_DATA_reg[0]_0 [162]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[94] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[94]),
        .Q(\TX_PE_DATA_reg[0]_0 [161]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[95] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[95]),
        .Q(\TX_PE_DATA_reg[0]_0 [160]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[96] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[96]),
        .Q(\TX_PE_DATA_reg[0]_0 [159]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[97] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[97]),
        .Q(\TX_PE_DATA_reg[0]_0 [158]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[98] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[98]),
        .Q(\TX_PE_DATA_reg[0]_0 [157]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[99] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[99]),
        .Q(\TX_PE_DATA_reg[0]_0 [156]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_pe_data_d[9]),
        .Q(\TX_PE_DATA_reg[0]_0 [246]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[0]),
        .Q(tx_pe_data_d[0]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[100] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[100]),
        .Q(tx_pe_data_d[100]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[101] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[101]),
        .Q(tx_pe_data_d[101]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[102] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[102]),
        .Q(tx_pe_data_d[102]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[103] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[103]),
        .Q(tx_pe_data_d[103]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[104] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[104]),
        .Q(tx_pe_data_d[104]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[105] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[105]),
        .Q(tx_pe_data_d[105]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[106] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[106]),
        .Q(tx_pe_data_d[106]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[107] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[107]),
        .Q(tx_pe_data_d[107]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[108] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[108]),
        .Q(tx_pe_data_d[108]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[109] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[109]),
        .Q(tx_pe_data_d[109]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[10]),
        .Q(tx_pe_data_d[10]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[110] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[110]),
        .Q(tx_pe_data_d[110]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[111] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[111]),
        .Q(tx_pe_data_d[111]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[112] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[112]),
        .Q(tx_pe_data_d[112]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[113] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[113]),
        .Q(tx_pe_data_d[113]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[114] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[114]),
        .Q(tx_pe_data_d[114]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[115] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[115]),
        .Q(tx_pe_data_d[115]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[116] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[116]),
        .Q(tx_pe_data_d[116]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[117] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[117]),
        .Q(tx_pe_data_d[117]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[118] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[118]),
        .Q(tx_pe_data_d[118]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[119] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[119]),
        .Q(tx_pe_data_d[119]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[11]),
        .Q(tx_pe_data_d[11]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[120] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[120]),
        .Q(tx_pe_data_d[120]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[121] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[121]),
        .Q(tx_pe_data_d[121]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[122] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[122]),
        .Q(tx_pe_data_d[122]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[123] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[123]),
        .Q(tx_pe_data_d[123]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[124] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[124]),
        .Q(tx_pe_data_d[124]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[125] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[125]),
        .Q(tx_pe_data_d[125]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[126] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[126]),
        .Q(tx_pe_data_d[126]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[127] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[127]),
        .Q(tx_pe_data_d[127]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[128] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[128]),
        .Q(tx_pe_data_d[128]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[129] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[129]),
        .Q(tx_pe_data_d[129]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[12]),
        .Q(tx_pe_data_d[12]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[130] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[130]),
        .Q(tx_pe_data_d[130]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[131] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[131]),
        .Q(tx_pe_data_d[131]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[132] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[132]),
        .Q(tx_pe_data_d[132]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[133] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[133]),
        .Q(tx_pe_data_d[133]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[134] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[134]),
        .Q(tx_pe_data_d[134]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[135] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[135]),
        .Q(tx_pe_data_d[135]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[136] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[136]),
        .Q(tx_pe_data_d[136]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[137] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[137]),
        .Q(tx_pe_data_d[137]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[138] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[138]),
        .Q(tx_pe_data_d[138]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[139] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[139]),
        .Q(tx_pe_data_d[139]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[13]),
        .Q(tx_pe_data_d[13]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[140] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[140]),
        .Q(tx_pe_data_d[140]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[141] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[141]),
        .Q(tx_pe_data_d[141]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[142] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[142]),
        .Q(tx_pe_data_d[142]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[143] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[143]),
        .Q(tx_pe_data_d[143]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[144] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[144]),
        .Q(tx_pe_data_d[144]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[145] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[145]),
        .Q(tx_pe_data_d[145]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[146] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[146]),
        .Q(tx_pe_data_d[146]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[147] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[147]),
        .Q(tx_pe_data_d[147]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[148] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[148]),
        .Q(tx_pe_data_d[148]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[149] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[149]),
        .Q(tx_pe_data_d[149]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[14]),
        .Q(tx_pe_data_d[14]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[150] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[150]),
        .Q(tx_pe_data_d[150]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[151] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[151]),
        .Q(tx_pe_data_d[151]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[152] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[152]),
        .Q(tx_pe_data_d[152]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[153] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[153]),
        .Q(tx_pe_data_d[153]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[154] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[154]),
        .Q(tx_pe_data_d[154]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[155] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[155]),
        .Q(tx_pe_data_d[155]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[156] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[156]),
        .Q(tx_pe_data_d[156]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[157] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[157]),
        .Q(tx_pe_data_d[157]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[158] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[158]),
        .Q(tx_pe_data_d[158]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[159] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[159]),
        .Q(tx_pe_data_d[159]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[15]),
        .Q(tx_pe_data_d[15]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[160] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[160]),
        .Q(tx_pe_data_d[160]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[161] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[161]),
        .Q(tx_pe_data_d[161]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[162] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[162]),
        .Q(tx_pe_data_d[162]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[163] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[163]),
        .Q(tx_pe_data_d[163]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[164] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[164]),
        .Q(tx_pe_data_d[164]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[165] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[165]),
        .Q(tx_pe_data_d[165]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[166] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[166]),
        .Q(tx_pe_data_d[166]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[167] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[167]),
        .Q(tx_pe_data_d[167]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[168] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[168]),
        .Q(tx_pe_data_d[168]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[169] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[169]),
        .Q(tx_pe_data_d[169]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[16]),
        .Q(tx_pe_data_d[16]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[170] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[170]),
        .Q(tx_pe_data_d[170]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[171] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[171]),
        .Q(tx_pe_data_d[171]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[172] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[172]),
        .Q(tx_pe_data_d[172]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[173] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[173]),
        .Q(tx_pe_data_d[173]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[174] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[174]),
        .Q(tx_pe_data_d[174]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[175] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[175]),
        .Q(tx_pe_data_d[175]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[176] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[176]),
        .Q(tx_pe_data_d[176]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[177] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[177]),
        .Q(tx_pe_data_d[177]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[178] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[178]),
        .Q(tx_pe_data_d[178]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[179] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[179]),
        .Q(tx_pe_data_d[179]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[17]),
        .Q(tx_pe_data_d[17]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[180] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[180]),
        .Q(tx_pe_data_d[180]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[181] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[181]),
        .Q(tx_pe_data_d[181]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[182] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[182]),
        .Q(tx_pe_data_d[182]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[183] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[183]),
        .Q(tx_pe_data_d[183]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[184] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[184]),
        .Q(tx_pe_data_d[184]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[185] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[185]),
        .Q(tx_pe_data_d[185]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[186] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[186]),
        .Q(tx_pe_data_d[186]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[187] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[187]),
        .Q(tx_pe_data_d[187]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[188] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[188]),
        .Q(tx_pe_data_d[188]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[189] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[189]),
        .Q(tx_pe_data_d[189]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[18]),
        .Q(tx_pe_data_d[18]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[190] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[190]),
        .Q(tx_pe_data_d[190]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[191] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[191]),
        .Q(tx_pe_data_d[191]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[192] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[192]),
        .Q(tx_pe_data_d[192]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[193] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[193]),
        .Q(tx_pe_data_d[193]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[194] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[194]),
        .Q(tx_pe_data_d[194]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[195] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[195]),
        .Q(tx_pe_data_d[195]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[196] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[196]),
        .Q(tx_pe_data_d[196]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[197] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[197]),
        .Q(tx_pe_data_d[197]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[198] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[198]),
        .Q(tx_pe_data_d[198]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[199] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[199]),
        .Q(tx_pe_data_d[199]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[19]),
        .Q(tx_pe_data_d[19]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[1]),
        .Q(tx_pe_data_d[1]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[200] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[200]),
        .Q(tx_pe_data_d[200]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[201] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[201]),
        .Q(tx_pe_data_d[201]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[202] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[202]),
        .Q(tx_pe_data_d[202]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[203] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[203]),
        .Q(tx_pe_data_d[203]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[204] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[204]),
        .Q(tx_pe_data_d[204]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[205] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[205]),
        .Q(tx_pe_data_d[205]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[206] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[206]),
        .Q(tx_pe_data_d[206]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[207] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[207]),
        .Q(tx_pe_data_d[207]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[208] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[208]),
        .Q(tx_pe_data_d[208]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[209] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[209]),
        .Q(tx_pe_data_d[209]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[20]),
        .Q(tx_pe_data_d[20]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[210] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[210]),
        .Q(tx_pe_data_d[210]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[211] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[211]),
        .Q(tx_pe_data_d[211]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[212] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[212]),
        .Q(tx_pe_data_d[212]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[213] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[213]),
        .Q(tx_pe_data_d[213]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[214] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[214]),
        .Q(tx_pe_data_d[214]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[215] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[215]),
        .Q(tx_pe_data_d[215]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[216] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[216]),
        .Q(tx_pe_data_d[216]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[217] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[217]),
        .Q(tx_pe_data_d[217]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[218] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[218]),
        .Q(tx_pe_data_d[218]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[219] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[219]),
        .Q(tx_pe_data_d[219]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[21]),
        .Q(tx_pe_data_d[21]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[220] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[220]),
        .Q(tx_pe_data_d[220]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[221] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[221]),
        .Q(tx_pe_data_d[221]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[222] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[222]),
        .Q(tx_pe_data_d[222]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[223] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[223]),
        .Q(tx_pe_data_d[223]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[224] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[224]),
        .Q(tx_pe_data_d[224]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[225] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[225]),
        .Q(tx_pe_data_d[225]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[226] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[226]),
        .Q(tx_pe_data_d[226]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[227] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[227]),
        .Q(tx_pe_data_d[227]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[228] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[228]),
        .Q(tx_pe_data_d[228]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[229] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[229]),
        .Q(tx_pe_data_d[229]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[22]),
        .Q(tx_pe_data_d[22]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[230] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[230]),
        .Q(tx_pe_data_d[230]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[231] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[231]),
        .Q(tx_pe_data_d[231]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[232] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[232]),
        .Q(tx_pe_data_d[232]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[233] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[233]),
        .Q(tx_pe_data_d[233]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[234] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[234]),
        .Q(tx_pe_data_d[234]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[235] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[235]),
        .Q(tx_pe_data_d[235]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[236] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[236]),
        .Q(tx_pe_data_d[236]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[237] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[237]),
        .Q(tx_pe_data_d[237]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[238] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[238]),
        .Q(tx_pe_data_d[238]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[239] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[239]),
        .Q(tx_pe_data_d[239]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[23]),
        .Q(tx_pe_data_d[23]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[240] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[240]),
        .Q(tx_pe_data_d[240]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[241] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[241]),
        .Q(tx_pe_data_d[241]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[242] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[242]),
        .Q(tx_pe_data_d[242]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[243] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[243]),
        .Q(tx_pe_data_d[243]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[244] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[244]),
        .Q(tx_pe_data_d[244]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[245] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[245]),
        .Q(tx_pe_data_d[245]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[246] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[246]),
        .Q(tx_pe_data_d[246]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[247] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[247]),
        .Q(tx_pe_data_d[247]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[248] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[248]),
        .Q(tx_pe_data_d[248]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[249] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[249]),
        .Q(tx_pe_data_d[249]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[24]),
        .Q(tx_pe_data_d[24]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[250] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[250]),
        .Q(tx_pe_data_d[250]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[251] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[251]),
        .Q(tx_pe_data_d[251]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[252] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[252]),
        .Q(tx_pe_data_d[252]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[253] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[253]),
        .Q(tx_pe_data_d[253]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[254] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[254]),
        .Q(tx_pe_data_d[254]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[255] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[255]),
        .Q(tx_pe_data_d[255]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[25]),
        .Q(tx_pe_data_d[25]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[26]),
        .Q(tx_pe_data_d[26]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[27]),
        .Q(tx_pe_data_d[27]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[28]),
        .Q(tx_pe_data_d[28]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[29]),
        .Q(tx_pe_data_d[29]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[2]),
        .Q(tx_pe_data_d[2]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[30]),
        .Q(tx_pe_data_d[30]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[31]),
        .Q(tx_pe_data_d[31]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[32]),
        .Q(tx_pe_data_d[32]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[33]),
        .Q(tx_pe_data_d[33]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[34]),
        .Q(tx_pe_data_d[34]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[35]),
        .Q(tx_pe_data_d[35]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[36]),
        .Q(tx_pe_data_d[36]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[37]),
        .Q(tx_pe_data_d[37]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[38]),
        .Q(tx_pe_data_d[38]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[39]),
        .Q(tx_pe_data_d[39]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[3]),
        .Q(tx_pe_data_d[3]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[40]),
        .Q(tx_pe_data_d[40]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[41]),
        .Q(tx_pe_data_d[41]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[42]),
        .Q(tx_pe_data_d[42]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[43]),
        .Q(tx_pe_data_d[43]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[44]),
        .Q(tx_pe_data_d[44]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[45]),
        .Q(tx_pe_data_d[45]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[46]),
        .Q(tx_pe_data_d[46]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[47]),
        .Q(tx_pe_data_d[47]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[48]),
        .Q(tx_pe_data_d[48]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[49]),
        .Q(tx_pe_data_d[49]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[4]),
        .Q(tx_pe_data_d[4]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[50]),
        .Q(tx_pe_data_d[50]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[51]),
        .Q(tx_pe_data_d[51]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[52]),
        .Q(tx_pe_data_d[52]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[53]),
        .Q(tx_pe_data_d[53]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[54]),
        .Q(tx_pe_data_d[54]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[55]),
        .Q(tx_pe_data_d[55]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[56]),
        .Q(tx_pe_data_d[56]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[57]),
        .Q(tx_pe_data_d[57]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[58]),
        .Q(tx_pe_data_d[58]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[59]),
        .Q(tx_pe_data_d[59]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[5]),
        .Q(tx_pe_data_d[5]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[60]),
        .Q(tx_pe_data_d[60]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[61]),
        .Q(tx_pe_data_d[61]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[62]),
        .Q(tx_pe_data_d[62]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[63]),
        .Q(tx_pe_data_d[63]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[64] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[64]),
        .Q(tx_pe_data_d[64]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[65] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[65]),
        .Q(tx_pe_data_d[65]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[66] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[66]),
        .Q(tx_pe_data_d[66]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[67] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[67]),
        .Q(tx_pe_data_d[67]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[68] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[68]),
        .Q(tx_pe_data_d[68]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[69] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[69]),
        .Q(tx_pe_data_d[69]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[6]),
        .Q(tx_pe_data_d[6]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[70] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[70]),
        .Q(tx_pe_data_d[70]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[71] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[71]),
        .Q(tx_pe_data_d[71]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[72] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[72]),
        .Q(tx_pe_data_d[72]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[73] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[73]),
        .Q(tx_pe_data_d[73]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[74] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[74]),
        .Q(tx_pe_data_d[74]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[75] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[75]),
        .Q(tx_pe_data_d[75]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[76] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[76]),
        .Q(tx_pe_data_d[76]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[77] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[77]),
        .Q(tx_pe_data_d[77]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[78] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[78]),
        .Q(tx_pe_data_d[78]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[79] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[79]),
        .Q(tx_pe_data_d[79]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[7]),
        .Q(tx_pe_data_d[7]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[80] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[80]),
        .Q(tx_pe_data_d[80]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[81] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[81]),
        .Q(tx_pe_data_d[81]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[82] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[82]),
        .Q(tx_pe_data_d[82]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[83] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[83]),
        .Q(tx_pe_data_d[83]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[84] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[84]),
        .Q(tx_pe_data_d[84]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[85] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[85]),
        .Q(tx_pe_data_d[85]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[86] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[86]),
        .Q(tx_pe_data_d[86]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[87] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[87]),
        .Q(tx_pe_data_d[87]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[88] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[88]),
        .Q(tx_pe_data_d[88]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[89] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[89]),
        .Q(tx_pe_data_d[89]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[8]),
        .Q(tx_pe_data_d[8]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[90] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[90]),
        .Q(tx_pe_data_d[90]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[91] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[91]),
        .Q(tx_pe_data_d[91]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[92] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[92]),
        .Q(tx_pe_data_d[92]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[93] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[93]),
        .Q(tx_pe_data_d[93]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[94] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[94]),
        .Q(tx_pe_data_d[94]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[95] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[95]),
        .Q(tx_pe_data_d[95]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[96] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[96]),
        .Q(tx_pe_data_d[96]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[97] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[97]),
        .Q(tx_pe_data_d[97]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[98] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[98]),
        .Q(tx_pe_data_d[98]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[99] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[99]),
        .Q(tx_pe_data_d[99]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(s_axi_tx_tdata[9]),
        .Q(tx_pe_data_d[9]),
        .R(1'b0));
  FDRE \tx_pe_data_v_d_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(ll_valid_c),
        .Q(tx_pe_data_v_d),
        .R(1'b0));
endmodule

module aurora_64b66b_w256_1375Gbps_WRAPPER
   (stg5_reg,
    stg5_reg_0,
    stg5_reg_1,
    stg5_reg_2,
    rxdatavalid_to_lanes_i,
    HARD_ERR0__0,
    bufg_gt_clr_out,
    hold_reg_r_reg,
    hold_reg_r_reg_0,
    hold_reg_r_reg_1,
    hold_reg_r_reg_2,
    gt_to_common_qpllreset_out,
    drpdo_out,
    drprdy_out,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    Q,
    RXHEADER_OUT_ERR,
    RXLOSSOFSYNC_OUT,
    ch_bond_done_i,
    \fifo_dout_reg[63] ,
    RXHEADER_OUT_ERR_LANE1,
    RXLOSSOFSYNC_OUT_LANE1,
    \fifo_dout_reg[63]_0 ,
    RXHEADER_OUT_ERR_LANE2,
    RXLOSSOFSYNC_OUT_LANE2,
    \fifo_dout_reg[63]_1 ,
    RXHEADER_OUT_ERR_LANE3,
    RXLOSSOFSYNC_OUT_LANE3,
    gt_pll_lock,
    link_reset_out,
    in0,
    RX_NEG_OUT_reg_0,
    RX_NEG_OUT_LANE1_reg_0,
    RX_NEG_OUT_LANE2_reg_0,
    RX_NEG_OUT_LANE3_reg_0,
    rx_header_1_i_3,
    \fifo_dout_reg[64] ,
    rx_header_1_i_2,
    \fifo_dout_reg[64]_0 ,
    rx_header_1_i_1,
    \fifo_dout_reg[64]_1 ,
    rx_header_1_i_0,
    \fifo_dout_reg[64]_2 ,
    TXDATAVALID_IN,
    txdatavalid_symgen_i,
    txdatavalid_symgen_i_lane1,
    txdatavalid_symgen_i_lane2,
    txdatavalid_symgen_i_lane3,
    user_clk,
    init_clk,
    rst_pma_init_usrclk,
    rst_pma_init_usrclk_0,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    EN_CHAN_SYNC,
    gt_qplllock_quad1_in,
    rst_drp,
    drpaddr_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    gt_refclk1,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_rxcdrovrden_in,
    sync_clk,
    CHAN_BOND_RESET,
    CHECK_POLARITY_IN,
    RXPOLARITY_IN,
    CHECK_POLARITY_IN_LANE1,
    RXPOLARITY_IN_LANE1,
    CHECK_POLARITY_IN_LANE2,
    RXPOLARITY_IN_LANE2,
    CHECK_POLARITY_IN_LANE3,
    RXPOLARITY_IN_LANE3,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    rx_reset_i_3,
    rx_reset_i_2,
    rx_reset_i_1,
    rx_reset_i_0,
    TXHEADER_IN,
    TXHEADER_IN_LANE1,
    TXHEADER_IN_LANE2,
    TXHEADER_IN_LANE3,
    TXDATA_IN,
    TXDATA_IN_LANE1,
    TXDATA_IN_LANE2,
    TXDATA_IN_LANE3,
    mmcm_not_locked,
    CHANNEL_UP_RX_IF,
    CHANNEL_UP_TX_IF);
  output stg5_reg;
  output stg5_reg_0;
  output stg5_reg_1;
  output stg5_reg_2;
  output rxdatavalid_to_lanes_i;
  output HARD_ERR0__0;
  output bufg_gt_clr_out;
  output hold_reg_r_reg;
  output hold_reg_r_reg_0;
  output hold_reg_r_reg_1;
  output hold_reg_r_reg_2;
  output gt_to_common_qpllreset_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]gt_powergood;
  output [0:3]txn;
  output [0:3]txp;
  output tx_out_clk;
  output [63:0]Q;
  output RXHEADER_OUT_ERR;
  output RXLOSSOFSYNC_OUT;
  output [0:3]ch_bond_done_i;
  output [63:0]\fifo_dout_reg[63] ;
  output RXHEADER_OUT_ERR_LANE1;
  output RXLOSSOFSYNC_OUT_LANE1;
  output [63:0]\fifo_dout_reg[63]_0 ;
  output RXHEADER_OUT_ERR_LANE2;
  output RXLOSSOFSYNC_OUT_LANE2;
  output [63:0]\fifo_dout_reg[63]_1 ;
  output RXHEADER_OUT_ERR_LANE3;
  output RXLOSSOFSYNC_OUT_LANE3;
  output gt_pll_lock;
  output link_reset_out;
  output in0;
  output RX_NEG_OUT_reg_0;
  output RX_NEG_OUT_LANE1_reg_0;
  output RX_NEG_OUT_LANE2_reg_0;
  output RX_NEG_OUT_LANE3_reg_0;
  output rx_header_1_i_3;
  output \fifo_dout_reg[64] ;
  output rx_header_1_i_2;
  output \fifo_dout_reg[64]_0 ;
  output rx_header_1_i_1;
  output \fifo_dout_reg[64]_1 ;
  output rx_header_1_i_0;
  output \fifo_dout_reg[64]_2 ;
  output TXDATAVALID_IN;
  output txdatavalid_symgen_i;
  output txdatavalid_symgen_i_lane1;
  output txdatavalid_symgen_i_lane2;
  output txdatavalid_symgen_i_lane3;
  input user_clk;
  input init_clk;
  input rst_pma_init_usrclk;
  input rst_pma_init_usrclk_0;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input EN_CHAN_SYNC;
  input gt_qplllock_quad1_in;
  input rst_drp;
  input [39:0]drpaddr_in;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input gt_refclk1;
  input [0:3]rxn;
  input [0:3]rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_rxcdrovrden_in;
  input sync_clk;
  input CHAN_BOND_RESET;
  input CHECK_POLARITY_IN;
  input RXPOLARITY_IN;
  input CHECK_POLARITY_IN_LANE1;
  input RXPOLARITY_IN_LANE1;
  input CHECK_POLARITY_IN_LANE2;
  input RXPOLARITY_IN_LANE2;
  input CHECK_POLARITY_IN_LANE3;
  input RXPOLARITY_IN_LANE3;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input rx_reset_i_3;
  input rx_reset_i_2;
  input rx_reset_i_1;
  input rx_reset_i_0;
  input [1:0]TXHEADER_IN;
  input [1:0]TXHEADER_IN_LANE1;
  input [1:0]TXHEADER_IN_LANE2;
  input [1:0]TXHEADER_IN_LANE3;
  input [63:0]TXDATA_IN;
  input [63:0]TXDATA_IN_LANE1;
  input [63:0]TXDATA_IN_LANE2;
  input [63:0]TXDATA_IN_LANE3;
  input mmcm_not_locked;
  input CHANNEL_UP_RX_IF;
  input CHANNEL_UP_TX_IF;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect0_17;
  wire CB_detect0_21;
  wire CB_detect0_24;
  wire CB_detect_18;
  wire CB_detect_22;
  wire CB_detect_25;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd0p5_13;
  wire CB_detect_dlyd0p5_2;
  wire CB_detect_dlyd0p5_6;
  wire CB_flag_direct;
  wire CB_flag_direct_0;
  wire CB_flag_direct_1;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_14;
  wire CC_detect_dlyd1_3;
  wire CC_detect_dlyd1_7;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_i_20;
  wire CC_detect_pulse_i_23;
  wire CC_detect_pulse_i_27;
  wire CHANNEL_UP_RX_IF;
  wire CHANNEL_UP_TX_IF;
  wire CHAN_BOND_RESET;
  wire CHECK_POLARITY_IN;
  wire CHECK_POLARITY_IN_LANE1;
  wire CHECK_POLARITY_IN_LANE2;
  wire CHECK_POLARITY_IN_LANE3;
  wire EN_CHAN_SYNC;
  wire FSM_RESETDONE_j;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ;
  wire HARD_ERR0__0;
  wire HPCNT_RESET_IN;
  wire LINK_RESET_OUT0;
  wire [63:0]Q;
  wire RXHEADER_OUT_ERR;
  wire RXHEADER_OUT_ERR_LANE1;
  wire RXHEADER_OUT_ERR_LANE2;
  wire RXHEADER_OUT_ERR_LANE3;
  wire RXLOSSOFSYNC_OUT;
  wire RXLOSSOFSYNC_OUT_LANE1;
  wire RXLOSSOFSYNC_OUT_LANE2;
  wire RXLOSSOFSYNC_OUT_LANE3;
  wire RXPOLARITY_IN;
  wire RXPOLARITY_IN_LANE1;
  wire RXPOLARITY_IN_LANE2;
  wire RXPOLARITY_IN_LANE3;
  wire RX_NEG_OUT_LANE1_reg_0;
  wire RX_NEG_OUT_LANE2_reg_0;
  wire RX_NEG_OUT_LANE3_reg_0;
  wire RX_NEG_OUT_reg_0;
  wire TXDATAVALID_IN;
  wire [63:0]TXDATA_IN;
  wire [63:0]TXDATA_IN_LANE1;
  wire [63:0]TXDATA_IN_LANE2;
  wire [63:0]TXDATA_IN_LANE3;
  wire [63:0]TXDATA_IN_REG;
  wire [63:0]TXDATA_IN_REG_LANE1;
  wire [63:0]TXDATA_IN_REG_LANE2;
  wire [63:0]TXDATA_IN_REG_LANE3;
  wire [1:0]TXHEADER_IN;
  wire [1:0]TXHEADER_IN_LANE1;
  wire [1:0]TXHEADER_IN_LANE2;
  wire [1:0]TXHEADER_IN_LANE3;
  wire \TX_DATA[55]_i_3__0_n_0 ;
  wire \TX_DATA[55]_i_3__1_n_0 ;
  wire \TX_DATA[55]_i_3__2_n_0 ;
  wire \TX_DATA[55]_i_3_n_0 ;
  (* RTL_KEEP = "true" *) wire all_start_cb_writes_i;
  (* RTL_KEEP = "true" *) wire all_vld_btf_flag_i;
  wire allow_block_sync_propagation;
  wire allow_block_sync_propagation_reg_n_0;
  wire any_vld_btf_i;
  wire any_vld_btf_lane1_i;
  wire any_vld_btf_lane2_i;
  wire any_vld_btf_lane3_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane1_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane2_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane3_i;
  wire blocksync_all_lanes_inrxclk;
  wire blocksync_all_lanes_inrxclk_q;
  wire blocksync_out_i;
  wire blocksync_out_lane1_i;
  wire blocksync_out_lane2_i;
  wire blocksync_out_lane3_i;
  wire bufg_gt_clr_out;
  wire cb_bit_err_i;
  wire cbcc_data_srst;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_gtx0_i_n_84;
  wire cbcc_gtx0_i_n_85;
  wire cbcc_gtx0_lane1_i_n_11;
  wire cbcc_gtx0_lane1_i_n_79;
  wire cbcc_gtx0_lane2_i_n_83;
  wire cbcc_gtx0_lane2_i_n_87;
  wire cbcc_gtx0_lane3_i_n_78;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [7:0]cdr_reset_fsm_cntr_r;
  wire \cdr_reset_fsm_cntr_r[0]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[1]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[2]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[3]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[4]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[5]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[6]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_2_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_3_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_4_n_0 ;
  wire cdr_reset_fsm_lnkreset;
  wire cdr_reset_fsm_lnkreset_i_1_n_0;
  wire cdr_reset_fsm_lnkreset_reg_n_0;
  wire [0:3]ch_bond_done_i;
  wire [1:0]chbondi;
  wire common_reset_cbcc_i_n_6;
  (* RTL_KEEP = "true" *) wire do_rd_en_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane1_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane2_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane3_i;
  wire [39:0]drpaddr_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire enchansync_dlyd_i;
  wire enchansync_dlyd_i_15;
  wire [63:0]\fifo_dout_reg[63] ;
  wire [63:0]\fifo_dout_reg[63]_0 ;
  wire [63:0]\fifo_dout_reg[63]_1 ;
  wire \fifo_dout_reg[64] ;
  wire \fifo_dout_reg[64]_0 ;
  wire \fifo_dout_reg[64]_1 ;
  wire \fifo_dout_reg[64]_2 ;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane1_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane2_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane3_i;
  wire fsm_resetdone_initclk;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_i;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire gtx_reset_comb;
  wire hard_err_cntr_r;
  wire \hard_err_cntr_r[7]_i_4_n_0 ;
  wire \hard_err_cntr_r[7]_i_5_n_0 ;
  wire \hard_err_cntr_r[7]_i_6_n_0 ;
  wire [7:0]hard_err_cntr_r_reg;
  wire hard_err_rst_int;
  wire hard_err_rst_int0;
  wire hard_err_rst_int_i_4_n_0;
  wire hard_err_usr;
  wire hard_err_usr0;
  wire hold_reg_r_reg;
  wire hold_reg_r_reg_0;
  wire hold_reg_r_reg_1;
  wire hold_reg_r_reg_2;
  wire in0;
  wire init_clk;
  wire [11:2]int_gt_rxbufstatus;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire link_reset_out;
  wire [2:0]loopback;
  wire master_do_rd_en;
  (* RTL_KEEP = "true" *) wire master_do_rd_en_i;
  wire mmcm_not_locked;
  wire new_gtx_rx_pcsreset_comb;
  wire new_gtx_rx_pcsreset_comb0;
  wire p_0_in11_in;
  wire p_0_in11_in_11;
  wire p_0_in13_in;
  wire p_0_in13_in_10;
  wire p_0_in13_in_5;
  wire p_0_in15_in;
  wire p_0_in9_in;
  wire p_0_in9_in_9;
  wire [7:0]p_0_in__20;
  wire p_27_in;
  wire p_6_in;
  wire p_6_in_19;
  wire p_6_in_26;
  wire p_9_in;
  wire [63:0]pos_rxdata_from_gtx_i;
  wire [63:0]pos_rxdata_from_gtx_lane1_i;
  wire [63:0]pos_rxdata_from_gtx_lane2_i;
  wire [63:0]pos_rxdata_from_gtx_lane3_i;
  wire pos_rxdatavalid_i;
  wire pos_rxdatavalid_lane1_i;
  wire pos_rxdatavalid_lane2_i;
  wire pos_rxdatavalid_lane3_i;
  wire [1:0]pos_rxheader_from_gtx_i;
  wire [1:0]pos_rxheader_from_gtx_lane1_i;
  wire [1:0]pos_rxheader_from_gtx_lane2_i;
  wire [1:0]pos_rxheader_from_gtx_lane3_i;
  wire pos_rxheadervalid_i;
  wire pos_rxheadervalid_lane1_i;
  wire pos_rxheadervalid_lane2_i;
  wire pos_rxheadervalid_lane3_i;
  wire [63:0]pre_r1_rxdata_from_gtx_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane1_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane2_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane3_i;
  wire pre_r1_rxdatavalid_i;
  wire pre_r1_rxdatavalid_lane1_i;
  wire pre_r1_rxdatavalid_lane2_i;
  wire pre_r1_rxdatavalid_lane3_i;
  wire [1:0]pre_r1_rxheader_from_gtx_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane1_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane2_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane3_i;
  wire pre_r1_rxheadervalid_i;
  wire pre_r1_rxheadervalid_lane1_i;
  wire pre_r1_rxheadervalid_lane2_i;
  wire pre_r1_rxheadervalid_lane3_i;
  wire [63:0]pre_rxdata_from_gtx_i;
  wire [63:0]pre_rxdata_from_gtx_lane1_i;
  wire [63:0]pre_rxdata_from_gtx_lane2_i;
  wire [63:0]pre_rxdata_from_gtx_lane3_i;
  wire pre_rxdatavalid_i;
  wire pre_rxdatavalid_lane1_i;
  wire pre_rxdatavalid_lane2_i;
  wire pre_rxdatavalid_lane3_i;
  wire [1:0]pre_rxheader_from_gtx_i;
  wire [1:0]pre_rxheader_from_gtx_lane1_i;
  wire [1:0]pre_rxheader_from_gtx_lane2_i;
  wire [1:0]pre_rxheader_from_gtx_lane3_i;
  wire pre_rxheadervalid_i;
  wire pre_rxheadervalid_lane1_i;
  wire pre_rxheadervalid_lane2_i;
  wire pre_rxheadervalid_lane3_i;
  wire reset_initclk;
  wire rst_drp;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire rx_elastic_buf_err;
  wire rx_elastic_buf_err_int__0;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_i;
  wire rx_fsm_resetdone_i_i;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_ii;
  wire rx_header_1_i_0;
  wire rx_header_1_i_1;
  wire rx_header_1_i_2;
  wire rx_header_1_i_3;
  wire rx_reset_i_0;
  wire rx_reset_i_1;
  wire rx_reset_i_2;
  wire rx_reset_i_3;
  wire [1:0]rxbuferr_out_i;
  wire [1:0]rxbuferr_out_lane2_i;
  wire [63:0]rxdata_from_gtx_i;
  wire [63:0]rxdata_from_gtx_lane1_i;
  wire [63:0]rxdata_from_gtx_lane2_i;
  wire [63:0]rxdata_from_gtx_lane3_i;
  wire [63:0]rxdata_to_fifo_i;
  wire [63:0]rxdata_to_fifo_lane1_i;
  wire [63:0]rxdata_to_fifo_lane2_i;
  wire [63:0]rxdata_to_fifo_lane3_i;
  wire rxdatavalid_i;
  wire rxdatavalid_lane1_i;
  wire rxdatavalid_lane2_i;
  wire rxdatavalid_lane3_i;
  wire rxdatavalid_to_fifo_i;
  wire rxdatavalid_to_fifo_lane1_i;
  wire rxdatavalid_to_fifo_lane2_i;
  wire rxdatavalid_to_fifo_lane3_i;
  wire rxdatavalid_to_lanes_i;
  (* RTL_KEEP = "true" *) wire rxfsm_reset_i;
  wire rxgearboxslip_i;
  wire rxgearboxslip_lane1_i;
  wire rxgearboxslip_lane2_i;
  wire rxgearboxslip_lane3_i;
  wire [1:0]rxheader_from_gtx_i;
  wire [1:0]rxheader_from_gtx_lane1_i;
  wire [1:0]rxheader_from_gtx_lane2_i;
  wire [1:0]rxheader_from_gtx_lane3_i;
  wire [1:0]rxheader_to_fifo_i;
  wire [1:0]rxheader_to_fifo_lane1_i;
  wire [1:0]rxheader_to_fifo_lane2_i;
  wire [1:0]rxheader_to_fifo_lane3_i;
  wire rxheadervalid_i;
  wire rxheadervalid_lane1_i;
  wire rxheadervalid_lane2_i;
  wire rxheadervalid_lane3_i;
  wire rxlossofsync_out_lane1_q;
  wire rxlossofsync_out_lane2_q;
  wire rxlossofsync_out_lane3_q;
  wire rxlossofsync_out_q;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire rxreset_for_lanes__0;
  wire rxreset_for_lanes_q;
  wire rxusrclk_out;
  wire [63:0]scrambled_data_i;
  wire [63:0]scrambled_data_lane1_i;
  wire [63:0]scrambled_data_lane2_i;
  wire [63:0]scrambled_data_lane3_i;
  wire scrambler_64b66b_gtx0_i_n_0;
  wire scrambler_64b66b_gtx0_lane1_i_n_0;
  wire scrambler_64b66b_gtx0_lane2_i_n_0;
  wire scrambler_64b66b_gtx0_lane3_i_n_0;
  wire sel;
  wire \slave.slave/master_stop_prev_cb_r ;
  wire \slave.slave/master_stop_prev_cb_r_12 ;
  wire stableclk_gtx_reset_comb;
  wire start_cb_writes_lane2_i;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_2;
  wire sync_clk;
  wire [3:0]sync_rx_polarity_r_j;
  wire system_reset_r2;
  wire [0:0]tx_buf_err_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_ii;
  wire [1:0]tx_hdr_lane1_r;
  wire [1:0]tx_hdr_lane2_r;
  wire [1:0]tx_hdr_lane3_r;
  wire [1:0]tx_hdr_r;
  wire tx_out_clk;
  wire txdatavalid_in_r1_i_2_n_0;
  wire txdatavalid_symgen_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire [1:0]txheader_lane1_r;
  wire [1:0]txheader_lane2_r;
  wire [1:0]txheader_lane3_r;
  wire [1:0]txheader_r;
  wire [0:3]txn;
  wire [0:3]txp;
  wire [6:0]txseq_counter_i;
  wire \txseq_counter_i[6]_i_2_n_0 ;
  wire [6:0]txseq_counter_i_lane1;
  wire \txseq_counter_i_lane1[5]_i_2_n_0 ;
  wire \txseq_counter_i_lane1_reg_n_0_[0] ;
  wire \txseq_counter_i_lane1_reg_n_0_[1] ;
  wire \txseq_counter_i_lane1_reg_n_0_[2] ;
  wire \txseq_counter_i_lane1_reg_n_0_[3] ;
  wire \txseq_counter_i_lane1_reg_n_0_[4] ;
  wire \txseq_counter_i_lane1_reg_n_0_[5] ;
  wire \txseq_counter_i_lane1_reg_n_0_[6] ;
  wire [6:0]txseq_counter_i_lane2;
  wire \txseq_counter_i_lane2[5]_i_2_n_0 ;
  wire \txseq_counter_i_lane2_reg_n_0_[0] ;
  wire \txseq_counter_i_lane2_reg_n_0_[1] ;
  wire \txseq_counter_i_lane2_reg_n_0_[2] ;
  wire \txseq_counter_i_lane2_reg_n_0_[3] ;
  wire \txseq_counter_i_lane2_reg_n_0_[4] ;
  wire \txseq_counter_i_lane2_reg_n_0_[5] ;
  wire \txseq_counter_i_lane2_reg_n_0_[6] ;
  wire [6:0]txseq_counter_i_lane3;
  wire \txseq_counter_i_lane3[5]_i_2_n_0 ;
  wire \txseq_counter_i_lane3_reg_n_0_[0] ;
  wire \txseq_counter_i_lane3_reg_n_0_[1] ;
  wire \txseq_counter_i_lane3_reg_n_0_[2] ;
  wire \txseq_counter_i_lane3_reg_n_0_[3] ;
  wire \txseq_counter_i_lane3_reg_n_0_[4] ;
  wire \txseq_counter_i_lane3_reg_n_0_[5] ;
  wire \txseq_counter_i_lane3_reg_n_0_[6] ;
  wire \txseq_counter_i_reg_n_0_[0] ;
  wire \txseq_counter_i_reg_n_0_[1] ;
  wire \txseq_counter_i_reg_n_0_[2] ;
  wire \txseq_counter_i_reg_n_0_[3] ;
  wire \txseq_counter_i_reg_n_0_[4] ;
  wire \txseq_counter_i_reg_n_0_[5] ;
  wire \txseq_counter_i_reg_n_0_[6] ;
  wire txsequence_ctr_en_int;
  wire txsequence_ctr_en_int_i_1_n_0;
  wire u_cdc__check_polarity_n_0;
  wire u_cdc__lane1_check_polarity_n_0;
  wire u_cdc__lane2_check_polarity_n_0;
  wire u_cdc__lane3_check_polarity_n_0;
  wire u_cdc_hard_err_init_n_1;
  wire u_rst_sync_blocksyncall_initclk_sync_n_0;
  wire u_rst_sync_blocksyncprop_inrxclk_sync_n_0;
  wire u_rst_sync_reset_initclk_n_1;
  wire u_rst_sync_reset_initclk_n_2;
  wire u_rst_sync_reset_initclk_n_3;
  wire u_rst_sync_reset_initclk_n_4;
  wire user_clk;
  wire valid_btf_detect_dlyd1;
  wire valid_btf_detect_dlyd1_16;
  wire valid_btf_detect_dlyd1_4;
  wire valid_btf_detect_dlyd1_8;

  FDRE FSM_RESETDONE_j_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(FSM_RESETDONE_j),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_3 
       (.I0(allow_block_sync_propagation),
        .I1(cdr_reset_fsm_lnkreset),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_4 
       (.I0(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I1(cdr_reset_fsm_cntr_r[7]),
        .I2(cdr_reset_fsm_cntr_r[6]),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[5]),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[0] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(1'b0),
        .Q(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .S(p_27_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[1] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .Q(cdr_reset_fsm_lnkreset),
        .R(p_27_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[2] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ),
        .Q(allow_block_sync_propagation),
        .R(p_27_in));
  FDRE LINK_RESET_OUT_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(LINK_RESET_OUT0),
        .Q(link_reset_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    PLLLKDET_OUT
       (.I0(gt_qplllock_quad1_i),
        .I1(rx_fsm_resetdone_ii),
        .I2(tx_fsm_resetdone_ii),
        .O(gt_pll_lock));
  FDRE RX_NEG_OUT_LANE1_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane1_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE1_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_LANE2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane2_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE2_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_LANE3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane3_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE3_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__check_polarity_n_0),
        .Q(RX_NEG_OUT_reg_0),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[0]),
        .Q(TXDATA_IN_REG_LANE1[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[10]),
        .Q(TXDATA_IN_REG_LANE1[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[11]),
        .Q(TXDATA_IN_REG_LANE1[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[12]),
        .Q(TXDATA_IN_REG_LANE1[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[13]),
        .Q(TXDATA_IN_REG_LANE1[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[14]),
        .Q(TXDATA_IN_REG_LANE1[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[15]),
        .Q(TXDATA_IN_REG_LANE1[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[16]),
        .Q(TXDATA_IN_REG_LANE1[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[17]),
        .Q(TXDATA_IN_REG_LANE1[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[18]),
        .Q(TXDATA_IN_REG_LANE1[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[19]),
        .Q(TXDATA_IN_REG_LANE1[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[1]),
        .Q(TXDATA_IN_REG_LANE1[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[20]),
        .Q(TXDATA_IN_REG_LANE1[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[21]),
        .Q(TXDATA_IN_REG_LANE1[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[22]),
        .Q(TXDATA_IN_REG_LANE1[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[23]),
        .Q(TXDATA_IN_REG_LANE1[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[24]),
        .Q(TXDATA_IN_REG_LANE1[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[25]),
        .Q(TXDATA_IN_REG_LANE1[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[26]),
        .Q(TXDATA_IN_REG_LANE1[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[27]),
        .Q(TXDATA_IN_REG_LANE1[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[28]),
        .Q(TXDATA_IN_REG_LANE1[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[29]),
        .Q(TXDATA_IN_REG_LANE1[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[2]),
        .Q(TXDATA_IN_REG_LANE1[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[30]),
        .Q(TXDATA_IN_REG_LANE1[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[31]),
        .Q(TXDATA_IN_REG_LANE1[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[32]),
        .Q(TXDATA_IN_REG_LANE1[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[33]),
        .Q(TXDATA_IN_REG_LANE1[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[34]),
        .Q(TXDATA_IN_REG_LANE1[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[35]),
        .Q(TXDATA_IN_REG_LANE1[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[36]),
        .Q(TXDATA_IN_REG_LANE1[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[37]),
        .Q(TXDATA_IN_REG_LANE1[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[38]),
        .Q(TXDATA_IN_REG_LANE1[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[39]),
        .Q(TXDATA_IN_REG_LANE1[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[3]),
        .Q(TXDATA_IN_REG_LANE1[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[40]),
        .Q(TXDATA_IN_REG_LANE1[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[41]),
        .Q(TXDATA_IN_REG_LANE1[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[42]),
        .Q(TXDATA_IN_REG_LANE1[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[43]),
        .Q(TXDATA_IN_REG_LANE1[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[44]),
        .Q(TXDATA_IN_REG_LANE1[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[45]),
        .Q(TXDATA_IN_REG_LANE1[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[46]),
        .Q(TXDATA_IN_REG_LANE1[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[47]),
        .Q(TXDATA_IN_REG_LANE1[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[48]),
        .Q(TXDATA_IN_REG_LANE1[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[49]),
        .Q(TXDATA_IN_REG_LANE1[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[4]),
        .Q(TXDATA_IN_REG_LANE1[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[50]),
        .Q(TXDATA_IN_REG_LANE1[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[51]),
        .Q(TXDATA_IN_REG_LANE1[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[52]),
        .Q(TXDATA_IN_REG_LANE1[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[53]),
        .Q(TXDATA_IN_REG_LANE1[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[54]),
        .Q(TXDATA_IN_REG_LANE1[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[55]),
        .Q(TXDATA_IN_REG_LANE1[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[56]),
        .Q(TXDATA_IN_REG_LANE1[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[57]),
        .Q(TXDATA_IN_REG_LANE1[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[58]),
        .Q(TXDATA_IN_REG_LANE1[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[59]),
        .Q(TXDATA_IN_REG_LANE1[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[5]),
        .Q(TXDATA_IN_REG_LANE1[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[60]),
        .Q(TXDATA_IN_REG_LANE1[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[61]),
        .Q(TXDATA_IN_REG_LANE1[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[62]),
        .Q(TXDATA_IN_REG_LANE1[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[63]),
        .Q(TXDATA_IN_REG_LANE1[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[6]),
        .Q(TXDATA_IN_REG_LANE1[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[7]),
        .Q(TXDATA_IN_REG_LANE1[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[8]),
        .Q(TXDATA_IN_REG_LANE1[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE1[9]),
        .Q(TXDATA_IN_REG_LANE1[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[0]),
        .Q(TXDATA_IN_REG_LANE2[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[10]),
        .Q(TXDATA_IN_REG_LANE2[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[11]),
        .Q(TXDATA_IN_REG_LANE2[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[12]),
        .Q(TXDATA_IN_REG_LANE2[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[13]),
        .Q(TXDATA_IN_REG_LANE2[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[14]),
        .Q(TXDATA_IN_REG_LANE2[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[15]),
        .Q(TXDATA_IN_REG_LANE2[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[16]),
        .Q(TXDATA_IN_REG_LANE2[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[17]),
        .Q(TXDATA_IN_REG_LANE2[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[18]),
        .Q(TXDATA_IN_REG_LANE2[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[19]),
        .Q(TXDATA_IN_REG_LANE2[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[1]),
        .Q(TXDATA_IN_REG_LANE2[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[20]),
        .Q(TXDATA_IN_REG_LANE2[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[21]),
        .Q(TXDATA_IN_REG_LANE2[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[22]),
        .Q(TXDATA_IN_REG_LANE2[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[23]),
        .Q(TXDATA_IN_REG_LANE2[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[24]),
        .Q(TXDATA_IN_REG_LANE2[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[25]),
        .Q(TXDATA_IN_REG_LANE2[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[26]),
        .Q(TXDATA_IN_REG_LANE2[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[27]),
        .Q(TXDATA_IN_REG_LANE2[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[28]),
        .Q(TXDATA_IN_REG_LANE2[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[29]),
        .Q(TXDATA_IN_REG_LANE2[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[2]),
        .Q(TXDATA_IN_REG_LANE2[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[30]),
        .Q(TXDATA_IN_REG_LANE2[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[31]),
        .Q(TXDATA_IN_REG_LANE2[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[32]),
        .Q(TXDATA_IN_REG_LANE2[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[33]),
        .Q(TXDATA_IN_REG_LANE2[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[34]),
        .Q(TXDATA_IN_REG_LANE2[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[35]),
        .Q(TXDATA_IN_REG_LANE2[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[36]),
        .Q(TXDATA_IN_REG_LANE2[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[37]),
        .Q(TXDATA_IN_REG_LANE2[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[38]),
        .Q(TXDATA_IN_REG_LANE2[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[39]),
        .Q(TXDATA_IN_REG_LANE2[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[3]),
        .Q(TXDATA_IN_REG_LANE2[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[40]),
        .Q(TXDATA_IN_REG_LANE2[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[41]),
        .Q(TXDATA_IN_REG_LANE2[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[42]),
        .Q(TXDATA_IN_REG_LANE2[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[43]),
        .Q(TXDATA_IN_REG_LANE2[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[44]),
        .Q(TXDATA_IN_REG_LANE2[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[45]),
        .Q(TXDATA_IN_REG_LANE2[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[46]),
        .Q(TXDATA_IN_REG_LANE2[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[47]),
        .Q(TXDATA_IN_REG_LANE2[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[48]),
        .Q(TXDATA_IN_REG_LANE2[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[49]),
        .Q(TXDATA_IN_REG_LANE2[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[4]),
        .Q(TXDATA_IN_REG_LANE2[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[50]),
        .Q(TXDATA_IN_REG_LANE2[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[51]),
        .Q(TXDATA_IN_REG_LANE2[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[52]),
        .Q(TXDATA_IN_REG_LANE2[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[53]),
        .Q(TXDATA_IN_REG_LANE2[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[54]),
        .Q(TXDATA_IN_REG_LANE2[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[55]),
        .Q(TXDATA_IN_REG_LANE2[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[56]),
        .Q(TXDATA_IN_REG_LANE2[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[57]),
        .Q(TXDATA_IN_REG_LANE2[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[58]),
        .Q(TXDATA_IN_REG_LANE2[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[59]),
        .Q(TXDATA_IN_REG_LANE2[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[5]),
        .Q(TXDATA_IN_REG_LANE2[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[60]),
        .Q(TXDATA_IN_REG_LANE2[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[61]),
        .Q(TXDATA_IN_REG_LANE2[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[62]),
        .Q(TXDATA_IN_REG_LANE2[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[63]),
        .Q(TXDATA_IN_REG_LANE2[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[6]),
        .Q(TXDATA_IN_REG_LANE2[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[7]),
        .Q(TXDATA_IN_REG_LANE2[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[8]),
        .Q(TXDATA_IN_REG_LANE2[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE2[9]),
        .Q(TXDATA_IN_REG_LANE2[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[0]),
        .Q(TXDATA_IN_REG_LANE3[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[10]),
        .Q(TXDATA_IN_REG_LANE3[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[11]),
        .Q(TXDATA_IN_REG_LANE3[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[12]),
        .Q(TXDATA_IN_REG_LANE3[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[13]),
        .Q(TXDATA_IN_REG_LANE3[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[14]),
        .Q(TXDATA_IN_REG_LANE3[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[15]),
        .Q(TXDATA_IN_REG_LANE3[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[16]),
        .Q(TXDATA_IN_REG_LANE3[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[17]),
        .Q(TXDATA_IN_REG_LANE3[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[18]),
        .Q(TXDATA_IN_REG_LANE3[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[19]),
        .Q(TXDATA_IN_REG_LANE3[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[1]),
        .Q(TXDATA_IN_REG_LANE3[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[20]),
        .Q(TXDATA_IN_REG_LANE3[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[21]),
        .Q(TXDATA_IN_REG_LANE3[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[22]),
        .Q(TXDATA_IN_REG_LANE3[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[23]),
        .Q(TXDATA_IN_REG_LANE3[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[24]),
        .Q(TXDATA_IN_REG_LANE3[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[25]),
        .Q(TXDATA_IN_REG_LANE3[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[26]),
        .Q(TXDATA_IN_REG_LANE3[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[27]),
        .Q(TXDATA_IN_REG_LANE3[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[28]),
        .Q(TXDATA_IN_REG_LANE3[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[29]),
        .Q(TXDATA_IN_REG_LANE3[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[2]),
        .Q(TXDATA_IN_REG_LANE3[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[30]),
        .Q(TXDATA_IN_REG_LANE3[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[31]),
        .Q(TXDATA_IN_REG_LANE3[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[32]),
        .Q(TXDATA_IN_REG_LANE3[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[33]),
        .Q(TXDATA_IN_REG_LANE3[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[34]),
        .Q(TXDATA_IN_REG_LANE3[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[35]),
        .Q(TXDATA_IN_REG_LANE3[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[36]),
        .Q(TXDATA_IN_REG_LANE3[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[37]),
        .Q(TXDATA_IN_REG_LANE3[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[38]),
        .Q(TXDATA_IN_REG_LANE3[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[39]),
        .Q(TXDATA_IN_REG_LANE3[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[3]),
        .Q(TXDATA_IN_REG_LANE3[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[40]),
        .Q(TXDATA_IN_REG_LANE3[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[41]),
        .Q(TXDATA_IN_REG_LANE3[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[42]),
        .Q(TXDATA_IN_REG_LANE3[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[43]),
        .Q(TXDATA_IN_REG_LANE3[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[44]),
        .Q(TXDATA_IN_REG_LANE3[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[45]),
        .Q(TXDATA_IN_REG_LANE3[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[46]),
        .Q(TXDATA_IN_REG_LANE3[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[47]),
        .Q(TXDATA_IN_REG_LANE3[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[48]),
        .Q(TXDATA_IN_REG_LANE3[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[49]),
        .Q(TXDATA_IN_REG_LANE3[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[4]),
        .Q(TXDATA_IN_REG_LANE3[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[50]),
        .Q(TXDATA_IN_REG_LANE3[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[51]),
        .Q(TXDATA_IN_REG_LANE3[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[52]),
        .Q(TXDATA_IN_REG_LANE3[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[53]),
        .Q(TXDATA_IN_REG_LANE3[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[54]),
        .Q(TXDATA_IN_REG_LANE3[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[55]),
        .Q(TXDATA_IN_REG_LANE3[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[56]),
        .Q(TXDATA_IN_REG_LANE3[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[57]),
        .Q(TXDATA_IN_REG_LANE3[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[58]),
        .Q(TXDATA_IN_REG_LANE3[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[59]),
        .Q(TXDATA_IN_REG_LANE3[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[5]),
        .Q(TXDATA_IN_REG_LANE3[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[60]),
        .Q(TXDATA_IN_REG_LANE3[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[61]),
        .Q(TXDATA_IN_REG_LANE3[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[62]),
        .Q(TXDATA_IN_REG_LANE3[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[63]),
        .Q(TXDATA_IN_REG_LANE3[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[6]),
        .Q(TXDATA_IN_REG_LANE3[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[7]),
        .Q(TXDATA_IN_REG_LANE3[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[8]),
        .Q(TXDATA_IN_REG_LANE3[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN_LANE3[9]),
        .Q(TXDATA_IN_REG_LANE3[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[0]),
        .Q(TXDATA_IN_REG[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[10] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[10]),
        .Q(TXDATA_IN_REG[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[11] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[11]),
        .Q(TXDATA_IN_REG[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[12] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[12]),
        .Q(TXDATA_IN_REG[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[13] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[13]),
        .Q(TXDATA_IN_REG[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[14] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[14]),
        .Q(TXDATA_IN_REG[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[15] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[15]),
        .Q(TXDATA_IN_REG[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[16] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[16]),
        .Q(TXDATA_IN_REG[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[17] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[17]),
        .Q(TXDATA_IN_REG[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[18] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[18]),
        .Q(TXDATA_IN_REG[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[19] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[19]),
        .Q(TXDATA_IN_REG[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[1]),
        .Q(TXDATA_IN_REG[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[20] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[20]),
        .Q(TXDATA_IN_REG[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[21] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[21]),
        .Q(TXDATA_IN_REG[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[22] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[22]),
        .Q(TXDATA_IN_REG[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[23] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[23]),
        .Q(TXDATA_IN_REG[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[24] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[24]),
        .Q(TXDATA_IN_REG[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[25] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[25]),
        .Q(TXDATA_IN_REG[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[26] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[26]),
        .Q(TXDATA_IN_REG[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[27] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[27]),
        .Q(TXDATA_IN_REG[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[28] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[28]),
        .Q(TXDATA_IN_REG[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[29] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[29]),
        .Q(TXDATA_IN_REG[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[2] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[2]),
        .Q(TXDATA_IN_REG[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[30] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[30]),
        .Q(TXDATA_IN_REG[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[31] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[31]),
        .Q(TXDATA_IN_REG[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[32] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[32]),
        .Q(TXDATA_IN_REG[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[33] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[33]),
        .Q(TXDATA_IN_REG[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[34] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[34]),
        .Q(TXDATA_IN_REG[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[35] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[35]),
        .Q(TXDATA_IN_REG[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[36] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[36]),
        .Q(TXDATA_IN_REG[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[37] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[37]),
        .Q(TXDATA_IN_REG[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[38] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[38]),
        .Q(TXDATA_IN_REG[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[39] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[39]),
        .Q(TXDATA_IN_REG[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[3] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[3]),
        .Q(TXDATA_IN_REG[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[40] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[40]),
        .Q(TXDATA_IN_REG[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[41] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[41]),
        .Q(TXDATA_IN_REG[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[42] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[42]),
        .Q(TXDATA_IN_REG[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[43] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[43]),
        .Q(TXDATA_IN_REG[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[44] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[44]),
        .Q(TXDATA_IN_REG[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[45] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[45]),
        .Q(TXDATA_IN_REG[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[46] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[46]),
        .Q(TXDATA_IN_REG[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[47] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[47]),
        .Q(TXDATA_IN_REG[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[48] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[48]),
        .Q(TXDATA_IN_REG[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[49] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[49]),
        .Q(TXDATA_IN_REG[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[4] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[4]),
        .Q(TXDATA_IN_REG[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[50] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[50]),
        .Q(TXDATA_IN_REG[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[51] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[51]),
        .Q(TXDATA_IN_REG[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[52] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[52]),
        .Q(TXDATA_IN_REG[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[53] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[53]),
        .Q(TXDATA_IN_REG[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[54] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[54]),
        .Q(TXDATA_IN_REG[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[55] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[55]),
        .Q(TXDATA_IN_REG[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[56] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[56]),
        .Q(TXDATA_IN_REG[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[57] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[57]),
        .Q(TXDATA_IN_REG[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[58] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[58]),
        .Q(TXDATA_IN_REG[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[59] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[59]),
        .Q(TXDATA_IN_REG[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[5] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[5]),
        .Q(TXDATA_IN_REG[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[60] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[60]),
        .Q(TXDATA_IN_REG[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[61] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[61]),
        .Q(TXDATA_IN_REG[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[62] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[62]),
        .Q(TXDATA_IN_REG[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[63] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[63]),
        .Q(TXDATA_IN_REG[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[6] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[6]),
        .Q(TXDATA_IN_REG[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[7] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[7]),
        .Q(TXDATA_IN_REG[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[8] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[8]),
        .Q(TXDATA_IN_REG[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[9] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXDATA_IN[9]),
        .Q(TXDATA_IN_REG[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \TX_DATA[55]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\TX_DATA[55]_i_3_n_0 ),
        .I4(\txseq_counter_i_reg_n_0_[0] ),
        .O(stg5_reg));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I3(\TX_DATA[55]_i_3__0_n_0 ),
        .O(stg5_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I3(\TX_DATA[55]_i_3__1_n_0 ),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I3(\TX_DATA[55]_i_3__2_n_0 ),
        .O(stg5_reg_2));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \TX_DATA[55]_i_3 
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(\txseq_counter_i_reg_n_0_[4] ),
        .O(\TX_DATA[55]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \TX_DATA[55]_i_3__0 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .O(\TX_DATA[55]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \TX_DATA[55]_i_3__1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .O(\TX_DATA[55]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \TX_DATA[55]_i_3__2 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .O(\TX_DATA[55]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    TX_HEADER_1_i_2
       (.I0(\txseq_counter_i_reg_n_0_[0] ),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_1_i_2__0
       (.I0(\TX_DATA[55]_i_3__0_n_0 ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane1));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_1_i_2__1
       (.I0(\TX_DATA[55]_i_3__1_n_0 ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane2));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_1_i_2__2
       (.I0(\TX_DATA[55]_i_3__2_n_0 ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane3));
  FDRE #(
    .INIT(1'b0)) 
    allow_block_sync_propagation_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(allow_block_sync_propagation),
        .Q(allow_block_sync_propagation_reg_n_0),
        .R(p_27_in));
  aurora_64b66b_w256_1375Gbps_MULTI_GT aurora_64b66b_w256_1375Gbps_multi_gt_i
       (.E(sel),
        .HARD_ERR0__0(HARD_ERR0__0),
        .HARD_ERR_reg(cbcc_gtx0_lane1_i_n_79),
        .HARD_ERR_reg_0(cbcc_gtx0_lane3_i_n_78),
        .Q({\txseq_counter_i_lane3_reg_n_0_[6] ,\txseq_counter_i_lane3_reg_n_0_[5] ,\txseq_counter_i_lane3_reg_n_0_[4] ,\txseq_counter_i_lane3_reg_n_0_[3] ,\txseq_counter_i_lane3_reg_n_0_[2] ,\txseq_counter_i_lane3_reg_n_0_[1] ,\txseq_counter_i_lane3_reg_n_0_[0] }),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .drpaddr_in(drpaddr_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_refclk1(gt_refclk1),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .gtwiz_reset_rx_done_out(rx_fsm_resetdone_i),
        .gtwiz_reset_tx_done_out(tx_fsm_resetdone_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .gtwiz_userdata_rx_out({pre_rxdata_from_gtx_lane3_i,pre_rxdata_from_gtx_lane2_i,pre_rxdata_from_gtx_lane1_i,pre_rxdata_from_gtx_i}),
        .gtwiz_userdata_tx_in({scrambled_data_lane3_i,scrambled_data_lane2_i,scrambled_data_lane1_i,scrambled_data_i}),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ({\txseq_counter_i_lane1_reg_n_0_[6] ,\txseq_counter_i_lane1_reg_n_0_[5] ,\txseq_counter_i_lane1_reg_n_0_[4] ,\txseq_counter_i_lane1_reg_n_0_[3] ,\txseq_counter_i_lane1_reg_n_0_[2] ,\txseq_counter_i_lane1_reg_n_0_[1] ,\txseq_counter_i_lane1_reg_n_0_[0] }),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ({\txseq_counter_i_lane2_reg_n_0_[6] ,\txseq_counter_i_lane2_reg_n_0_[5] ,\txseq_counter_i_lane2_reg_n_0_[4] ,\txseq_counter_i_lane2_reg_n_0_[3] ,\txseq_counter_i_lane2_reg_n_0_[2] ,\txseq_counter_i_lane2_reg_n_0_[1] ,\txseq_counter_i_lane2_reg_n_0_[0] }),
        .i_in_meta_reg(gt_qplllock_quad1_i),
        .init_clk(init_clk),
        .loopback(loopback),
        .mmcm_not_locked(mmcm_not_locked),
        .new_gtx_rx_pcsreset_comb0(new_gtx_rx_pcsreset_comb0),
        .out(rxfsm_reset_i),
        .rst_drp(rst_drp),
        .rxbufstatus_out({int_gt_rxbufstatus[11],int_gt_rxbufstatus[8],int_gt_rxbufstatus[5],int_gt_rxbufstatus[2]}),
        .rxdatavalid_out({pre_rxdatavalid_lane3_i,pre_rxdatavalid_lane2_i,pre_rxdatavalid_lane1_i,pre_rxdatavalid_i}),
        .rxgearboxslip_in({rxgearboxslip_lane3_i,rxgearboxslip_lane2_i,rxgearboxslip_lane1_i,rxgearboxslip_i}),
        .rxheader_out({pre_rxheader_from_gtx_lane3_i,pre_rxheader_from_gtx_lane2_i,pre_rxheader_from_gtx_lane1_i,pre_rxheader_from_gtx_i}),
        .rxheadervalid_out({pre_rxheadervalid_lane3_i,pre_rxheadervalid_lane2_i,pre_rxheadervalid_lane1_i,pre_rxheadervalid_i}),
        .rxn(rxn),
        .rxp(rxp),
        .rxpolarity_in(sync_rx_polarity_r_j),
        .sync_clk(sync_clk),
        .tx_buf_err_i(tx_buf_err_i),
        .tx_out_clk(tx_out_clk),
        .txheader_in({txheader_lane3_r,txheader_lane2_r,txheader_lane1_r,txheader_r}),
        .txn(txn),
        .txp(txp),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM block_sync_sm_gtx0_i
       (.D(rxgearboxslip_i),
        .Q(rxheader_from_gtx_i),
        .SR(new_gtx_rx_pcsreset_comb),
        .blocksync_out_i(blocksync_out_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_i(rxheadervalid_i),
        .system_reset_r2(system_reset_r2));
  aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_27 block_sync_sm_gtx0_lane1_i
       (.D(rxgearboxslip_lane1_i),
        .Q(rxheader_from_gtx_lane1_i),
        .blocksync_out_lane1_i(blocksync_out_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane1_i(rxheadervalid_lane1_i),
        .system_reset_r2(system_reset_r2));
  aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_28 block_sync_sm_gtx0_lane2_i
       (.D(rxgearboxslip_lane2_i),
        .Q(rxheader_from_gtx_lane2_i),
        .blocksync_all_lanes_inrxclk(blocksync_all_lanes_inrxclk),
        .blocksync_out_i(blocksync_out_i),
        .blocksync_out_lane1_i(blocksync_out_lane1_i),
        .blocksync_out_lane2_i(blocksync_out_lane2_i),
        .blocksync_out_lane3_i(blocksync_out_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane2_i(rxheadervalid_lane2_i),
        .system_reset_r2(system_reset_r2));
  aurora_64b66b_w256_1375Gbps_BLOCK_SYNC_SM_29 block_sync_sm_gtx0_lane3_i
       (.D(rxgearboxslip_lane3_i),
        .Q(rxheader_from_gtx_lane3_i),
        .blocksync_out_lane3_i(blocksync_out_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane3_i(rxheadervalid_lane3_i),
        .system_reset_r2(system_reset_r2));
  FDRE #(
    .INIT(1'b0)) 
    blocksync_all_lanes_inrxclk_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_all_lanes_inrxclk),
        .Q(blocksync_all_lanes_inrxclk_q),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__1 cbcc_gtx0_i
       (.CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CB_flag_direct(CB_flag_direct_1),
        .CB_flag_direct_0(CB_flag_direct_0),
        .CB_flag_direct_1(CB_flag_direct),
        .CB_flag_flopped_reg_0({p_0_in11_in_11,p_0_in13_in_10,p_0_in9_in_9}),
        .CB_flag_flopped_reg_1({p_0_in11_in,p_0_in13_in,p_0_in9_in}),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxheader_to_fifo_i,rxdata_to_fifo_i}),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .FINAL_GATER_FOR_FIFO_DIN_i_2_0(all_start_cb_writes_i),
        .Q({p_0_in13_in_5,p_0_in15_in}),
        .RXHEADER_OUT_ERR(RXHEADER_OUT_ERR),
        .RXLOSSOFSYNC_OUT(RXLOSSOFSYNC_OUT),
        .SR(new_gtx_rx_pcsreset_comb),
        .any_vld_btf_i(any_vld_btf_i),
        .bit_err_chan_bond_i(bit_err_chan_bond_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[0]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_1),
        .do_rd_en_i(do_rd_en_i),
        .\fifo_dout_reg[63]_0 (Q),
        .\fifo_dout_reg[64]_0 (\fifo_dout_reg[64] ),
        .final_gater_for_fifo_din_i(final_gater_for_fifo_din_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hold_reg_r_reg_0(hold_reg_r_reg),
        .in0(rxlossofsync_out_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .master_do_rd_en(master_do_rd_en),
        .master_do_rd_en_reg_0(cbcc_gtx0_i_n_84),
        .master_do_rd_en_reg_1(cbcc_gtx0_i_n_85),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in),
        .rx_header_1_i_3(rx_header_1_i_3),
        .rxbuferr_out_i(rxbuferr_out_i),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_i(rxdatavalid_to_fifo_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .srst(cbcc_data_srst),
        .user_clk(user_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1));
  aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__2 cbcc_gtx0_lane1_i
       (.CB_detect(CB_detect_18),
        .CB_detect0(CB_detect0_17),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_2),
        .CB_flag_direct(CB_flag_direct_1),
        .CC_detect_dlyd1(CC_detect_dlyd1_3),
        .CC_detect_pulse_i(CC_detect_pulse_i_20),
        .CHANNEL_UP_RX_IF(CHANNEL_UP_RX_IF),
        .CHANNEL_UP_TX_IF(CHANNEL_UP_TX_IF),
        .D({rxheader_to_fifo_lane1_i,rxdata_to_fifo_lane1_i}),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .FINAL_GATER_FOR_FIFO_DIN_i_2__0_0(all_start_cb_writes_i),
        .Q({p_0_in11_in,p_0_in13_in,p_0_in9_in,\fifo_dout_reg[63] }),
        .RXHEADER_OUT_ERR_LANE1(RXHEADER_OUT_ERR_LANE1),
        .RXLOSSOFSYNC_OUT_LANE1(RXLOSSOFSYNC_OUT_LANE1),
        .SR(new_gtx_rx_pcsreset_comb),
        .START_CB_WRITES_OUT_reg_0(cbcc_gtx0_lane1_i_n_11),
        .START_CB_WRITES_OUT_reg_1(all_vld_btf_flag_i),
        .any_vld_btf_lane1_i(any_vld_btf_lane1_i),
        .bit_err_chan_bond_lane1_i(bit_err_chan_bond_lane1_i),
        .\cb_rxdatavalid_cnt_reg[0] (cbcc_gtx0_i_n_84),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[1]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_2),
        .do_rd_en_lane1_i(do_rd_en_lane1_i),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .\fifo_dout_reg[64]_0 (\fifo_dout_reg[64]_0 ),
        .final_gater_for_fifo_din_lane1_i(final_gater_for_fifo_din_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_usr0(hard_err_usr0),
        .hard_err_usr_reg(rx_elastic_buf_err),
        .hard_err_usr_reg_0(cbcc_gtx0_lane3_i_n_78),
        .hold_reg_r_reg_0(hold_reg_r_reg_0),
        .in0(rxlossofsync_out_lane1_q),
        .init_clk(init_clk),
        .link_reset_1_c(link_reset_1_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r ),
        .master_stop_prev_cb_r_reg(cbcc_gtx0_lane2_i_n_83),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in_19),
        .rx_header_1_i_2(rx_header_1_i_2),
        .rxbuferr_out_i(rxbuferr_out_i),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_lane1_i(rxdatavalid_to_fifo_lane1_i),
        .srst(cbcc_data_srst),
        .start_cb_writes_lane2_i(start_cb_writes_lane2_i),
        .tx_buf_err_i(tx_buf_err_i),
        .user_clk(user_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_4),
        .wr_err_rd_clk_sync_reg_0(cbcc_gtx0_lane1_i_n_79));
  aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING__parameterized0 cbcc_gtx0_lane2_i
       (.CB_detect(CB_detect_22),
        .CB_detect0(CB_detect0_21),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_6),
        .CB_flag_direct(CB_flag_direct_0),
        .CC_detect_dlyd1(CC_detect_dlyd1_7),
        .CC_detect_pulse_i(CC_detect_pulse_i_23),
        .\CHBONDO_reg[0]_0 (cbcc_gtx0_lane2_i_n_83),
        .\CHBONDO_reg[0]_1 (cbcc_gtx0_lane2_i_n_87),
        .\CHBONDO_reg[1]_0 (chbondi),
        .D({rxdatavalid_to_fifo_lane2_i,rxheader_to_fifo_lane2_i,rxdata_to_fifo_lane2_i}),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .FINAL_GATER_FOR_FIFO_DIN_reg_0(all_start_cb_writes_i),
        .LINK_RESET_OUT0(LINK_RESET_OUT0),
        .LINK_RESET_OUT_reg(cdr_reset_fsm_lnkreset_reg_n_0),
        .Q({p_0_in13_in_5,p_0_in15_in,\fifo_dout_reg[63]_0 }),
        .RXHEADER_OUT_ERR_LANE2(RXHEADER_OUT_ERR_LANE2),
        .RXLOSSOFSYNC_OUT_LANE2(RXLOSSOFSYNC_OUT_LANE2),
        .SR(p_27_in),
        .any_vld_btf_lane2_i(any_vld_btf_lane2_i),
        .bit_err_chan_bond_lane2_i(bit_err_chan_bond_lane2_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[2]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_3),
        .do_rd_en_lane2_i(do_rd_en_lane2_i),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .enchansync_dlyd_i_0(enchansync_dlyd_i_15),
        .\fifo_dout_reg[64]_0 (\fifo_dout_reg[64]_1 ),
        .final_gater_for_fifo_din_lane2_i(final_gater_for_fifo_din_lane2_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_rst_int(hard_err_rst_int),
        .hold_reg_r_reg_0(hold_reg_r_reg_1),
        .in0(rxlossofsync_out_lane2_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .link_reset_1_c(link_reset_1_c),
        .link_reset_2_c(link_reset_2_c),
        .link_reset_3_c(link_reset_3_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r ),
        .master_stop_prev_cb_r_1(\slave.slave/master_stop_prev_cb_r_12 ),
        .out(master_do_rd_en_i),
        .p_9_in(p_9_in),
        .rst_drp(rst_drp),
        .rx_header_1_i_1(rx_header_1_i_1),
        .rxbuferr_out_lane2_i(rxbuferr_out_lane2_i),
        .srst(cbcc_data_srst),
        .start_cb_writes_lane2_i(start_cb_writes_lane2_i),
        .start_cb_writes_mastr_reg_0(all_vld_btf_flag_i),
        .user_clk(user_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_8),
        .\valid_btf_detect_extend_r_reg[4]_0 (new_gtx_rx_pcsreset_comb));
  aurora_64b66b_w256_1375Gbps_CLOCK_CORRECTION_CHANNEL_BONDING cbcc_gtx0_lane3_i
       (.CB_detect(CB_detect_25),
        .CB_detect0(CB_detect0_24),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_13),
        .CB_flag_direct(CB_flag_direct),
        .CC_detect_dlyd1(CC_detect_dlyd1_14),
        .CC_detect_pulse_i(CC_detect_pulse_i_27),
        .D({rxheader_to_fifo_lane3_i,rxdata_to_fifo_lane3_i}),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .FINAL_GATER_FOR_FIFO_DIN_i_2__1_0(all_start_cb_writes_i),
        .Q({p_0_in11_in_11,p_0_in13_in_10,p_0_in9_in_9,\fifo_dout_reg[63]_1 }),
        .RXHEADER_OUT_ERR_LANE3(RXHEADER_OUT_ERR_LANE3),
        .RXLOSSOFSYNC_OUT_LANE3(RXLOSSOFSYNC_OUT_LANE3),
        .any_vld_btf_lane3_i(any_vld_btf_lane3_i),
        .bit_err_chan_bond_lane3_i(bit_err_chan_bond_lane3_i),
        .\cb_rxdatavalid_cnt_reg[0] (cbcc_gtx0_i_n_85),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[3]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_4),
        .\count_for_reset_r_reg[23]_1 (cdr_reset_fsm_lnkreset_reg_n_0),
        .do_rd_en_lane3_i(do_rd_en_lane3_i),
        .enchansync_dlyd_i(enchansync_dlyd_i_15),
        .\fifo_dout_reg[64]_0 (\fifo_dout_reg[64]_2 ),
        .final_gater_for_fifo_din_lane3_i(final_gater_for_fifo_din_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_usr_reg(rx_elastic_buf_err),
        .hold_reg_r_reg_0(hold_reg_r_reg_2),
        .in0(rxlossofsync_out_lane3_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .link_reset_1_c(link_reset_1_c),
        .link_reset_2_c(link_reset_2_c),
        .link_reset_3_c(link_reset_3_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r_12 ),
        .master_stop_prev_cb_r_reg(cbcc_gtx0_lane2_i_n_87),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in_26),
        .rst_drp(rst_drp),
        .rx_header_1_i_0(rx_header_1_i_0),
        .rxbuferr_out_lane2_i(rxbuferr_out_lane2_i),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_lane3_i(rxdatavalid_to_fifo_lane3_i),
        .rxfsm_reset_i(rxfsm_reset_i),
        .srst(cbcc_data_srst),
        .user_clk(user_clk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_16),
        .\valid_btf_detect_extend_r_reg[4]_0 (new_gtx_rx_pcsreset_comb),
        .wr_err_rd_clk_sync_reg_0(cbcc_gtx0_lane3_i_n_78));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cdr_reset_fsm_cntr_r[0]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .O(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \cdr_reset_fsm_cntr_r[1]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \cdr_reset_fsm_cntr_r[2]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[0]),
        .I1(cdr_reset_fsm_cntr_r[1]),
        .I2(cdr_reset_fsm_cntr_r[2]),
        .I3(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[3]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[2]),
        .I2(cdr_reset_fsm_cntr_r[1]),
        .I3(cdr_reset_fsm_cntr_r[0]),
        .I4(cdr_reset_fsm_cntr_r[3]),
        .O(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \cdr_reset_fsm_cntr_r[4]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .I4(cdr_reset_fsm_cntr_r[4]),
        .I5(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \cdr_reset_fsm_cntr_r[5]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .O(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[6]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .O(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cdr_reset_fsm_cntr_r[7]_i_1 
       (.I0(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I1(allow_block_sync_propagation),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \cdr_reset_fsm_cntr_r[7]_i_2 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .I5(cdr_reset_fsm_cntr_r[7]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \cdr_reset_fsm_cntr_r[7]_i_3 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(cdr_reset_fsm_cntr_r[4]),
        .I3(cdr_reset_fsm_cntr_r[6]),
        .I4(cdr_reset_fsm_cntr_r[7]),
        .I5(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \cdr_reset_fsm_cntr_r[7]_i_4 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[0]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[1]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[2]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[3]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[4]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[5]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[6]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[7]),
        .R(p_27_in));
  LUT3 #(
    .INIT(8'hFE)) 
    cdr_reset_fsm_lnkreset_i_1
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I2(allow_block_sync_propagation),
        .O(cdr_reset_fsm_lnkreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cdr_reset_fsm_lnkreset_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(cdr_reset_fsm_lnkreset),
        .Q(cdr_reset_fsm_lnkreset_reg_n_0),
        .R(p_27_in));
  aurora_64b66b_w256_1375Gbps_common_logic_cbcc common_logic_cbcc_i
       (.SR(common_reset_cbcc_i_n_6),
        .all_start_cb_writes_out_reg_0(cbcc_gtx0_lane1_i_n_11),
        .all_vld_btf_flag_i(all_vld_btf_flag_i),
        .any_vld_btf_i(any_vld_btf_i),
        .any_vld_btf_lane1_i(any_vld_btf_lane1_i),
        .any_vld_btf_lane2_i(any_vld_btf_lane2_i),
        .any_vld_btf_lane3_i(any_vld_btf_lane3_i),
        .cb_bit_err_i(cb_bit_err_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .\first_cb_to_fifo_wr_window_reg[0]_0 (final_gater_for_fifo_din_lane1_i),
        .\first_cb_to_fifo_wr_window_reg[0]_1 (final_gater_for_fifo_din_lane2_i),
        .\first_cb_to_fifo_wr_window_reg[0]_2 (final_gater_for_fifo_din_lane3_i),
        .\first_cb_to_fifo_wr_window_reg[0]_3 (final_gater_for_fifo_din_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(all_start_cb_writes_i),
        .master_do_rd_en_i(master_do_rd_en_i),
        .master_do_rd_en_out_reg_0(do_rd_en_lane2_i),
        .out(bit_err_chan_bond_lane3_i),
        .second_cb_write_failed_reg_0(bit_err_chan_bond_i),
        .second_cb_write_failed_reg_1(bit_err_chan_bond_lane1_i),
        .second_cb_write_failed_reg_2(bit_err_chan_bond_lane2_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_common_reset_cbcc common_reset_cbcc_i
       (.CHAN_BOND_RESET(CHAN_BOND_RESET),
        .EN_CHAN_SYNC(EN_CHAN_SYNC),
        .SR(common_reset_cbcc_i_n_6),
        .cb_bit_err_i(cb_bit_err_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .\first_cb_to_fifo_wr_window_reg[3] (final_gater_for_fifo_din_lane1_i),
        .\first_cb_to_fifo_wr_window_reg[3]_0 (final_gater_for_fifo_din_i),
        .\first_cb_to_fifo_wr_window_reg[3]_1 (final_gater_for_fifo_din_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(final_gater_for_fifo_din_lane2_i),
        .srst(cbcc_data_srst),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(new_gtx_rx_pcsreset_comb),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B descrambler_64b66b_gtx0_i
       (.CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CB_detect_dlyd0p5_reg(rxheader_to_fifo_i),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .E(rxdatavalid_i),
        .Q(rxdata_to_fifo_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_q),
        .p_6_in(p_6_in),
        .rxdatavalid_to_fifo_i(rxdatavalid_to_fifo_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_i));
  aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_30 descrambler_64b66b_gtx0_lane1_i
       (.CB_detect(CB_detect_18),
        .CB_detect0(CB_detect0_17),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_2),
        .CB_detect_dlyd0p5_reg(rxheader_to_fifo_lane1_i),
        .CC_detect_dlyd1(CC_detect_dlyd1_3),
        .CC_detect_pulse_i(CC_detect_pulse_i_20),
        .E(rxdatavalid_lane1_i),
        .Q(rxdata_to_fifo_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane1_q),
        .p_6_in(p_6_in_19),
        .rxdatavalid_to_fifo_lane1_i(rxdatavalid_to_fifo_lane1_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_lane1_i));
  aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_31 descrambler_64b66b_gtx0_lane2_i
       (.CB_detect(CB_detect_22),
        .CB_detect0(CB_detect0_21),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_6),
        .CC_detect_dlyd1(CC_detect_dlyd1_7),
        .CC_detect_pulse_i(CC_detect_pulse_i_23),
        .D({rxdatavalid_to_fifo_lane2_i,rxheader_to_fifo_lane2_i}),
        .E(rxdatavalid_lane2_i),
        .Q(rxdata_to_fifo_lane2_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane2_q),
        .p_9_in(p_9_in),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_lane2_i));
  aurora_64b66b_w256_1375Gbps_DESCRAMBLER_64B66B_32 descrambler_64b66b_gtx0_lane3_i
       (.CB_detect(CB_detect_25),
        .CB_detect0(CB_detect0_24),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_13),
        .CC_detect_dlyd1(CC_detect_dlyd1_14),
        .CC_detect_pulse_i(CC_detect_pulse_i_27),
        .E(rxdatavalid_lane3_i),
        .Q(rxheader_to_fifo_lane3_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane3_q),
        .p_6_in(p_6_in_26),
        .rxdatavalid_to_fifo_lane3_i(rxdatavalid_to_fifo_lane3_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_lane3_i));
  LUT1 #(
    .INIT(2'h1)) 
    \hard_err_cntr_r[0]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .O(p_0_in__20[0]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hard_err_cntr_r[1]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .I1(hard_err_cntr_r_reg[1]),
        .O(p_0_in__20[1]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \hard_err_cntr_r[2]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(p_0_in__20[2]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \hard_err_cntr_r[3]_i_1 
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[1]),
        .I3(hard_err_cntr_r_reg[3]),
        .O(p_0_in__20[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \hard_err_cntr_r[4]_i_1 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[1]),
        .I2(hard_err_cntr_r_reg[0]),
        .I3(hard_err_cntr_r_reg[2]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(p_0_in__20[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \hard_err_cntr_r[5]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[4]),
        .I5(hard_err_cntr_r_reg[5]),
        .O(p_0_in__20[5]));
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \hard_err_cntr_r[6]_i_1 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[6]),
        .O(p_0_in__20[6]));
  LUT6 #(
    .INIT(64'hBFFFFFFF40000000)) 
    \hard_err_cntr_r[7]_i_3 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[5]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[4]),
        .I4(hard_err_cntr_r_reg[6]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(p_0_in__20[7]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \hard_err_cntr_r[7]_i_4 
       (.I0(hard_err_cntr_r_reg[6]),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[7]),
        .O(\hard_err_cntr_r[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hard_err_cntr_r[7]_i_5 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[7]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(\hard_err_cntr_r[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \hard_err_cntr_r[7]_i_6 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(\hard_err_cntr_r[7]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[0]),
        .Q(hard_err_cntr_r_reg[0]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[1]),
        .Q(hard_err_cntr_r_reg[1]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[2]),
        .Q(hard_err_cntr_r_reg[2]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[3]),
        .Q(hard_err_cntr_r_reg[3]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[4]),
        .Q(hard_err_cntr_r_reg[4]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[5]),
        .Q(hard_err_cntr_r_reg[5]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[6]),
        .Q(hard_err_cntr_r_reg[6]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__20[7]),
        .Q(hard_err_cntr_r_reg[7]),
        .R(HPCNT_RESET_IN));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    hard_err_rst_int_i_3
       (.I0(hard_err_rst_int_i_4_n_0),
        .I1(hard_err_cntr_r_reg[2]),
        .I2(hard_err_cntr_r_reg[0]),
        .I3(hard_err_cntr_r_reg[1]),
        .O(hard_err_rst_int0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFE)) 
    hard_err_rst_int_i_4
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[4]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[5]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(hard_err_rst_int_i_4_n_0));
  FDRE hard_err_rst_int_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_cdc_hard_err_init_n_1),
        .Q(hard_err_rst_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    hard_err_usr_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(hard_err_usr0),
        .Q(hard_err_usr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    new_gtx_rx_pcsreset_comb_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(new_gtx_rx_pcsreset_comb0),
        .Q(new_gtx_rx_pcsreset_comb),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[0]),
        .Q(pos_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[10]),
        .Q(pos_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[11]),
        .Q(pos_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[12]),
        .Q(pos_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[13]),
        .Q(pos_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[14]),
        .Q(pos_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[15]),
        .Q(pos_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[16]),
        .Q(pos_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[17]),
        .Q(pos_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[18]),
        .Q(pos_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[19]),
        .Q(pos_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[1]),
        .Q(pos_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[20]),
        .Q(pos_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[21]),
        .Q(pos_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[22]),
        .Q(pos_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[23]),
        .Q(pos_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[24]),
        .Q(pos_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[25]),
        .Q(pos_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[26]),
        .Q(pos_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[27]),
        .Q(pos_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[28]),
        .Q(pos_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[29]),
        .Q(pos_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[2]),
        .Q(pos_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[30]),
        .Q(pos_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[31]),
        .Q(pos_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[32]),
        .Q(pos_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[33]),
        .Q(pos_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[34]),
        .Q(pos_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[35]),
        .Q(pos_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[36]),
        .Q(pos_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[37]),
        .Q(pos_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[38]),
        .Q(pos_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[39]),
        .Q(pos_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[3]),
        .Q(pos_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[40]),
        .Q(pos_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[41]),
        .Q(pos_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[42]),
        .Q(pos_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[43]),
        .Q(pos_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[44]),
        .Q(pos_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[45]),
        .Q(pos_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[46]),
        .Q(pos_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[47]),
        .Q(pos_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[48]),
        .Q(pos_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[49]),
        .Q(pos_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[4]),
        .Q(pos_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[50]),
        .Q(pos_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[51]),
        .Q(pos_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[52]),
        .Q(pos_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[53]),
        .Q(pos_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[54]),
        .Q(pos_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[55]),
        .Q(pos_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[56]),
        .Q(pos_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[57]),
        .Q(pos_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[58]),
        .Q(pos_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[59]),
        .Q(pos_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[5]),
        .Q(pos_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[60]),
        .Q(pos_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[61]),
        .Q(pos_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[62]),
        .Q(pos_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[63]),
        .Q(pos_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[6]),
        .Q(pos_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[7]),
        .Q(pos_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[8]),
        .Q(pos_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[9]),
        .Q(pos_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[0]),
        .Q(pos_rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[10]),
        .Q(pos_rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[11]),
        .Q(pos_rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[12]),
        .Q(pos_rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[13]),
        .Q(pos_rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[14]),
        .Q(pos_rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[15]),
        .Q(pos_rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[16]),
        .Q(pos_rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[17]),
        .Q(pos_rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[18]),
        .Q(pos_rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[19]),
        .Q(pos_rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[1]),
        .Q(pos_rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[20]),
        .Q(pos_rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[21]),
        .Q(pos_rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[22]),
        .Q(pos_rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[23]),
        .Q(pos_rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[24]),
        .Q(pos_rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[25]),
        .Q(pos_rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[26]),
        .Q(pos_rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[27]),
        .Q(pos_rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[28]),
        .Q(pos_rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[29]),
        .Q(pos_rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[2]),
        .Q(pos_rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[30]),
        .Q(pos_rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[31]),
        .Q(pos_rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[32]),
        .Q(pos_rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[33]),
        .Q(pos_rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[34]),
        .Q(pos_rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[35]),
        .Q(pos_rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[36]),
        .Q(pos_rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[37]),
        .Q(pos_rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[38]),
        .Q(pos_rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[39]),
        .Q(pos_rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[3]),
        .Q(pos_rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[40]),
        .Q(pos_rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[41]),
        .Q(pos_rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[42]),
        .Q(pos_rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[43]),
        .Q(pos_rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[44]),
        .Q(pos_rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[45]),
        .Q(pos_rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[46]),
        .Q(pos_rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[47]),
        .Q(pos_rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[48]),
        .Q(pos_rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[49]),
        .Q(pos_rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[4]),
        .Q(pos_rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[50]),
        .Q(pos_rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[51]),
        .Q(pos_rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[52]),
        .Q(pos_rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[53]),
        .Q(pos_rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[54]),
        .Q(pos_rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[55]),
        .Q(pos_rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[56]),
        .Q(pos_rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[57]),
        .Q(pos_rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[58]),
        .Q(pos_rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[59]),
        .Q(pos_rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[5]),
        .Q(pos_rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[60]),
        .Q(pos_rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[61]),
        .Q(pos_rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[62]),
        .Q(pos_rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[63]),
        .Q(pos_rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[6]),
        .Q(pos_rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[7]),
        .Q(pos_rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[8]),
        .Q(pos_rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[9]),
        .Q(pos_rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[0]),
        .Q(pos_rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[10]),
        .Q(pos_rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[11]),
        .Q(pos_rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[12]),
        .Q(pos_rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[13]),
        .Q(pos_rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[14]),
        .Q(pos_rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[15]),
        .Q(pos_rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[16]),
        .Q(pos_rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[17]),
        .Q(pos_rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[18]),
        .Q(pos_rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[19]),
        .Q(pos_rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[1]),
        .Q(pos_rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[20]),
        .Q(pos_rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[21]),
        .Q(pos_rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[22]),
        .Q(pos_rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[23]),
        .Q(pos_rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[24]),
        .Q(pos_rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[25]),
        .Q(pos_rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[26]),
        .Q(pos_rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[27]),
        .Q(pos_rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[28]),
        .Q(pos_rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[29]),
        .Q(pos_rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[2]),
        .Q(pos_rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[30]),
        .Q(pos_rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[31]),
        .Q(pos_rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[32]),
        .Q(pos_rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[33]),
        .Q(pos_rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[34]),
        .Q(pos_rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[35]),
        .Q(pos_rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[36]),
        .Q(pos_rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[37]),
        .Q(pos_rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[38]),
        .Q(pos_rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[39]),
        .Q(pos_rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[3]),
        .Q(pos_rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[40]),
        .Q(pos_rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[41]),
        .Q(pos_rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[42]),
        .Q(pos_rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[43]),
        .Q(pos_rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[44]),
        .Q(pos_rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[45]),
        .Q(pos_rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[46]),
        .Q(pos_rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[47]),
        .Q(pos_rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[48]),
        .Q(pos_rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[49]),
        .Q(pos_rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[4]),
        .Q(pos_rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[50]),
        .Q(pos_rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[51]),
        .Q(pos_rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[52]),
        .Q(pos_rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[53]),
        .Q(pos_rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[54]),
        .Q(pos_rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[55]),
        .Q(pos_rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[56]),
        .Q(pos_rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[57]),
        .Q(pos_rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[58]),
        .Q(pos_rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[59]),
        .Q(pos_rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[5]),
        .Q(pos_rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[60]),
        .Q(pos_rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[61]),
        .Q(pos_rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[62]),
        .Q(pos_rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[63]),
        .Q(pos_rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[6]),
        .Q(pos_rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[7]),
        .Q(pos_rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[8]),
        .Q(pos_rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[9]),
        .Q(pos_rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[0]),
        .Q(pos_rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[10]),
        .Q(pos_rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[11]),
        .Q(pos_rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[12]),
        .Q(pos_rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[13]),
        .Q(pos_rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[14]),
        .Q(pos_rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[15]),
        .Q(pos_rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[16]),
        .Q(pos_rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[17]),
        .Q(pos_rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[18]),
        .Q(pos_rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[19]),
        .Q(pos_rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[1]),
        .Q(pos_rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[20]),
        .Q(pos_rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[21]),
        .Q(pos_rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[22]),
        .Q(pos_rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[23]),
        .Q(pos_rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[24]),
        .Q(pos_rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[25]),
        .Q(pos_rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[26]),
        .Q(pos_rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[27]),
        .Q(pos_rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[28]),
        .Q(pos_rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[29]),
        .Q(pos_rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[2]),
        .Q(pos_rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[30]),
        .Q(pos_rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[31]),
        .Q(pos_rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[32]),
        .Q(pos_rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[33]),
        .Q(pos_rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[34]),
        .Q(pos_rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[35]),
        .Q(pos_rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[36]),
        .Q(pos_rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[37]),
        .Q(pos_rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[38]),
        .Q(pos_rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[39]),
        .Q(pos_rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[3]),
        .Q(pos_rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[40]),
        .Q(pos_rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[41]),
        .Q(pos_rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[42]),
        .Q(pos_rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[43]),
        .Q(pos_rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[44]),
        .Q(pos_rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[45]),
        .Q(pos_rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[46]),
        .Q(pos_rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[47]),
        .Q(pos_rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[48]),
        .Q(pos_rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[49]),
        .Q(pos_rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[4]),
        .Q(pos_rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[50]),
        .Q(pos_rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[51]),
        .Q(pos_rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[52]),
        .Q(pos_rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[53]),
        .Q(pos_rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[54]),
        .Q(pos_rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[55]),
        .Q(pos_rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[56]),
        .Q(pos_rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[57]),
        .Q(pos_rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[58]),
        .Q(pos_rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[59]),
        .Q(pos_rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[5]),
        .Q(pos_rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[60]),
        .Q(pos_rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[61]),
        .Q(pos_rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[62]),
        .Q(pos_rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[63]),
        .Q(pos_rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[6]),
        .Q(pos_rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[7]),
        .Q(pos_rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[8]),
        .Q(pos_rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[9]),
        .Q(pos_rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_i),
        .Q(pos_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane1_i),
        .Q(pos_rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane2_i),
        .Q(pos_rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane3_i),
        .Q(pos_rxdatavalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[0]),
        .Q(pos_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[1]),
        .Q(pos_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane1_i),
        .D(pre_r1_rxheader_from_gtx_lane1_i[0]),
        .Q(pos_rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane1_i),
        .D(pre_r1_rxheader_from_gtx_lane1_i[1]),
        .Q(pos_rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane2_i),
        .D(pre_r1_rxheader_from_gtx_lane2_i[0]),
        .Q(pos_rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane2_i),
        .D(pre_r1_rxheader_from_gtx_lane2_i[1]),
        .Q(pos_rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane3_i),
        .D(pre_r1_rxheader_from_gtx_lane3_i[0]),
        .Q(pos_rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane3_i),
        .D(pre_r1_rxheader_from_gtx_lane3_i[1]),
        .Q(pos_rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_i),
        .Q(pos_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane1_i),
        .Q(pos_rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane2_i),
        .Q(pos_rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane3_i),
        .Q(pos_rxheadervalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[0]),
        .Q(pre_r1_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[10]),
        .Q(pre_r1_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[11]),
        .Q(pre_r1_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[12]),
        .Q(pre_r1_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[13]),
        .Q(pre_r1_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[14]),
        .Q(pre_r1_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[15]),
        .Q(pre_r1_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[16]),
        .Q(pre_r1_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[17]),
        .Q(pre_r1_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[18]),
        .Q(pre_r1_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[19]),
        .Q(pre_r1_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[1]),
        .Q(pre_r1_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[20]),
        .Q(pre_r1_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[21]),
        .Q(pre_r1_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[22]),
        .Q(pre_r1_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[23]),
        .Q(pre_r1_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[24]),
        .Q(pre_r1_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[25]),
        .Q(pre_r1_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[26]),
        .Q(pre_r1_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[27]),
        .Q(pre_r1_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[28]),
        .Q(pre_r1_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[29]),
        .Q(pre_r1_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[2]),
        .Q(pre_r1_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[30]),
        .Q(pre_r1_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[31]),
        .Q(pre_r1_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[32]),
        .Q(pre_r1_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[33]),
        .Q(pre_r1_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[34]),
        .Q(pre_r1_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[35]),
        .Q(pre_r1_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[36]),
        .Q(pre_r1_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[37]),
        .Q(pre_r1_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[38]),
        .Q(pre_r1_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[39]),
        .Q(pre_r1_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[3]),
        .Q(pre_r1_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[40]),
        .Q(pre_r1_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[41]),
        .Q(pre_r1_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[42]),
        .Q(pre_r1_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[43]),
        .Q(pre_r1_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[44]),
        .Q(pre_r1_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[45]),
        .Q(pre_r1_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[46]),
        .Q(pre_r1_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[47]),
        .Q(pre_r1_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[48]),
        .Q(pre_r1_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[49]),
        .Q(pre_r1_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[4]),
        .Q(pre_r1_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[50]),
        .Q(pre_r1_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[51]),
        .Q(pre_r1_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[52]),
        .Q(pre_r1_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[53]),
        .Q(pre_r1_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[54]),
        .Q(pre_r1_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[55]),
        .Q(pre_r1_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[56]),
        .Q(pre_r1_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[57]),
        .Q(pre_r1_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[58]),
        .Q(pre_r1_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[59]),
        .Q(pre_r1_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[5]),
        .Q(pre_r1_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[60]),
        .Q(pre_r1_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[61]),
        .Q(pre_r1_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[62]),
        .Q(pre_r1_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[63]),
        .Q(pre_r1_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[6]),
        .Q(pre_r1_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[7]),
        .Q(pre_r1_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[8]),
        .Q(pre_r1_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[9]),
        .Q(pre_r1_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_i),
        .Q(pre_r1_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane1_i),
        .Q(pre_r1_rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane2_i),
        .Q(pre_r1_rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane3_i),
        .Q(pre_r1_rxdatavalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[0]),
        .Q(pre_r1_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[1]),
        .Q(pre_r1_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane1_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane1_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane2_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane2_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane3_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane3_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_i),
        .Q(pre_r1_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane1_i),
        .Q(pre_r1_rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane2_i),
        .Q(pre_r1_rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane3_i),
        .Q(pre_r1_rxheadervalid_lane3_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rx_elastic_buf_err_int
       (.I0(int_gt_rxbufstatus[8]),
        .I1(int_gt_rxbufstatus[2]),
        .I2(int_gt_rxbufstatus[5]),
        .I3(int_gt_rxbufstatus[11]),
        .O(rx_elastic_buf_err_int__0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[0]),
        .Q(rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[10]),
        .Q(rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[11]),
        .Q(rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[12]),
        .Q(rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[13]),
        .Q(rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[14]),
        .Q(rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[15]),
        .Q(rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[16]),
        .Q(rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[17]),
        .Q(rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[18]),
        .Q(rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[19]),
        .Q(rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[1]),
        .Q(rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[20]),
        .Q(rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[21]),
        .Q(rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[22]),
        .Q(rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[23]),
        .Q(rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[24]),
        .Q(rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[25]),
        .Q(rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[26]),
        .Q(rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[27]),
        .Q(rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[28]),
        .Q(rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[29]),
        .Q(rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[2]),
        .Q(rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[30]),
        .Q(rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[31]),
        .Q(rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[32]),
        .Q(rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[33]),
        .Q(rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[34]),
        .Q(rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[35]),
        .Q(rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[36]),
        .Q(rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[37]),
        .Q(rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[38]),
        .Q(rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[39]),
        .Q(rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[3]),
        .Q(rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[40]),
        .Q(rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[41]),
        .Q(rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[42]),
        .Q(rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[43]),
        .Q(rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[44]),
        .Q(rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[45]),
        .Q(rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[46]),
        .Q(rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[47]),
        .Q(rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[48]),
        .Q(rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[49]),
        .Q(rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[4]),
        .Q(rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[50]),
        .Q(rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[51]),
        .Q(rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[52]),
        .Q(rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[53]),
        .Q(rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[54]),
        .Q(rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[55]),
        .Q(rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[56]),
        .Q(rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[57]),
        .Q(rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[58]),
        .Q(rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[59]),
        .Q(rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[5]),
        .Q(rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[60]),
        .Q(rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[61]),
        .Q(rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[62]),
        .Q(rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[63]),
        .Q(rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[6]),
        .Q(rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[7]),
        .Q(rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[8]),
        .Q(rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[9]),
        .Q(rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[0]),
        .Q(rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[10]),
        .Q(rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[11]),
        .Q(rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[12]),
        .Q(rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[13]),
        .Q(rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[14]),
        .Q(rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[15]),
        .Q(rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[16]),
        .Q(rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[17]),
        .Q(rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[18]),
        .Q(rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[19]),
        .Q(rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[1]),
        .Q(rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[20]),
        .Q(rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[21]),
        .Q(rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[22]),
        .Q(rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[23]),
        .Q(rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[24]),
        .Q(rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[25]),
        .Q(rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[26]),
        .Q(rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[27]),
        .Q(rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[28]),
        .Q(rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[29]),
        .Q(rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[2]),
        .Q(rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[30]),
        .Q(rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[31]),
        .Q(rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[32]),
        .Q(rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[33]),
        .Q(rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[34]),
        .Q(rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[35]),
        .Q(rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[36]),
        .Q(rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[37]),
        .Q(rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[38]),
        .Q(rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[39]),
        .Q(rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[3]),
        .Q(rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[40]),
        .Q(rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[41]),
        .Q(rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[42]),
        .Q(rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[43]),
        .Q(rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[44]),
        .Q(rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[45]),
        .Q(rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[46]),
        .Q(rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[47]),
        .Q(rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[48]),
        .Q(rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[49]),
        .Q(rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[4]),
        .Q(rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[50]),
        .Q(rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[51]),
        .Q(rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[52]),
        .Q(rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[53]),
        .Q(rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[54]),
        .Q(rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[55]),
        .Q(rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[56]),
        .Q(rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[57]),
        .Q(rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[58]),
        .Q(rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[59]),
        .Q(rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[5]),
        .Q(rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[60]),
        .Q(rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[61]),
        .Q(rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[62]),
        .Q(rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[63]),
        .Q(rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[6]),
        .Q(rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[7]),
        .Q(rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[8]),
        .Q(rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[9]),
        .Q(rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[0]),
        .Q(rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[10]),
        .Q(rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[11]),
        .Q(rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[12]),
        .Q(rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[13]),
        .Q(rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[14]),
        .Q(rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[15]),
        .Q(rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[16]),
        .Q(rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[17]),
        .Q(rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[18]),
        .Q(rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[19]),
        .Q(rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[1]),
        .Q(rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[20]),
        .Q(rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[21]),
        .Q(rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[22]),
        .Q(rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[23]),
        .Q(rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[24]),
        .Q(rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[25]),
        .Q(rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[26]),
        .Q(rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[27]),
        .Q(rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[28]),
        .Q(rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[29]),
        .Q(rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[2]),
        .Q(rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[30]),
        .Q(rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[31]),
        .Q(rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[32]),
        .Q(rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[33]),
        .Q(rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[34]),
        .Q(rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[35]),
        .Q(rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[36]),
        .Q(rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[37]),
        .Q(rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[38]),
        .Q(rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[39]),
        .Q(rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[3]),
        .Q(rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[40]),
        .Q(rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[41]),
        .Q(rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[42]),
        .Q(rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[43]),
        .Q(rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[44]),
        .Q(rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[45]),
        .Q(rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[46]),
        .Q(rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[47]),
        .Q(rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[48]),
        .Q(rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[49]),
        .Q(rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[4]),
        .Q(rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[50]),
        .Q(rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[51]),
        .Q(rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[52]),
        .Q(rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[53]),
        .Q(rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[54]),
        .Q(rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[55]),
        .Q(rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[56]),
        .Q(rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[57]),
        .Q(rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[58]),
        .Q(rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[59]),
        .Q(rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[5]),
        .Q(rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[60]),
        .Q(rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[61]),
        .Q(rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[62]),
        .Q(rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[63]),
        .Q(rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[6]),
        .Q(rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[7]),
        .Q(rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[8]),
        .Q(rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[9]),
        .Q(rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[0]),
        .Q(rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[10]),
        .Q(rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[11]),
        .Q(rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[12]),
        .Q(rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[13]),
        .Q(rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[14]),
        .Q(rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[15]),
        .Q(rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[16]),
        .Q(rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[17]),
        .Q(rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[18]),
        .Q(rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[19]),
        .Q(rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[1]),
        .Q(rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[20]),
        .Q(rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[21]),
        .Q(rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[22]),
        .Q(rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[23]),
        .Q(rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[24]),
        .Q(rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[25]),
        .Q(rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[26]),
        .Q(rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[27]),
        .Q(rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[28]),
        .Q(rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[29]),
        .Q(rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[2]),
        .Q(rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[30]),
        .Q(rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[31]),
        .Q(rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[32]),
        .Q(rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[33]),
        .Q(rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[34]),
        .Q(rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[35]),
        .Q(rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[36]),
        .Q(rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[37]),
        .Q(rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[38]),
        .Q(rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[39]),
        .Q(rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[3]),
        .Q(rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[40]),
        .Q(rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[41]),
        .Q(rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[42]),
        .Q(rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[43]),
        .Q(rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[44]),
        .Q(rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[45]),
        .Q(rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[46]),
        .Q(rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[47]),
        .Q(rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[48]),
        .Q(rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[49]),
        .Q(rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[4]),
        .Q(rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[50]),
        .Q(rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[51]),
        .Q(rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[52]),
        .Q(rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[53]),
        .Q(rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[54]),
        .Q(rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[55]),
        .Q(rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[56]),
        .Q(rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[57]),
        .Q(rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[58]),
        .Q(rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[59]),
        .Q(rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[5]),
        .Q(rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[60]),
        .Q(rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[61]),
        .Q(rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[62]),
        .Q(rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[63]),
        .Q(rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[6]),
        .Q(rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[7]),
        .Q(rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[8]),
        .Q(rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[9]),
        .Q(rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_i),
        .Q(rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane1_i),
        .Q(rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane2_i),
        .Q(rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane3_i),
        .Q(rxdatavalid_lane3_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_i),
        .Q(rxdatavalid_to_fifo_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane1_i),
        .Q(rxdatavalid_to_fifo_lane1_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane2_i),
        .Q(rxdatavalid_to_fifo_lane2_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane3_i),
        .Q(rxdatavalid_to_fifo_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[0]),
        .Q(rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[1]),
        .Q(rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane1_i[0]),
        .Q(rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane1_i[1]),
        .Q(rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane2_i[0]),
        .Q(rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane2_i[1]),
        .Q(rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane3_i[0]),
        .Q(rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane3_i[1]),
        .Q(rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[0]),
        .Q(rxheader_to_fifo_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[1]),
        .Q(rxheader_to_fifo_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane1_i[0]),
        .Q(rxheader_to_fifo_lane1_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane1_i[1]),
        .Q(rxheader_to_fifo_lane1_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane2_i[0]),
        .Q(rxheader_to_fifo_lane2_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane2_i[1]),
        .Q(rxheader_to_fifo_lane2_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane3_i[0]),
        .Q(rxheader_to_fifo_lane3_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane3_i[1]),
        .Q(rxheader_to_fifo_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_i),
        .Q(rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane1_i),
        .Q(rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane2_i),
        .Q(rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane3_i),
        .Q(rxheadervalid_lane3_i),
        .R(1'b0));
  FDRE rxlossofsync_out_lane1_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane1_i),
        .Q(rxlossofsync_out_lane1_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_lane2_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane2_i),
        .Q(rxlossofsync_out_lane2_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_lane3_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane3_i),
        .Q(rxlossofsync_out_lane3_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_i),
        .Q(rxlossofsync_out_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxreset_for_lanes
       (.I0(rx_reset_i_3),
        .I1(rx_reset_i_2),
        .I2(rx_reset_i_1),
        .I3(rx_reset_i_0),
        .O(rxreset_for_lanes__0));
  FDRE rxreset_for_lanes_q_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(rxreset_for_lanes__0),
        .Q(rxreset_for_lanes_q),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B scrambler_64b66b_gtx0_i
       (.Q({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (scrambled_data_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG),
        .\txseq_counter_i_reg[4] (scrambler_64b66b_gtx0_i_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_33 scrambler_64b66b_gtx0_lane1_i
       (.Q({\txseq_counter_i_lane1_reg_n_0_[6] ,\txseq_counter_i_lane1_reg_n_0_[5] ,\txseq_counter_i_lane1_reg_n_0_[4] ,\txseq_counter_i_lane1_reg_n_0_[3] ,\txseq_counter_i_lane1_reg_n_0_[2] ,\txseq_counter_i_lane1_reg_n_0_[1] ,\txseq_counter_i_lane1_reg_n_0_[0] }),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (scrambled_data_lane1_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG_LANE1),
        .\txseq_counter_i_lane1_reg[2] (scrambler_64b66b_gtx0_lane1_i_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_34 scrambler_64b66b_gtx0_lane2_i
       (.Q({\txseq_counter_i_lane2_reg_n_0_[6] ,\txseq_counter_i_lane2_reg_n_0_[5] ,\txseq_counter_i_lane2_reg_n_0_[4] ,\txseq_counter_i_lane2_reg_n_0_[3] ,\txseq_counter_i_lane2_reg_n_0_[2] ,\txseq_counter_i_lane2_reg_n_0_[1] ,\txseq_counter_i_lane2_reg_n_0_[0] }),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (scrambled_data_lane2_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG_LANE2),
        .\txseq_counter_i_lane2_reg[2] (scrambler_64b66b_gtx0_lane2_i_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_SCRAMBLER_64B66B_35 scrambler_64b66b_gtx0_lane3_i
       (.Q({\txseq_counter_i_lane3_reg_n_0_[6] ,\txseq_counter_i_lane3_reg_n_0_[5] ,\txseq_counter_i_lane3_reg_n_0_[4] ,\txseq_counter_i_lane3_reg_n_0_[3] ,\txseq_counter_i_lane3_reg_n_0_[2] ,\txseq_counter_i_lane3_reg_n_0_[1] ,\txseq_counter_i_lane3_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_lane3_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (TXDATA_IN_REG_LANE3),
        .\txseq_counter_i_lane3_reg[2] (scrambler_64b66b_gtx0_lane3_i_n_0),
        .user_clk(user_clk));
  FDRE \tx_hdr_lane1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE1[0]),
        .Q(tx_hdr_lane1_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE1[1]),
        .Q(tx_hdr_lane1_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_lane2_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE2[0]),
        .Q(tx_hdr_lane2_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane2_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE2[1]),
        .Q(tx_hdr_lane2_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_lane3_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE3[0]),
        .Q(tx_hdr_lane3_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane3_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN_LANE3[1]),
        .Q(tx_hdr_lane3_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN[0]),
        .Q(tx_hdr_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(TXHEADER_IN[1]),
        .Q(tx_hdr_r[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFBBBBBBB8)) 
    txdatavalid_in_r1_i_1
       (.I0(txdatavalid_in_r1_i_2_n_0),
        .I1(txsequence_ctr_en_int),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .I3(\TX_DATA[55]_i_3_n_0 ),
        .I4(\txseq_counter_i_reg_n_0_[6] ),
        .I5(\txseq_counter_i_reg_n_0_[5] ),
        .O(TXDATAVALID_IN));
  LUT6 #(
    .INIT(64'hFBFFFFFFFFFFFFFF)) 
    txdatavalid_in_r1_i_2
       (.I0(\txseq_counter_i_reg_n_0_[6] ),
        .I1(\txseq_counter_i_reg_n_0_[3] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .I3(\txseq_counter_i_reg_n_0_[2] ),
        .I4(\txseq_counter_i_reg_n_0_[4] ),
        .I5(\txseq_counter_i_reg_n_0_[0] ),
        .O(txdatavalid_in_r1_i_2_n_0));
  FDRE \txheader_lane1_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane1_r[0]),
        .Q(txheader_lane1_r[0]),
        .R(1'b0));
  FDRE \txheader_lane1_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane1_r[1]),
        .Q(txheader_lane1_r[1]),
        .R(1'b0));
  FDRE \txheader_lane2_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane2_r[0]),
        .Q(txheader_lane2_r[0]),
        .R(1'b0));
  FDRE \txheader_lane2_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane2_r[1]),
        .Q(txheader_lane2_r[1]),
        .R(1'b0));
  FDRE \txheader_lane3_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane3_r[0]),
        .Q(txheader_lane3_r[0]),
        .R(1'b0));
  FDRE \txheader_lane3_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_lane3_r[1]),
        .Q(txheader_lane3_r[1]),
        .R(1'b0));
  FDRE \txheader_r_reg[0] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_r[0]),
        .Q(txheader_r[0]),
        .R(1'b0));
  FDRE \txheader_r_reg[1] 
       (.C(user_clk),
        .CE(1'b1),
        .D(tx_hdr_r[1]),
        .Q(txheader_r[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h0B)) 
    \txseq_counter_i[0]_i_1 
       (.I0(scrambler_64b66b_gtx0_i_n_0),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[0]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i[1]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[0] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[1]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \txseq_counter_i[2]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .O(txseq_counter_i[2]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \txseq_counter_i[3]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .I3(\txseq_counter_i_reg_n_0_[3] ),
        .O(txseq_counter_i[3]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \txseq_counter_i[4]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[3] ),
        .I3(\txseq_counter_i_reg_n_0_[0] ),
        .I4(\txseq_counter_i_reg_n_0_[4] ),
        .O(txseq_counter_i[4]));
  LUT6 #(
    .INIT(64'hCC3CCCCC88888888)) 
    \txseq_counter_i[5]_i_1 
       (.I0(scrambler_64b66b_gtx0_i_n_0),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[4] ),
        .I3(\txseq_counter_i[6]_i_2_n_0 ),
        .I4(\txseq_counter_i_reg_n_0_[3] ),
        .I5(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[5]));
  LUT6 #(
    .INIT(64'hDFFFFFFF20000000)) 
    \txseq_counter_i[6]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i[6]_i_2_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[4] ),
        .I3(\txseq_counter_i_reg_n_0_[0] ),
        .I4(\txseq_counter_i_reg_n_0_[5] ),
        .I5(\txseq_counter_i_reg_n_0_[6] ),
        .O(txseq_counter_i[6]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \txseq_counter_i[6]_i_2 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .O(\txseq_counter_i[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFD)) 
    \txseq_counter_i_lane1[0]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .I1(scrambler_64b66b_gtx0_lane1_i_n_0),
        .I2(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .I5(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .O(txseq_counter_i_lane1[0]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane1[1]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .O(txseq_counter_i_lane1[1]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane1[2]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .O(txseq_counter_i_lane1[2]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane1[3]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .O(txseq_counter_i_lane1[3]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane1[4]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .O(txseq_counter_i_lane1[4]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'hFE0000FF)) 
    \txseq_counter_i_lane1[5]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .I2(\txseq_counter_i_lane1[5]_i_2_n_0 ),
        .I3(\TX_DATA[55]_i_3__0_n_0 ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .O(txseq_counter_i_lane1[5]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \txseq_counter_i_lane1[5]_i_2 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .O(\txseq_counter_i_lane1[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane1[6]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I1(\TX_DATA[55]_i_3__0_n_0 ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .O(txseq_counter_i_lane1[6]));
  FDRE \txseq_counter_i_lane1_reg[0] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[0]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[1] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[1]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[2] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[2]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[3] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[3]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[4] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[4]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[5] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[5]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[6] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[6]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFD)) 
    \txseq_counter_i_lane2[0]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .I1(scrambler_64b66b_gtx0_lane2_i_n_0),
        .I2(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .I5(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .O(txseq_counter_i_lane2[0]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane2[1]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .O(txseq_counter_i_lane2[1]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane2[2]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .O(txseq_counter_i_lane2[2]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane2[3]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .O(txseq_counter_i_lane2[3]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane2[4]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .O(txseq_counter_i_lane2[4]));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'hFE0000FF)) 
    \txseq_counter_i_lane2[5]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .I2(\txseq_counter_i_lane2[5]_i_2_n_0 ),
        .I3(\TX_DATA[55]_i_3__1_n_0 ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .O(txseq_counter_i_lane2[5]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \txseq_counter_i_lane2[5]_i_2 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .O(\txseq_counter_i_lane2[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane2[6]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I1(\TX_DATA[55]_i_3__1_n_0 ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .O(txseq_counter_i_lane2[6]));
  FDRE \txseq_counter_i_lane2_reg[0] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[0]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[1] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[1]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[2] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[2]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[3] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[3]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[4] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[4]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[5] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[5]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[6] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[6]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFD)) 
    \txseq_counter_i_lane3[0]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .I1(scrambler_64b66b_gtx0_lane3_i_n_0),
        .I2(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .I5(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .O(txseq_counter_i_lane3[0]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane3[1]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .O(txseq_counter_i_lane3[1]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane3[2]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .O(txseq_counter_i_lane3[2]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane3[3]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .O(txseq_counter_i_lane3[3]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane3[4]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .O(txseq_counter_i_lane3[4]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'hFE0000FF)) 
    \txseq_counter_i_lane3[5]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .I2(\txseq_counter_i_lane3[5]_i_2_n_0 ),
        .I3(\TX_DATA[55]_i_3__2_n_0 ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .O(txseq_counter_i_lane3[5]));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \txseq_counter_i_lane3[5]_i_2 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .O(\txseq_counter_i_lane3[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane3[6]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I1(\TX_DATA[55]_i_3__2_n_0 ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .O(txseq_counter_i_lane3[6]));
  FDRE \txseq_counter_i_lane3_reg[0] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[0]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[1] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[1]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[2] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[2]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[3] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[3]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[4] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[4]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[5] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[5]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[6] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[6]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[0] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[0]),
        .Q(\txseq_counter_i_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[1] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[1]),
        .Q(\txseq_counter_i_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[2] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[2]),
        .Q(\txseq_counter_i_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[3] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[3]),
        .Q(\txseq_counter_i_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[4] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[4]),
        .Q(\txseq_counter_i_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[5] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[5]),
        .Q(\txseq_counter_i_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[6] 
       (.C(user_clk),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[6]),
        .Q(\txseq_counter_i_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT1 #(
    .INIT(2'h1)) 
    txsequence_ctr_en_int_i_1
       (.I0(txsequence_ctr_en_int),
        .O(txsequence_ctr_en_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txsequence_ctr_en_int_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(txsequence_ctr_en_int_i_1_n_0),
        .Q(txsequence_ctr_en_int),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_36 u_cdc__check_polarity
       (.CHECK_POLARITY_IN(CHECK_POLARITY_IN),
        .Q(rxheader_from_gtx_i),
        .RX_NEG_OUT_reg(RX_NEG_OUT_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_i(rxheadervalid_i),
        .rxheadervalid_i_reg(u_cdc__check_polarity_n_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_37 u_cdc__lane1_check_polarity
       (.CHECK_POLARITY_IN_LANE1(CHECK_POLARITY_IN_LANE1),
        .Q(rxheader_from_gtx_lane1_i),
        .RX_NEG_OUT_LANE1_reg(RX_NEG_OUT_LANE1_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane1_i(rxheadervalid_lane1_i),
        .rxheadervalid_lane1_i_reg(u_cdc__lane1_check_polarity_n_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_38 u_cdc__lane2_check_polarity
       (.CHECK_POLARITY_IN_LANE2(CHECK_POLARITY_IN_LANE2),
        .Q(rxheader_from_gtx_lane2_i),
        .RX_NEG_OUT_LANE2_reg(RX_NEG_OUT_LANE2_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane2_i(rxheadervalid_lane2_i),
        .rxheadervalid_lane2_i_reg(u_cdc__lane2_check_polarity_n_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync_39 u_cdc__lane3_check_polarity
       (.CHECK_POLARITY_IN_LANE3(CHECK_POLARITY_IN_LANE3),
        .Q(rxheader_from_gtx_lane3_i),
        .RX_NEG_OUT_LANE3_reg(RX_NEG_OUT_LANE3_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane3_i(rxheadervalid_lane3_i),
        .rxheadervalid_lane3_i_reg(u_cdc__lane3_check_polarity_n_0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0 u_cdc_gt_qplllock_quad1_i
       (.gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .init_clk(init_clk),
        .out(gt_qplllock_quad1_i));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_40 u_cdc_hard_err_init
       (.E(hard_err_cntr_r),
        .Q(hard_err_cntr_r_reg[2:0]),
        .SR(HPCNT_RESET_IN),
        .\hard_err_cntr_r_reg[0] (\hard_err_cntr_r[7]_i_4_n_0 ),
        .\hard_err_cntr_r_reg[0]_0 (\hard_err_cntr_r[7]_i_5_n_0 ),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_rst_int0(hard_err_rst_int0),
        .hard_err_rst_int_reg(u_cdc_hard_err_init_n_1),
        .in0(hard_err_usr),
        .init_clk(init_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized1 u_cdc_rx_elastic_buferr
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_elastic_buf_err),
        .rx_elastic_buf_err_int(rx_elastic_buf_err_int__0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_41 u_cdc_rx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(rx_fsm_resetdone_i),
        .rx_fsm_resetdone_ii(rx_fsm_resetdone_ii));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2 u_cdc_rxpolarity_
       (.RXPOLARITY_IN(RXPOLARITY_IN),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[0]));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_42 u_cdc_rxpolarity__LANE1
       (.RXPOLARITY_IN_LANE1(RXPOLARITY_IN_LANE1),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[1]));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_43 u_cdc_rxpolarity__LANE2
       (.RXPOLARITY_IN_LANE2(RXPOLARITY_IN_LANE2),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[2]));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_44 u_cdc_rxpolarity__LANE3
       (.RXPOLARITY_IN_LANE3(RXPOLARITY_IN_LANE3),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[3]));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_45 u_cdc_tx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(tx_fsm_resetdone_i),
        .tx_fsm_resetdone_ii(tx_fsm_resetdone_ii));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0 u_rst_done_sync_rx
       (.out(rx_fsm_resetdone_i),
        .stg3_reg_0(rx_fsm_resetdone_i_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_46 u_rst_done_sync_rx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_fsm_resetdone_i));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_47 u_rst_done_sync_tx
       (.FSM_RESETDONE_j_reg(rx_fsm_resetdone_i_i),
        .in0(in0),
        .out(tx_fsm_resetdone_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_48 u_rst_done_sync_tx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(tx_fsm_resetdone_i));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1 u_rst_sync_blocksyncall_initclk_sync
       (.E(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .\FSM_onehot_cdr_reset_fsm_r_reg[0] (\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ),
        .Q({allow_block_sync_propagation,cdr_reset_fsm_lnkreset,\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] }),
        .in0(blocksync_all_lanes_inrxclk_q),
        .init_clk(init_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_49 u_rst_sync_blocksyncprop_inrxclk_sync
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(allow_block_sync_propagation_reg_n_0),
        .stg5_reg_0(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_50 u_rst_sync_fsm_resetdone
       (.fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(FSM_RESETDONE_j));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_51 u_rst_sync_fsm_resetdone_initclk
       (.SR(HPCNT_RESET_IN),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .\hard_err_cntr_r_reg[7] (cdr_reset_fsm_lnkreset_reg_n_0),
        .in0(FSM_RESETDONE_j),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk),
        .rst_drp(rst_drp));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_52 u_rst_sync_gtx_reset_comb
       (.SR(gtx_reset_comb),
        .in0(stableclk_gtx_reset_comb),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_53 u_rst_sync_reset_initclk
       (.\count_for_reset_r_reg[23] (cdr_reset_fsm_lnkreset_reg_n_0),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk),
        .rst_drp(rst_drp),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .stg5_reg_0(u_rst_sync_reset_initclk_n_1),
        .stg5_reg_1(u_rst_sync_reset_initclk_n_2),
        .stg5_reg_2(u_rst_sync_reset_initclk_n_3),
        .stg5_reg_3(u_rst_sync_reset_initclk_n_4),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1),
        .valid_btf_detect_dlyd1_0(valid_btf_detect_dlyd1_4),
        .valid_btf_detect_dlyd1_1(valid_btf_detect_dlyd1_8),
        .valid_btf_detect_dlyd1_2(valid_btf_detect_dlyd1_16));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_54 u_rst_sync_rxreset_in
       (.fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxreset_for_lanes_q));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_55 u_rst_sync_txusrclk_gtx_reset_comb
       (.E(sel),
        .in0(stableclk_gtx_reset_comb),
        .init_clk(init_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_cdc_sync
   (next_ready_c,
    next_begin_c,
    SYSTEM_RESET_reg,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk,
    ready_r_reg,
    RXLOSSOFSYNC_OUT_LANE3,
    ready_r,
    align_r,
    polarity_r,
    rx_polarity_dlyd_i,
    RESET_LANES,
    begin_r_reg,
    rx_polarity_r_reg,
    RXPOLARITY_IN_LANE3,
    prev_rx_polarity_r);
  output next_ready_c;
  output next_begin_c;
  output SYSTEM_RESET_reg;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;
  input ready_r_reg;
  input RXLOSSOFSYNC_OUT_LANE3;
  input ready_r;
  input align_r;
  input polarity_r;
  input rx_polarity_dlyd_i;
  input RESET_LANES;
  input begin_r_reg;
  input rx_polarity_r_reg;
  input RXPOLARITY_IN_LANE3;
  input prev_rx_polarity_r;

  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE3;
  wire RXPOLARITY_IN_LANE3;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire begin_r_i_2__2_n_0;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire ready_r;
  wire ready_r_i_3__2_n_0;
  wire ready_r_reg;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFCA0A0)) 
    begin_r_i_1__2
       (.I0(RXLOSSOFSYNC_OUT_LANE3),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(align_r),
        .I4(RESET_LANES),
        .I5(begin_r_i_2__2_n_0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'h80FF)) 
    begin_r_i_2__2
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(begin_r_reg),
        .O(begin_r_i_2__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h8888888888888C88)) 
    ready_r_i_2__2
       (.I0(ready_r_i_3__2_n_0),
        .I1(ready_r_reg),
        .I2(RXLOSSOFSYNC_OUT_LANE3),
        .I3(ready_r),
        .I4(align_r),
        .I5(polarity_r),
        .O(next_ready_c));
  LUT5 #(
    .INIT(32'h00000040)) 
    ready_r_i_3__2
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(align_r),
        .I4(ready_r),
        .O(ready_r_i_3__2_n_0));
  LUT4 #(
    .INIT(16'h0454)) 
    rx_polarity_r_i_1__2
       (.I0(rx_polarity_r_reg),
        .I1(RXPOLARITY_IN_LANE3),
        .I2(s_level_out_d2),
        .I3(prev_rx_polarity_r),
        .O(SYSTEM_RESET_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_14
   (next_ready_c,
    next_begin_c,
    SYSTEM_RESET_reg,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk,
    ready_r_reg,
    RXLOSSOFSYNC_OUT_LANE2,
    ready_r,
    align_r,
    polarity_r,
    rx_polarity_dlyd_i,
    RESET_LANES,
    begin_r_reg,
    rx_polarity_r_reg,
    RXPOLARITY_IN_LANE2,
    prev_rx_polarity_r);
  output next_ready_c;
  output next_begin_c;
  output SYSTEM_RESET_reg;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;
  input ready_r_reg;
  input RXLOSSOFSYNC_OUT_LANE2;
  input ready_r;
  input align_r;
  input polarity_r;
  input rx_polarity_dlyd_i;
  input RESET_LANES;
  input begin_r_reg;
  input rx_polarity_r_reg;
  input RXPOLARITY_IN_LANE2;
  input prev_rx_polarity_r;

  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE2;
  wire RXPOLARITY_IN_LANE2;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire begin_r_i_2__1_n_0;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire ready_r;
  wire ready_r_i_3__1_n_0;
  wire ready_r_reg;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFCA0A0)) 
    begin_r_i_1__1
       (.I0(RXLOSSOFSYNC_OUT_LANE2),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(align_r),
        .I4(RESET_LANES),
        .I5(begin_r_i_2__1_n_0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'h80FF)) 
    begin_r_i_2__1
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(begin_r_reg),
        .O(begin_r_i_2__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h8888888888888C88)) 
    ready_r_i_2__1
       (.I0(ready_r_i_3__1_n_0),
        .I1(ready_r_reg),
        .I2(RXLOSSOFSYNC_OUT_LANE2),
        .I3(ready_r),
        .I4(align_r),
        .I5(polarity_r),
        .O(next_ready_c));
  LUT5 #(
    .INIT(32'h00000040)) 
    ready_r_i_3__1
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(align_r),
        .I4(ready_r),
        .O(ready_r_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h0454)) 
    rx_polarity_r_i_1__1
       (.I0(rx_polarity_r_reg),
        .I1(RXPOLARITY_IN_LANE2),
        .I2(s_level_out_d2),
        .I3(prev_rx_polarity_r),
        .O(SYSTEM_RESET_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_20
   (next_ready_c,
    next_begin_c,
    SYSTEM_RESET_reg,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk,
    ready_r_reg,
    RXLOSSOFSYNC_OUT_LANE1,
    ready_r,
    align_r,
    polarity_r,
    rx_polarity_dlyd_i,
    RESET_LANES,
    begin_r_reg,
    rx_polarity_r_reg,
    RXPOLARITY_IN_LANE1,
    prev_rx_polarity_r);
  output next_ready_c;
  output next_begin_c;
  output SYSTEM_RESET_reg;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;
  input ready_r_reg;
  input RXLOSSOFSYNC_OUT_LANE1;
  input ready_r;
  input align_r;
  input polarity_r;
  input rx_polarity_dlyd_i;
  input RESET_LANES;
  input begin_r_reg;
  input rx_polarity_r_reg;
  input RXPOLARITY_IN_LANE1;
  input prev_rx_polarity_r;

  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT_LANE1;
  wire RXPOLARITY_IN_LANE1;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire begin_r_i_2__0_n_0;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire ready_r;
  wire ready_r_i_3__0_n_0;
  wire ready_r_reg;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFCA0A0)) 
    begin_r_i_1__0
       (.I0(RXLOSSOFSYNC_OUT_LANE1),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(align_r),
        .I4(RESET_LANES),
        .I5(begin_r_i_2__0_n_0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'h80FF)) 
    begin_r_i_2__0
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(begin_r_reg),
        .O(begin_r_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h8888888888888C88)) 
    ready_r_i_2__0
       (.I0(ready_r_i_3__0_n_0),
        .I1(ready_r_reg),
        .I2(RXLOSSOFSYNC_OUT_LANE1),
        .I3(ready_r),
        .I4(align_r),
        .I5(polarity_r),
        .O(next_ready_c));
  LUT5 #(
    .INIT(32'h00000040)) 
    ready_r_i_3__0
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(align_r),
        .I4(ready_r),
        .O(ready_r_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h0454)) 
    rx_polarity_r_i_1__0
       (.I0(rx_polarity_r_reg),
        .I1(RXPOLARITY_IN_LANE1),
        .I2(s_level_out_d2),
        .I3(prev_rx_polarity_r),
        .O(SYSTEM_RESET_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_26
   (next_ready_c,
    next_begin_c,
    SYSTEM_RESET_reg,
    s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk,
    ready_r_reg,
    RXLOSSOFSYNC_OUT,
    ready_r,
    align_r,
    polarity_r,
    rx_polarity_dlyd_i,
    RESET_LANES,
    begin_r_reg,
    rx_polarity_r_reg,
    RXPOLARITY_IN,
    prev_rx_polarity_r);
  output next_ready_c;
  output next_begin_c;
  output SYSTEM_RESET_reg;
  input s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;
  input ready_r_reg;
  input RXLOSSOFSYNC_OUT;
  input ready_r;
  input align_r;
  input polarity_r;
  input rx_polarity_dlyd_i;
  input RESET_LANES;
  input begin_r_reg;
  input rx_polarity_r_reg;
  input RXPOLARITY_IN;
  input prev_rx_polarity_r;

  wire RESET_LANES;
  wire RXLOSSOFSYNC_OUT;
  wire RXPOLARITY_IN;
  wire SYSTEM_RESET_reg;
  wire align_r;
  wire begin_r_i_2_n_0;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire ready_r;
  wire ready_r_i_3_n_0;
  wire ready_r_reg;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFCA0A0)) 
    begin_r_i_1
       (.I0(RXLOSSOFSYNC_OUT),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(align_r),
        .I4(RESET_LANES),
        .I5(begin_r_i_2_n_0),
        .O(next_begin_c));
  LUT4 #(
    .INIT(16'h80FF)) 
    begin_r_i_2
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(begin_r_reg),
        .O(begin_r_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h8888888888888C88)) 
    ready_r_i_2
       (.I0(ready_r_i_3_n_0),
        .I1(ready_r_reg),
        .I2(RXLOSSOFSYNC_OUT),
        .I3(ready_r),
        .I4(align_r),
        .I5(polarity_r),
        .O(next_ready_c));
  LUT5 #(
    .INIT(32'h00000040)) 
    ready_r_i_3
       (.I0(s_level_out_d2),
        .I1(rx_polarity_dlyd_i),
        .I2(polarity_r),
        .I3(align_r),
        .I4(ready_r),
        .O(ready_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0454)) 
    rx_polarity_r_i_1
       (.I0(rx_polarity_r_reg),
        .I1(RXPOLARITY_IN),
        .I2(s_level_out_d2),
        .I3(prev_rx_polarity_r),
        .O(SYSTEM_RESET_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_36
   (rxheadervalid_i_reg,
    CHECK_POLARITY_IN,
    gtwiz_userclk_rx_usrclk_out,
    rxheadervalid_i,
    Q,
    RX_NEG_OUT_reg);
  output rxheadervalid_i_reg;
  input CHECK_POLARITY_IN;
  input gtwiz_userclk_rx_usrclk_out;
  input rxheadervalid_i;
  input [1:0]Q;
  input RX_NEG_OUT_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rxheadervalid_i;
  wire rxheadervalid_i_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = CHECK_POLARITY_IN;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_i_1
       (.I0(rxheadervalid_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_reg),
        .I4(s_level_out_d2),
        .O(rxheadervalid_i_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_37
   (rxheadervalid_lane1_i_reg,
    CHECK_POLARITY_IN_LANE1,
    gtwiz_userclk_rx_usrclk_out,
    rxheadervalid_lane1_i,
    Q,
    RX_NEG_OUT_LANE1_reg);
  output rxheadervalid_lane1_i_reg;
  input CHECK_POLARITY_IN_LANE1;
  input gtwiz_userclk_rx_usrclk_out;
  input rxheadervalid_lane1_i;
  input [1:0]Q;
  input RX_NEG_OUT_LANE1_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE1_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rxheadervalid_lane1_i;
  wire rxheadervalid_lane1_i_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = CHECK_POLARITY_IN_LANE1;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_LANE1_i_1
       (.I0(rxheadervalid_lane1_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_LANE1_reg),
        .I4(s_level_out_d2),
        .O(rxheadervalid_lane1_i_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_38
   (rxheadervalid_lane2_i_reg,
    CHECK_POLARITY_IN_LANE2,
    gtwiz_userclk_rx_usrclk_out,
    rxheadervalid_lane2_i,
    Q,
    RX_NEG_OUT_LANE2_reg);
  output rxheadervalid_lane2_i_reg;
  input CHECK_POLARITY_IN_LANE2;
  input gtwiz_userclk_rx_usrclk_out;
  input rxheadervalid_lane2_i;
  input [1:0]Q;
  input RX_NEG_OUT_LANE2_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE2_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rxheadervalid_lane2_i;
  wire rxheadervalid_lane2_i_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = CHECK_POLARITY_IN_LANE2;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_LANE2_i_1
       (.I0(rxheadervalid_lane2_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_LANE2_reg),
        .I4(s_level_out_d2),
        .O(rxheadervalid_lane2_i_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync_39
   (rxheadervalid_lane3_i_reg,
    CHECK_POLARITY_IN_LANE3,
    gtwiz_userclk_rx_usrclk_out,
    rxheadervalid_lane3_i,
    Q,
    RX_NEG_OUT_LANE3_reg);
  output rxheadervalid_lane3_i_reg;
  input CHECK_POLARITY_IN_LANE3;
  input gtwiz_userclk_rx_usrclk_out;
  input rxheadervalid_lane3_i;
  input [1:0]Q;
  input RX_NEG_OUT_LANE3_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE3_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rxheadervalid_lane3_i;
  wire rxheadervalid_lane3_i_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = CHECK_POLARITY_IN_LANE3;
  LUT5 #(
    .INIT(32'hFF200000)) 
    RX_NEG_OUT_LANE3_i_1
       (.I0(rxheadervalid_lane3_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(RX_NEG_OUT_LANE3_reg),
        .I4(s_level_out_d2),
        .O(rxheadervalid_lane3_i_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0
   (out,
    gt_qplllock_quad1_in,
    init_clk);
  output out;
  input gt_qplllock_quad1_in;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  assign p_level_in_int = gt_qplllock_quad1_in;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_40
   (E,
    hard_err_rst_int_reg,
    in0,
    init_clk,
    \hard_err_cntr_r_reg[0] ,
    \hard_err_cntr_r_reg[0]_0 ,
    Q,
    hard_err_rst_int,
    hard_err_rst_int0,
    SR);
  output [0:0]E;
  output hard_err_rst_int_reg;
  input in0;
  input init_clk;
  input \hard_err_cntr_r_reg[0] ;
  input \hard_err_cntr_r_reg[0]_0 ;
  input [2:0]Q;
  input hard_err_rst_int;
  input hard_err_rst_int0;
  input [0:0]SR;

  wire [0:0]E;
  wire [2:0]Q;
  wire [0:0]SR;
  wire \hard_err_cntr_r_reg[0] ;
  wire \hard_err_cntr_r_reg[0]_0 ;
  wire hard_err_rst_int;
  wire hard_err_rst_int0;
  wire hard_err_rst_int_i_2_n_0;
  wire hard_err_rst_int_reg;
  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT6 #(
    .INIT(64'hAAFFFFFFFFFFFFFC)) 
    \hard_err_cntr_r[7]_i_2 
       (.I0(\hard_err_cntr_r_reg[0] ),
        .I1(\hard_err_cntr_r_reg[0]_0 ),
        .I2(s_level_out_d5),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(E));
  LUT6 #(
    .INIT(64'h00000000FFFE0002)) 
    hard_err_rst_int_i_1
       (.I0(hard_err_rst_int),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(hard_err_rst_int_i_2_n_0),
        .I4(hard_err_rst_int0),
        .I5(SR),
        .O(hard_err_rst_int_reg));
  LUT3 #(
    .INIT(8'hFE)) 
    hard_err_rst_int_i_2
       (.I0(s_level_out_d5),
        .I1(Q[2]),
        .I2(\hard_err_cntr_r_reg[0]_0 ),
        .O(hard_err_rst_int_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_41
   (rx_fsm_resetdone_ii,
    out,
    init_clk);
  output rx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign rx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_45
   (tx_fsm_resetdone_ii,
    out,
    init_clk);
  output tx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign tx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_56
   (\cb_bit_err_ext_cnt_reg[3] ,
    CHAN_BOND_RESET,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    reset_cbcc_comb_reg);
  output \cb_bit_err_ext_cnt_reg[3] ;
  input CHAN_BOND_RESET;
  input gtwiz_userclk_rx_usrclk_out;
  input [3:0]Q;
  input [0:0]reset_cbcc_comb_reg;

  wire [3:0]Q;
  wire \cb_bit_err_ext_cnt_reg[3] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire [0:0]reset_cbcc_comb_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = CHAN_BOND_RESET;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    reset_cbcc_comb_i_1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(s_level_out_d5),
        .I5(reset_cbcc_comb_reg),
        .O(\cb_bit_err_ext_cnt_reg[3] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_63
   (s_level_out_d5_reg_0,
    in0,
    user_clk);
  output s_level_out_d5_reg_0;
  input in0;
  input user_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__2
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_67
   (s_level_out_d5_reg_0,
    in0,
    user_clk);
  output s_level_out_d5_reg_0;
  input in0;
  input user_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__1
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_72
   (s_level_out_d5_reg_0,
    in0,
    user_clk);
  output s_level_out_d5_reg_0;
  input in0;
  input user_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__0
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_83
   (s_level_out_d5_reg_0,
    in0,
    user_clk);
  output s_level_out_d5_reg_0;
  input in0;
  input user_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized1
   (out,
    rx_elastic_buf_err_int,
    gtwiz_userclk_rx_usrclk_out,
    user_clk);
  output out;
  input rx_elastic_buf_err_int;
  input gtwiz_userclk_rx_usrclk_out;
  input user_clk;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rx_elastic_buf_err_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  FDRE p_level_in_d1_cdc_from_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rx_elastic_buf_err_int),
        .Q(p_level_in_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2
   (out,
    RXPOLARITY_IN,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input RXPOLARITY_IN;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = RXPOLARITY_IN;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_42
   (out,
    RXPOLARITY_IN_LANE1,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input RXPOLARITY_IN_LANE1;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = RXPOLARITY_IN_LANE1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_43
   (out,
    RXPOLARITY_IN_LANE2,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input RXPOLARITY_IN_LANE2;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = RXPOLARITY_IN_LANE2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized2_44
   (out,
    RXPOLARITY_IN_LANE3,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input RXPOLARITY_IN_LANE3;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = RXPOLARITY_IN_LANE3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3
   (cbcc_reset_cbstg2_rd_clk,
    full,
    user_clk);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input user_clk;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_64
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    user_clk);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input user_clk;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_66
   (rxchanisaligned1_out,
    cbcc_reset_cbstg2_rd_clk,
    full,
    user_clk,
    empty);
  output rxchanisaligned1_out;
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input user_clk;
  input empty;

  wire cbcc_reset_cbstg2_rd_clk;
  wire empty;
  wire full;
  wire rxchanisaligned1_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT2 #(
    .INIT(4'h1)) 
    rxchanisaligned_i_1
       (.I0(empty),
        .I1(s_level_out_d5),
        .O(rxchanisaligned1_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_68
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    user_clk);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input user_clk;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_71
   (cbcc_reset_cbstg2_rd_clk,
    full,
    user_clk);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input user_clk;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_73
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    user_clk);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input user_clk;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_82
   (cbcc_reset_cbstg2_rd_clk,
    full,
    user_clk);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input user_clk;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_cdc_sync" *) 
module aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized3_84
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    user_clk);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input user_clk;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire user_clk;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_aurora_64b66b_w256_1375Gbps_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_common_logic_cbcc
   (in0,
    master_do_rd_en_i,
    cb_bit_err_i,
    all_vld_btf_flag_i,
    out,
    second_cb_write_failed_reg_0,
    second_cb_write_failed_reg_1,
    second_cb_write_failed_reg_2,
    any_vld_btf_lane3_i,
    any_vld_btf_i,
    any_vld_btf_lane1_i,
    any_vld_btf_lane2_i,
    cbcc_fifo_reset_wr_clk,
    all_start_cb_writes_out_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    cbcc_fifo_reset_rd_clk,
    master_do_rd_en_out_reg_0,
    user_clk,
    \first_cb_to_fifo_wr_window_reg[0]_0 ,
    \first_cb_to_fifo_wr_window_reg[0]_1 ,
    \first_cb_to_fifo_wr_window_reg[0]_2 ,
    \first_cb_to_fifo_wr_window_reg[0]_3 ,
    SR);
  output in0;
  output master_do_rd_en_i;
  output cb_bit_err_i;
  output all_vld_btf_flag_i;
  input out;
  input second_cb_write_failed_reg_0;
  input second_cb_write_failed_reg_1;
  input second_cb_write_failed_reg_2;
  input any_vld_btf_lane3_i;
  input any_vld_btf_i;
  input any_vld_btf_lane1_i;
  input any_vld_btf_lane2_i;
  input cbcc_fifo_reset_wr_clk;
  input all_start_cb_writes_out_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input cbcc_fifo_reset_rd_clk;
  input master_do_rd_en_out_reg_0;
  input user_clk;
  input \first_cb_to_fifo_wr_window_reg[0]_0 ;
  input \first_cb_to_fifo_wr_window_reg[0]_1 ;
  input \first_cb_to_fifo_wr_window_reg[0]_2 ;
  input \first_cb_to_fifo_wr_window_reg[0]_3 ;
  input [0:0]SR;

  wire [0:0]SR;
  wire all_start_cb_writes_out_reg_0;
  wire all_vld_btf_flag_i;
  wire all_vld_btf_out0__0;
  wire any_vld_btf_i;
  wire any_vld_btf_lane1_i;
  wire any_vld_btf_lane2_i;
  wire any_vld_btf_lane3_i;
  wire cb_bit_err_i;
  wire cb_bit_err_out0;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire first_cb_to_fifo_wr_window0;
  wire [3:0]first_cb_to_fifo_wr_window_reg;
  wire \first_cb_to_fifo_wr_window_reg[0]_0 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_1 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_2 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_3 ;
  wire first_cb_write_failed;
  wire first_cb_write_failed_i_1_n_0;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire master_do_rd_en_i;
  wire master_do_rd_en_out_reg_0;
  wire out;
  wire [3:0]p_0_in__19;
  wire second_cb_write_failed;
  wire second_cb_write_failed0__0;
  wire second_cb_write_failed_reg_0;
  wire second_cb_write_failed_reg_1;
  wire second_cb_write_failed_reg_2;
  wire user_clk;

  FDRE all_start_cb_writes_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(all_start_cb_writes_out_reg_0),
        .Q(in0),
        .R(cbcc_fifo_reset_wr_clk));
  LUT4 #(
    .INIT(16'h8000)) 
    all_vld_btf_out0
       (.I0(any_vld_btf_lane3_i),
        .I1(any_vld_btf_i),
        .I2(any_vld_btf_lane1_i),
        .I3(any_vld_btf_lane2_i),
        .O(all_vld_btf_out0__0));
  FDRE all_vld_btf_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(all_vld_btf_out0__0),
        .Q(all_vld_btf_flag_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    cb_bit_err_out_i_1
       (.I0(first_cb_write_failed),
        .I1(second_cb_write_failed),
        .O(cb_bit_err_out0));
  FDRE cb_bit_err_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cb_bit_err_out0),
        .Q(cb_bit_err_i),
        .R(cbcc_fifo_reset_wr_clk));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \first_cb_to_fifo_wr_window[0]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .O(p_0_in__19[0]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \first_cb_to_fifo_wr_window[1]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .I1(first_cb_to_fifo_wr_window_reg[1]),
        .O(p_0_in__19[1]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \first_cb_to_fifo_wr_window[2]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .I1(first_cb_to_fifo_wr_window_reg[1]),
        .I2(first_cb_to_fifo_wr_window_reg[2]),
        .O(p_0_in__19[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \first_cb_to_fifo_wr_window[3]_i_2 
       (.I0(\first_cb_to_fifo_wr_window_reg[0]_0 ),
        .I1(\first_cb_to_fifo_wr_window_reg[0]_1 ),
        .I2(\first_cb_to_fifo_wr_window_reg[0]_2 ),
        .I3(\first_cb_to_fifo_wr_window_reg[0]_3 ),
        .O(first_cb_to_fifo_wr_window0));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \first_cb_to_fifo_wr_window[3]_i_3 
       (.I0(first_cb_to_fifo_wr_window_reg[1]),
        .I1(first_cb_to_fifo_wr_window_reg[0]),
        .I2(first_cb_to_fifo_wr_window_reg[2]),
        .I3(first_cb_to_fifo_wr_window_reg[3]),
        .O(p_0_in__19[3]));
  FDRE \first_cb_to_fifo_wr_window_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__19[0]),
        .Q(first_cb_to_fifo_wr_window_reg[0]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__19[1]),
        .Q(first_cb_to_fifo_wr_window_reg[1]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__19[2]),
        .Q(first_cb_to_fifo_wr_window_reg[2]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__19[3]),
        .Q(first_cb_to_fifo_wr_window_reg[3]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    first_cb_write_failed_i_1
       (.I0(first_cb_to_fifo_wr_window_reg[3]),
        .I1(first_cb_to_fifo_wr_window_reg[2]),
        .I2(first_cb_to_fifo_wr_window_reg[1]),
        .I3(first_cb_to_fifo_wr_window_reg[0]),
        .I4(first_cb_write_failed),
        .O(first_cb_write_failed_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    first_cb_write_failed_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(first_cb_write_failed_i_1_n_0),
        .Q(first_cb_write_failed),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE master_do_rd_en_out_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(master_do_rd_en_out_reg_0),
        .Q(master_do_rd_en_i),
        .R(cbcc_fifo_reset_rd_clk));
  LUT4 #(
    .INIT(16'hFFFE)) 
    second_cb_write_failed0
       (.I0(out),
        .I1(second_cb_write_failed_reg_0),
        .I2(second_cb_write_failed_reg_1),
        .I3(second_cb_write_failed_reg_2),
        .O(second_cb_write_failed0__0));
  FDRE #(
    .INIT(1'b0)) 
    second_cb_write_failed_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(second_cb_write_failed0__0),
        .Q(second_cb_write_failed),
        .R(cbcc_fifo_reset_wr_clk));
endmodule

module aurora_64b66b_w256_1375Gbps_common_reset_cbcc
   (cbcc_fifo_reset_to_fifo_wr_clk,
    cbcc_fifo_reset_wr_clk,
    cbcc_fifo_reset_rd_clk,
    cbcc_only_reset_rd_clk,
    srst,
    cbcc_reset_cbstg2_rd_clk,
    SR,
    gtwiz_userclk_rx_usrclk_out,
    user_clk,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg,
    CHAN_BOND_RESET,
    EN_CHAN_SYNC,
    out,
    \first_cb_to_fifo_wr_window_reg[3] ,
    \first_cb_to_fifo_wr_window_reg[3]_0 ,
    \first_cb_to_fifo_wr_window_reg[3]_1 ,
    cb_bit_err_i);
  output cbcc_fifo_reset_to_fifo_wr_clk;
  output cbcc_fifo_reset_wr_clk;
  output cbcc_fifo_reset_rd_clk;
  output cbcc_only_reset_rd_clk;
  output srst;
  output cbcc_reset_cbstg2_rd_clk;
  output [0:0]SR;
  input gtwiz_userclk_rx_usrclk_out;
  input user_clk;
  input [0:0]stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  input CHAN_BOND_RESET;
  input EN_CHAN_SYNC;
  input out;
  input \first_cb_to_fifo_wr_window_reg[3] ;
  input \first_cb_to_fifo_wr_window_reg[3]_0 ;
  input \first_cb_to_fifo_wr_window_reg[3]_1 ;
  input cb_bit_err_i;

  wire CHAN_BOND_RESET;
  wire EN_CHAN_SYNC;
  wire [0:0]SR;
  wire [3:0]cb_bit_err_ext_cnt;
  wire \cb_bit_err_ext_cnt[0]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[1]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[2]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[3]_i_1_n_0 ;
  wire cb_bit_err_i;
  wire cbc_rd_if_reset;
  wire cbc_wr_if_reset;
  wire cbcc_data_srst0;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire dbg_extend_srst0;
  wire [3:0]dbg_extend_srst_reg;
  wire dbg_srst_assert;
  wire dbg_srst_assert0;
  wire fifo_reset_comb;
  wire fifo_reset_comb_read_clk;
  wire fifo_reset_comb_user_clk;
  wire fifo_reset_comb_user_clk_int;
  wire fifo_reset_comb_user_clk_int_22q;
  wire fifo_reset_rd;
  wire fifo_reset_rd_i_1_n_0;
  wire \first_cb_to_fifo_wr_window_reg[3] ;
  wire \first_cb_to_fifo_wr_window_reg[3]_0 ;
  wire \first_cb_to_fifo_wr_window_reg[3]_1 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  wire [3:0]p_0_in__2;
  wire rd_stg1;
  wire reset_cbcc_comb;
  wire srst;
  wire [0:0]stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg;
  wire stg5;
  wire u_cdc_chan_bond_reset_n_0;
  wire u_rst_sync_reset_rd_clk_n_0;
  wire u_rst_sync_reset_to_fifo_rd_clk_n_1;
  wire u_rst_sync_reset_to_fifo_wr_clk_n_1;
  wire u_rst_sync_reset_wr_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_1;
  wire user_clk;

  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \cb_bit_err_ext_cnt[0]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[2]),
        .I2(cb_bit_err_ext_cnt[3]),
        .I3(cb_bit_err_ext_cnt[1]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFFFF9998)) 
    \cb_bit_err_ext_cnt[1]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFFFFE1E0)) 
    \cb_bit_err_ext_cnt[2]_i_1 
       (.I0(cb_bit_err_ext_cnt[1]),
        .I1(cb_bit_err_ext_cnt[0]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    \cb_bit_err_ext_cnt[3]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[3]_i_1_n_0 ));
  FDRE \cb_bit_err_ext_cnt_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[0]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[0]),
        .R(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[1]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[1]),
        .R(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[2]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[2]),
        .R(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[3]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[3]),
        .R(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_rd_if_reset_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .Q(cbc_rd_if_reset),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_wr_if_reset_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .Q(cbc_wr_if_reset),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBBBBBFFF)) 
    cbcc_data_srst_i_1
       (.I0(dbg_srst_assert),
        .I1(dbg_extend_srst_reg[3]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[1]),
        .I4(dbg_extend_srst_reg[2]),
        .O(cbcc_data_srst0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_data_srst_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbcc_data_srst0),
        .Q(srst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_rd_clk_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_reset_rd_clk_n_0),
        .Q(cbcc_fifo_reset_rd_clk),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_rd_clk),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_wr_clk),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_wr_clk_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_wr_clk_n_0),
        .Q(cbcc_fifo_reset_wr_clk),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE cbcc_reset_cbstg2_rd_clk_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .Q(cbcc_reset_cbstg2_rd_clk),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \dbg_extend_srst[0]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dbg_extend_srst[1]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .I1(dbg_extend_srst_reg[1]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \dbg_extend_srst[2]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[1]),
        .O(p_0_in__2[2]));
  LUT4 #(
    .INIT(16'h15FF)) 
    \dbg_extend_srst[3]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[1]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[3]),
        .O(dbg_extend_srst0));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \dbg_extend_srst[3]_i_2 
       (.I0(dbg_extend_srst_reg[1]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[2]),
        .I3(dbg_extend_srst_reg[3]),
        .O(p_0_in__2[3]));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__2[0]),
        .Q(dbg_extend_srst_reg[0]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__2[1]),
        .Q(dbg_extend_srst_reg[1]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    \dbg_extend_srst_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__2[2]),
        .Q(dbg_extend_srst_reg[2]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__2[3]),
        .Q(dbg_extend_srst_reg[3]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    dbg_srst_assert_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(dbg_srst_assert0),
        .Q(dbg_srst_assert),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    fifo_reset_comb_user_clk_int_22q_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(fifo_reset_comb_user_clk_int),
        .Q(fifo_reset_comb_user_clk_int_22q),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    fifo_reset_rd_i_1
       (.I0(fifo_reset_rd),
        .I1(EN_CHAN_SYNC),
        .O(fifo_reset_rd_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    fifo_reset_rd_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(fifo_reset_rd_i_1_n_0),
        .Q(fifo_reset_rd),
        .S(cbcc_reset_cbstg2_rd_clk));
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    \first_cb_to_fifo_wr_window[3]_i_1 
       (.I0(out),
        .I1(\first_cb_to_fifo_wr_window_reg[3] ),
        .I2(\first_cb_to_fifo_wr_window_reg[3]_0 ),
        .I3(\first_cb_to_fifo_wr_window_reg[3]_1 ),
        .I4(cbcc_fifo_reset_wr_clk),
        .O(SR));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    rd_stg1_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg5),
        .Q(rd_stg1),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_cbcc_comb_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_cdc_chan_bond_reset_n_0),
        .Q(reset_cbcc_comb),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_cdc_sync__parameterized0_56 u_cdc_chan_bond_reset
       (.CHAN_BOND_RESET(CHAN_BOND_RESET),
        .Q(cb_bit_err_ext_cnt),
        .\cb_bit_err_ext_cnt_reg[3] (u_cdc_chan_bond_reset_n_0),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .reset_cbcc_comb_reg(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_57 u_rst_sync_cbcc_fifo_reset_rd_clk
       (.in0(fifo_reset_comb_user_clk),
        .stg5_reg_0(fifo_reset_comb_read_clk),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_58 u_rst_sync_cbcc_only_reset_rd_clk
       (.cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized3 u_rst_sync_fifo_reset_comb_user_clk_in
       (.dbg_srst_assert0(dbg_srst_assert0),
        .dbg_srst_assert_reg(fifo_reset_comb_user_clk_int_22q),
        .fifo_reset_comb_user_clk_int(fifo_reset_comb_user_clk_int),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb_user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized2 u_rst_sync_fifo_reset_user_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb_user_clk),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(fifo_reset_comb));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_59 u_rst_sync_r_sync3
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_rd),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(reset_cbcc_comb),
        .stg5_reg_0(fifo_reset_comb));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_60 u_rst_sync_reset_rd_clk
       (.in0(cbc_rd_if_reset),
        .stg3_reg_0(u_rst_sync_reset_rd_clk_n_0),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized5 u_rst_sync_reset_to_fifo_rd_clk
       (.cbcc_fifo_reset_to_fifo_rd_clk(cbcc_fifo_reset_to_fifo_rd_clk),
        .cbcc_fifo_reset_to_fifo_rd_clk_dlyd(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .in0(cbc_rd_if_reset),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(fifo_reset_comb_read_clk),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized4 u_rst_sync_reset_to_fifo_wr_clk
       (.cbc_wr_if_reset_reg(fifo_reset_comb_user_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(cbc_wr_if_reset),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(fifo_reset_comb_user_clk_int_22q));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_61 u_rst_sync_reset_wr_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(cbc_wr_if_reset),
        .stg3_reg_0(u_rst_sync_reset_wr_clk_n_0));
  aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_62 u_rst_sync_rst_cbcc_rd_clk
       (.rd_stg1(rd_stg1),
        .rd_stg1_reg(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0(reset_cbcc_comb),
        .stg5(stg5),
        .user_clk(user_clk));
endmodule

(* BACKWARD_COMP_MODE1 = "1'b0" *) (* BACKWARD_COMP_MODE2 = "1'b0" *) (* BACKWARD_COMP_MODE3 = "1'b0" *) 
(* CC_FREQ_FACTOR = "5'b11000" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* EXAMPLE_SIMULATION = "0" *) 
(* GTY_CRC_NO_ZERO_PAD = "0" *) (* INTER_CB_GAP = "5'b01001" *) (* SCRAMBLER_SEED = "58'b1010101010101010101010101010101010101010101010101010101010" *) 
(* SIM_GTXRESET_SPEEDUP = "0" *) (* wait_for_fifo_wr_rst_busy_value = "6'b100000" *) 
module aurora_64b66b_w256_1375Gbps_core
   (s_axi_tx_tdata,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    gt_refclk1,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    mmcm_not_locked,
    user_clk,
    sync_clk,
    sysreset_to_core,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_qpllclk_quad1_in,
    gt_qpllrefclk_quad1_in,
    gt_qplllock_quad1_in,
    gt_qpllrefclklost_quad1,
    gt_to_common_qpllreset_out,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_awaddr_lane1,
    s_axi_awvalid_lane1,
    s_axi_awready_lane1,
    s_axi_awaddr_lane2,
    s_axi_awvalid_lane2,
    s_axi_awready_lane2,
    s_axi_awaddr_lane3,
    s_axi_awvalid_lane3,
    s_axi_awready_lane3,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_wdata_lane1,
    s_axi_wstrb_lane1,
    s_axi_wvalid_lane1,
    s_axi_wready_lane1,
    s_axi_bvalid_lane1,
    s_axi_bresp_lane1,
    s_axi_bready_lane1,
    s_axi_wdata_lane2,
    s_axi_wstrb_lane2,
    s_axi_wvalid_lane2,
    s_axi_wready_lane2,
    s_axi_bvalid_lane2,
    s_axi_bresp_lane2,
    s_axi_bready_lane2,
    s_axi_wdata_lane3,
    s_axi_wstrb_lane3,
    s_axi_wvalid_lane3,
    s_axi_wready_lane3,
    s_axi_bvalid_lane3,
    s_axi_bresp_lane3,
    s_axi_bready_lane3,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_araddr_lane1,
    s_axi_arvalid_lane1,
    s_axi_arready_lane1,
    s_axi_araddr_lane2,
    s_axi_arvalid_lane2,
    s_axi_arready_lane2,
    s_axi_araddr_lane3,
    s_axi_arvalid_lane3,
    s_axi_arready_lane3,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rdata_lane1,
    s_axi_rvalid_lane1,
    s_axi_rresp_lane1,
    s_axi_rready_lane1,
    s_axi_rdata_lane2,
    s_axi_rvalid_lane2,
    s_axi_rresp_lane2,
    s_axi_rready_lane2,
    s_axi_rdata_lane3,
    s_axi_rvalid_lane3,
    s_axi_rresp_lane3,
    s_axi_rready_lane3,
    init_clk,
    link_reset_out,
    gt_powergood,
    gt_pll_lock,
    sys_reset_out,
    bufg_gt_clr_out,
    tx_out_clk);
  input [0:255]s_axi_tx_tdata;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:255]m_axi_rx_tdata;
  output m_axi_rx_tvalid;
  input [0:3]rxp;
  input [0:3]rxn;
  output [0:3]txp;
  output [0:3]txn;
  input gt_refclk1;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:3]lane_up;
  input mmcm_not_locked;
  input user_clk;
  input sync_clk;
  input sysreset_to_core;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  input gt_qpllclk_quad1_in;
  input gt_qpllrefclk_quad1_in;
  input gt_qplllock_quad1_in;
  input gt_qpllrefclklost_quad1;
  output gt_to_common_qpllreset_out;
  input [31:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_awaddr_lane1;
  input s_axi_awvalid_lane1;
  output s_axi_awready_lane1;
  input [31:0]s_axi_awaddr_lane2;
  input s_axi_awvalid_lane2;
  output s_axi_awready_lane2;
  input [31:0]s_axi_awaddr_lane3;
  input s_axi_awvalid_lane3;
  output s_axi_awready_lane3;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output s_axi_bvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  input [31:0]s_axi_wdata_lane1;
  input [3:0]s_axi_wstrb_lane1;
  input s_axi_wvalid_lane1;
  output s_axi_wready_lane1;
  output s_axi_bvalid_lane1;
  output [1:0]s_axi_bresp_lane1;
  input s_axi_bready_lane1;
  input [31:0]s_axi_wdata_lane2;
  input [3:0]s_axi_wstrb_lane2;
  input s_axi_wvalid_lane2;
  output s_axi_wready_lane2;
  output s_axi_bvalid_lane2;
  output [1:0]s_axi_bresp_lane2;
  input s_axi_bready_lane2;
  input [31:0]s_axi_wdata_lane3;
  input [3:0]s_axi_wstrb_lane3;
  input s_axi_wvalid_lane3;
  output s_axi_wready_lane3;
  output s_axi_bvalid_lane3;
  output [1:0]s_axi_bresp_lane3;
  input s_axi_bready_lane3;
  input [31:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  input [31:0]s_axi_araddr_lane1;
  input s_axi_arvalid_lane1;
  output s_axi_arready_lane1;
  input [31:0]s_axi_araddr_lane2;
  input s_axi_arvalid_lane2;
  output s_axi_arready_lane2;
  input [31:0]s_axi_araddr_lane3;
  input s_axi_arvalid_lane3;
  output s_axi_arready_lane3;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output [31:0]s_axi_rdata_lane1;
  output s_axi_rvalid_lane1;
  output [1:0]s_axi_rresp_lane1;
  input s_axi_rready_lane1;
  output [31:0]s_axi_rdata_lane2;
  output s_axi_rvalid_lane2;
  output [1:0]s_axi_rresp_lane2;
  input s_axi_rready_lane2;
  output [31:0]s_axi_rdata_lane3;
  output s_axi_rvalid_lane3;
  output [1:0]s_axi_rresp_lane3;
  input s_axi_rready_lane3;
  input init_clk;
  output link_reset_out;
  output [3:0]gt_powergood;
  output gt_pll_lock;
  output sys_reset_out;
  output bufg_gt_clr_out;
  output tx_out_clk;

  wire \<const0> ;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_0;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_1;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_10;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_109;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_110;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_111;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_112;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_113;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_114;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_115;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_116;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_117;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_118;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_119;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_120;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_121;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_122;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_123;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_124;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_125;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_126;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_127;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_128;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_129;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_130;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_131;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_132;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_133;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_134;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_135;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_136;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_137;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_138;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_139;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_140;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_141;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_142;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_143;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_144;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_145;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_146;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_147;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_148;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_149;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_150;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_151;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_152;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_153;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_154;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_155;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_156;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_179;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_180;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_181;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_182;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_183;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_184;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_185;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_186;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_187;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_188;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_189;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_190;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_191;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_192;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_193;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_194;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_195;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_196;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_197;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_198;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_199;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_2;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_200;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_201;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_202;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_203;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_204;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_205;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_206;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_207;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_208;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_209;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_210;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_211;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_212;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_213;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_214;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_215;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_216;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_217;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_218;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_219;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_220;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_221;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_222;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_223;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_224;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_225;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_226;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_245;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_246;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_247;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_248;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_249;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_250;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_251;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_252;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_253;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_254;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_255;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_256;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_257;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_258;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_259;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_260;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_261;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_262;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_263;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_264;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_265;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_266;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_267;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_268;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_269;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_270;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_271;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_272;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_273;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_274;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_275;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_276;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_277;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_278;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_279;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_280;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_281;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_282;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_283;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_284;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_285;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_286;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_287;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_288;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_289;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_290;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_291;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_292;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_3;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_311;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_312;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_313;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_314;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_315;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_316;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_317;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_318;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_319;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_320;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_321;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_322;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_323;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_324;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_325;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_326;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_327;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_328;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_329;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_330;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_331;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_332;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_333;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_334;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_335;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_336;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_337;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_338;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_339;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_340;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_341;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_342;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_343;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_344;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_345;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_346;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_347;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_348;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_349;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_350;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_351;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_352;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_353;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_354;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_355;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_356;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_357;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_358;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_369;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_371;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_373;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_375;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_7;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_8;
  wire aurora_64b66b_w256_1375Gbps_wrapper_i_n_9;
  wire aurora_lane_0_i_n_12;
  wire aurora_lane_1_i_n_10;
  wire aurora_lane_1_i_n_11;
  wire aurora_lane_1_i_n_12;
  wire aurora_lane_2_i_n_11;
  wire aurora_lane_3_i_n_11;
  wire bufg_gt_clr_out;
  wire [15:0]\cbcc_gtx0_i/p_1_in ;
  wire [15:0]\cbcc_gtx0_lane1_i/p_1_in ;
  wire [15:0]\cbcc_gtx0_lane2_i/p_1_in ;
  wire [15:0]\cbcc_gtx0_lane3_i/p_1_in ;
  wire [0:3]ch_bond_done_i;
  wire chan_bond_reset_i;
  wire \channel_init_sm_i/chan_bond_reset_i ;
  wire \channel_init_sm_i/wait_for_lane_up_r0 ;
  wire channel_up;
  wire channel_up_tx_if;
  wire check_polarity_i_0;
  wire check_polarity_i_1;
  wire check_polarity_i_2;
  wire check_polarity_i_3;
  wire do_cc_i;
  wire [9:0]drpaddr_in_i;
  wire [9:0]drpaddr_in_lane1_i;
  wire [9:0]drpaddr_in_lane2_i;
  wire [9:0]drpaddr_in_lane3_i;
  wire [15:0]drpdi_in_i;
  wire [15:0]drpdi_in_lane1_i;
  wire [15:0]drpdi_in_lane2_i;
  wire [15:0]drpdi_in_lane3_i;
  wire [15:0]drpdo_out_i;
  wire [15:0]drpdo_out_lane1_i;
  wire [15:0]drpdo_out_lane2_i;
  wire [15:0]drpdo_out_lane3_i;
  wire drpen_in_i;
  wire drpen_in_lane1_i;
  wire drpen_in_lane2_i;
  wire drpen_in_lane3_i;
  wire drprdy_out_i;
  wire drprdy_out_lane1_i;
  wire drprdy_out_lane2_i;
  wire drprdy_out_lane3_i;
  wire drpwe_in_i;
  wire drpwe_in_lane1_i;
  wire drpwe_in_lane2_i;
  wire drpwe_in_lane3_i;
  wire en_chan_sync_i;
  wire \err_detect_i/HARD_ERR0__0 ;
  wire fsm_resetdone;
  wire [0:3]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire global_logic_i_n_12;
  wire global_logic_i_n_27;
  wire global_logic_i_n_28;
  wire global_logic_i_n_29;
  wire global_logic_i_n_30;
  wire global_logic_i_n_31;
  wire global_logic_i_n_32;
  wire global_logic_i_n_33;
  wire global_logic_i_n_34;
  wire global_logic_i_n_35;
  wire global_logic_i_n_36;
  wire global_logic_i_n_37;
  wire global_logic_i_n_38;
  wire global_logic_i_n_39;
  wire global_logic_i_n_40;
  wire global_logic_i_n_41;
  wire global_logic_i_n_42;
  wire global_logic_i_n_43;
  wire global_logic_i_n_44;
  wire global_logic_i_n_45;
  wire global_logic_i_n_46;
  wire global_logic_i_n_47;
  wire [0:3]got_idles_i;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_in;
  wire gt_qplllock_quad1_in;
  wire gt_qpllrefclk_quad1_in;
  wire gt_refclk1;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_out;
  wire hard_err;
  wire [0:3]hard_err_i;
  wire init_clk;
  wire \lane_init_sm_i/ready_r_reg0 ;
  wire \lane_init_sm_i/ready_r_reg0_3 ;
  wire \lane_init_sm_i/ready_r_reg0_4 ;
  wire \lane_init_sm_i/ready_r_reg0_5 ;
  wire [0:3]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked;
  wire p_0_in;
  wire [55:52]p_1_in;
  wire [55:52]p_1_in_6;
  wire [55:52]p_1_in_7;
  wire [55:52]p_1_in_8;
  wire pma_init;
  wire power_down;
  wire reset_lanes_i;
  wire rst_drp;
  wire rx_header_1_i_0;
  wire rx_header_1_i_1;
  wire rx_header_1_i_2;
  wire rx_header_1_i_3;
  wire rx_header_err_i_0;
  wire rx_header_err_i_1;
  wire rx_header_err_i_2;
  wire rx_header_err_i_3;
  wire rx_lossofsync_i_0;
  wire rx_lossofsync_i_1;
  wire rx_lossofsync_i_2;
  wire rx_lossofsync_i_3;
  wire rx_neg_i_0;
  wire rx_neg_i_1;
  wire rx_neg_i_2;
  wire rx_neg_i_3;
  wire [0:255]rx_pe_data_i;
  wire [0:3]rx_pe_data_v_i;
  wire rx_polarity_i_0;
  wire rx_polarity_i_1;
  wire rx_polarity_i_2;
  wire rx_polarity_i_3;
  wire rx_reset_i_0;
  wire rx_reset_i_1;
  wire rx_reset_i_2;
  wire rx_reset_i_3;
  wire rxdatavalid_to_lanes_i;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [31:0]s_axi_araddr;
  wire [31:0]s_axi_araddr_lane1;
  wire [31:0]s_axi_araddr_lane2;
  wire [31:0]s_axi_araddr_lane3;
  wire s_axi_arready;
  wire s_axi_arready_lane1;
  wire s_axi_arready_lane2;
  wire s_axi_arready_lane3;
  wire s_axi_arvalid;
  wire s_axi_arvalid_lane1;
  wire s_axi_arvalid_lane2;
  wire s_axi_arvalid_lane3;
  wire [31:0]s_axi_awaddr;
  wire [31:0]s_axi_awaddr_lane1;
  wire [31:0]s_axi_awaddr_lane2;
  wire [31:0]s_axi_awaddr_lane3;
  wire s_axi_awready;
  wire s_axi_awready_lane1;
  wire s_axi_awready_lane2;
  wire s_axi_awready_lane3;
  wire s_axi_awvalid;
  wire s_axi_awvalid_lane1;
  wire s_axi_awvalid_lane2;
  wire s_axi_awvalid_lane3;
  wire s_axi_bready;
  wire s_axi_bready_lane1;
  wire s_axi_bready_lane2;
  wire s_axi_bready_lane3;
  wire s_axi_bvalid;
  wire s_axi_bvalid_lane1;
  wire s_axi_bvalid_lane2;
  wire s_axi_bvalid_lane3;
  wire [15:0]\^s_axi_rdata ;
  wire [15:0]\^s_axi_rdata_lane1 ;
  wire [15:0]\^s_axi_rdata_lane2 ;
  wire [15:0]\^s_axi_rdata_lane3 ;
  wire s_axi_rready;
  wire s_axi_rready_lane1;
  wire s_axi_rready_lane2;
  wire s_axi_rready_lane3;
  wire s_axi_rvalid;
  wire s_axi_rvalid_lane1;
  wire s_axi_rvalid_lane2;
  wire s_axi_rvalid_lane3;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [31:0]s_axi_wdata;
  wire [31:0]s_axi_wdata_lane1;
  wire [31:0]s_axi_wdata_lane2;
  wire [31:0]s_axi_wdata_lane3;
  wire s_axi_wready;
  wire s_axi_wready_lane1;
  wire s_axi_wready_lane2;
  wire s_axi_wready_lane3;
  wire s_axi_wvalid;
  wire s_axi_wvalid_lane1;
  wire s_axi_wvalid_lane2;
  wire s_axi_wvalid_lane3;
  wire soft_err;
  wire [0:3]soft_err_i;
  wire \sym_dec_i/RXDATAVALID_IN_REG ;
  wire \sym_gen_i/rst_pma_init_usrclk ;
  wire \sym_gen_i/rst_pma_init_usrclk_0 ;
  wire \sym_gen_i/rst_pma_init_usrclk_1 ;
  wire \sym_gen_i/rst_pma_init_usrclk_2 ;
  wire sync_clk;
  wire sys_reset_out;
  wire sysreset_to_core;
  wire sysreset_to_core_sync;
  wire [63:0]tx_data_i_0;
  wire [63:0]tx_data_i_128;
  wire [63:0]tx_data_i_192;
  wire [63:0]tx_data_i_64;
  wire tx_header_0_i_0;
  wire tx_header_0_i_1;
  wire tx_header_0_i_2;
  wire tx_header_0_i_3;
  wire tx_header_1_i_0;
  wire tx_header_1_i_1;
  wire tx_header_1_i_2;
  wire tx_header_1_i_3;
  wire tx_out_clk;
  wire [0:255]tx_pe_data_i;
  wire [0:0]tx_pe_data_v_i;
  wire \tx_stream_control_sm_i/R0 ;
  wire \tx_stream_control_sm_i/do_cc_r0 ;
  wire \tx_stream_control_sm_i/extend_cc_r ;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire [0:3]txn;
  wire [0:3]txp;
  wire user_clk;

  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bresp_lane1[1] = \<const0> ;
  assign s_axi_bresp_lane1[0] = \<const0> ;
  assign s_axi_bresp_lane2[1] = \<const0> ;
  assign s_axi_bresp_lane2[0] = \<const0> ;
  assign s_axi_bresp_lane3[1] = \<const0> ;
  assign s_axi_bresp_lane3[0] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15:0] = \^s_axi_rdata [15:0];
  assign s_axi_rdata_lane1[31] = \<const0> ;
  assign s_axi_rdata_lane1[30] = \<const0> ;
  assign s_axi_rdata_lane1[29] = \<const0> ;
  assign s_axi_rdata_lane1[28] = \<const0> ;
  assign s_axi_rdata_lane1[27] = \<const0> ;
  assign s_axi_rdata_lane1[26] = \<const0> ;
  assign s_axi_rdata_lane1[25] = \<const0> ;
  assign s_axi_rdata_lane1[24] = \<const0> ;
  assign s_axi_rdata_lane1[23] = \<const0> ;
  assign s_axi_rdata_lane1[22] = \<const0> ;
  assign s_axi_rdata_lane1[21] = \<const0> ;
  assign s_axi_rdata_lane1[20] = \<const0> ;
  assign s_axi_rdata_lane1[19] = \<const0> ;
  assign s_axi_rdata_lane1[18] = \<const0> ;
  assign s_axi_rdata_lane1[17] = \<const0> ;
  assign s_axi_rdata_lane1[16] = \<const0> ;
  assign s_axi_rdata_lane1[15:0] = \^s_axi_rdata_lane1 [15:0];
  assign s_axi_rdata_lane2[31] = \<const0> ;
  assign s_axi_rdata_lane2[30] = \<const0> ;
  assign s_axi_rdata_lane2[29] = \<const0> ;
  assign s_axi_rdata_lane2[28] = \<const0> ;
  assign s_axi_rdata_lane2[27] = \<const0> ;
  assign s_axi_rdata_lane2[26] = \<const0> ;
  assign s_axi_rdata_lane2[25] = \<const0> ;
  assign s_axi_rdata_lane2[24] = \<const0> ;
  assign s_axi_rdata_lane2[23] = \<const0> ;
  assign s_axi_rdata_lane2[22] = \<const0> ;
  assign s_axi_rdata_lane2[21] = \<const0> ;
  assign s_axi_rdata_lane2[20] = \<const0> ;
  assign s_axi_rdata_lane2[19] = \<const0> ;
  assign s_axi_rdata_lane2[18] = \<const0> ;
  assign s_axi_rdata_lane2[17] = \<const0> ;
  assign s_axi_rdata_lane2[16] = \<const0> ;
  assign s_axi_rdata_lane2[15:0] = \^s_axi_rdata_lane2 [15:0];
  assign s_axi_rdata_lane3[31] = \<const0> ;
  assign s_axi_rdata_lane3[30] = \<const0> ;
  assign s_axi_rdata_lane3[29] = \<const0> ;
  assign s_axi_rdata_lane3[28] = \<const0> ;
  assign s_axi_rdata_lane3[27] = \<const0> ;
  assign s_axi_rdata_lane3[26] = \<const0> ;
  assign s_axi_rdata_lane3[25] = \<const0> ;
  assign s_axi_rdata_lane3[24] = \<const0> ;
  assign s_axi_rdata_lane3[23] = \<const0> ;
  assign s_axi_rdata_lane3[22] = \<const0> ;
  assign s_axi_rdata_lane3[21] = \<const0> ;
  assign s_axi_rdata_lane3[20] = \<const0> ;
  assign s_axi_rdata_lane3[19] = \<const0> ;
  assign s_axi_rdata_lane3[18] = \<const0> ;
  assign s_axi_rdata_lane3[17] = \<const0> ;
  assign s_axi_rdata_lane3[16] = \<const0> ;
  assign s_axi_rdata_lane3[15:0] = \^s_axi_rdata_lane3 [15:0];
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rresp_lane1[1] = \<const0> ;
  assign s_axi_rresp_lane1[0] = \<const0> ;
  assign s_axi_rresp_lane2[1] = \<const0> ;
  assign s_axi_rresp_lane2[0] = \<const0> ;
  assign s_axi_rresp_lane3[1] = \<const0> ;
  assign s_axi_rresp_lane3[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  aurora_64b66b_w256_1375Gbps_WRAPPER aurora_64b66b_w256_1375Gbps_wrapper_i
       (.CHANNEL_UP_RX_IF(channel_up),
        .CHANNEL_UP_TX_IF(channel_up_tx_if),
        .CHAN_BOND_RESET(chan_bond_reset_i),
        .CHECK_POLARITY_IN(check_polarity_i_3),
        .CHECK_POLARITY_IN_LANE1(check_polarity_i_2),
        .CHECK_POLARITY_IN_LANE2(check_polarity_i_1),
        .CHECK_POLARITY_IN_LANE3(check_polarity_i_0),
        .EN_CHAN_SYNC(en_chan_sync_i),
        .HARD_ERR0__0(\err_detect_i/HARD_ERR0__0 ),
        .Q({\cbcc_gtx0_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_109,aurora_64b66b_w256_1375Gbps_wrapper_i_n_110,aurora_64b66b_w256_1375Gbps_wrapper_i_n_111,aurora_64b66b_w256_1375Gbps_wrapper_i_n_112,aurora_64b66b_w256_1375Gbps_wrapper_i_n_113,aurora_64b66b_w256_1375Gbps_wrapper_i_n_114,aurora_64b66b_w256_1375Gbps_wrapper_i_n_115,aurora_64b66b_w256_1375Gbps_wrapper_i_n_116,aurora_64b66b_w256_1375Gbps_wrapper_i_n_117,aurora_64b66b_w256_1375Gbps_wrapper_i_n_118,aurora_64b66b_w256_1375Gbps_wrapper_i_n_119,aurora_64b66b_w256_1375Gbps_wrapper_i_n_120,aurora_64b66b_w256_1375Gbps_wrapper_i_n_121,aurora_64b66b_w256_1375Gbps_wrapper_i_n_122,aurora_64b66b_w256_1375Gbps_wrapper_i_n_123,aurora_64b66b_w256_1375Gbps_wrapper_i_n_124,aurora_64b66b_w256_1375Gbps_wrapper_i_n_125,aurora_64b66b_w256_1375Gbps_wrapper_i_n_126,aurora_64b66b_w256_1375Gbps_wrapper_i_n_127,aurora_64b66b_w256_1375Gbps_wrapper_i_n_128,aurora_64b66b_w256_1375Gbps_wrapper_i_n_129,aurora_64b66b_w256_1375Gbps_wrapper_i_n_130,aurora_64b66b_w256_1375Gbps_wrapper_i_n_131,aurora_64b66b_w256_1375Gbps_wrapper_i_n_132,aurora_64b66b_w256_1375Gbps_wrapper_i_n_133,aurora_64b66b_w256_1375Gbps_wrapper_i_n_134,aurora_64b66b_w256_1375Gbps_wrapper_i_n_135,aurora_64b66b_w256_1375Gbps_wrapper_i_n_136,aurora_64b66b_w256_1375Gbps_wrapper_i_n_137,aurora_64b66b_w256_1375Gbps_wrapper_i_n_138,aurora_64b66b_w256_1375Gbps_wrapper_i_n_139,aurora_64b66b_w256_1375Gbps_wrapper_i_n_140,aurora_64b66b_w256_1375Gbps_wrapper_i_n_141,aurora_64b66b_w256_1375Gbps_wrapper_i_n_142,aurora_64b66b_w256_1375Gbps_wrapper_i_n_143,aurora_64b66b_w256_1375Gbps_wrapper_i_n_144,aurora_64b66b_w256_1375Gbps_wrapper_i_n_145,aurora_64b66b_w256_1375Gbps_wrapper_i_n_146,aurora_64b66b_w256_1375Gbps_wrapper_i_n_147,aurora_64b66b_w256_1375Gbps_wrapper_i_n_148,aurora_64b66b_w256_1375Gbps_wrapper_i_n_149,aurora_64b66b_w256_1375Gbps_wrapper_i_n_150,aurora_64b66b_w256_1375Gbps_wrapper_i_n_151,aurora_64b66b_w256_1375Gbps_wrapper_i_n_152,aurora_64b66b_w256_1375Gbps_wrapper_i_n_153,aurora_64b66b_w256_1375Gbps_wrapper_i_n_154,aurora_64b66b_w256_1375Gbps_wrapper_i_n_155,aurora_64b66b_w256_1375Gbps_wrapper_i_n_156}),
        .RXHEADER_OUT_ERR(rx_header_err_i_3),
        .RXHEADER_OUT_ERR_LANE1(rx_header_err_i_2),
        .RXHEADER_OUT_ERR_LANE2(rx_header_err_i_1),
        .RXHEADER_OUT_ERR_LANE3(rx_header_err_i_0),
        .RXLOSSOFSYNC_OUT(rx_lossofsync_i_3),
        .RXLOSSOFSYNC_OUT_LANE1(rx_lossofsync_i_2),
        .RXLOSSOFSYNC_OUT_LANE2(rx_lossofsync_i_1),
        .RXLOSSOFSYNC_OUT_LANE3(rx_lossofsync_i_0),
        .RXPOLARITY_IN(rx_polarity_i_3),
        .RXPOLARITY_IN_LANE1(rx_polarity_i_2),
        .RXPOLARITY_IN_LANE2(rx_polarity_i_1),
        .RXPOLARITY_IN_LANE3(rx_polarity_i_0),
        .RX_NEG_OUT_LANE1_reg_0(rx_neg_i_2),
        .RX_NEG_OUT_LANE2_reg_0(rx_neg_i_1),
        .RX_NEG_OUT_LANE3_reg_0(rx_neg_i_0),
        .RX_NEG_OUT_reg_0(rx_neg_i_3),
        .TXDATAVALID_IN(txdatavalid_i),
        .TXDATA_IN(tx_data_i_192),
        .TXDATA_IN_LANE1(tx_data_i_128),
        .TXDATA_IN_LANE2(tx_data_i_64),
        .TXDATA_IN_LANE3(tx_data_i_0),
        .TXHEADER_IN({tx_header_1_i_3,tx_header_0_i_3}),
        .TXHEADER_IN_LANE1({tx_header_1_i_2,tx_header_0_i_2}),
        .TXHEADER_IN_LANE2({tx_header_1_i_1,tx_header_0_i_1}),
        .TXHEADER_IN_LANE3({tx_header_1_i_0,tx_header_0_i_0}),
        .bufg_gt_clr_out(bufg_gt_clr_out),
        .ch_bond_done_i(ch_bond_done_i),
        .drpaddr_in({drpaddr_in_lane3_i,drpaddr_in_lane2_i,drpaddr_in_lane1_i,drpaddr_in_i}),
        .drpdi_in({drpdi_in_lane3_i,drpdi_in_lane2_i,drpdi_in_lane1_i,drpdi_in_i}),
        .drpdo_out({drpdo_out_lane3_i,drpdo_out_lane2_i,drpdo_out_lane1_i,drpdo_out_i}),
        .drpen_in({drpen_in_lane3_i,drpen_in_lane2_i,drpen_in_lane1_i,drpen_in_i}),
        .drprdy_out({drprdy_out_lane3_i,drprdy_out_lane2_i,drprdy_out_lane1_i,drprdy_out_i}),
        .drpwe_in({drpwe_in_lane3_i,drpwe_in_lane2_i,drpwe_in_lane1_i,drpwe_in_i}),
        .\fifo_dout_reg[63] ({\cbcc_gtx0_lane1_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_179,aurora_64b66b_w256_1375Gbps_wrapper_i_n_180,aurora_64b66b_w256_1375Gbps_wrapper_i_n_181,aurora_64b66b_w256_1375Gbps_wrapper_i_n_182,aurora_64b66b_w256_1375Gbps_wrapper_i_n_183,aurora_64b66b_w256_1375Gbps_wrapper_i_n_184,aurora_64b66b_w256_1375Gbps_wrapper_i_n_185,aurora_64b66b_w256_1375Gbps_wrapper_i_n_186,aurora_64b66b_w256_1375Gbps_wrapper_i_n_187,aurora_64b66b_w256_1375Gbps_wrapper_i_n_188,aurora_64b66b_w256_1375Gbps_wrapper_i_n_189,aurora_64b66b_w256_1375Gbps_wrapper_i_n_190,aurora_64b66b_w256_1375Gbps_wrapper_i_n_191,aurora_64b66b_w256_1375Gbps_wrapper_i_n_192,aurora_64b66b_w256_1375Gbps_wrapper_i_n_193,aurora_64b66b_w256_1375Gbps_wrapper_i_n_194,aurora_64b66b_w256_1375Gbps_wrapper_i_n_195,aurora_64b66b_w256_1375Gbps_wrapper_i_n_196,aurora_64b66b_w256_1375Gbps_wrapper_i_n_197,aurora_64b66b_w256_1375Gbps_wrapper_i_n_198,aurora_64b66b_w256_1375Gbps_wrapper_i_n_199,aurora_64b66b_w256_1375Gbps_wrapper_i_n_200,aurora_64b66b_w256_1375Gbps_wrapper_i_n_201,aurora_64b66b_w256_1375Gbps_wrapper_i_n_202,aurora_64b66b_w256_1375Gbps_wrapper_i_n_203,aurora_64b66b_w256_1375Gbps_wrapper_i_n_204,aurora_64b66b_w256_1375Gbps_wrapper_i_n_205,aurora_64b66b_w256_1375Gbps_wrapper_i_n_206,aurora_64b66b_w256_1375Gbps_wrapper_i_n_207,aurora_64b66b_w256_1375Gbps_wrapper_i_n_208,aurora_64b66b_w256_1375Gbps_wrapper_i_n_209,aurora_64b66b_w256_1375Gbps_wrapper_i_n_210,aurora_64b66b_w256_1375Gbps_wrapper_i_n_211,aurora_64b66b_w256_1375Gbps_wrapper_i_n_212,aurora_64b66b_w256_1375Gbps_wrapper_i_n_213,aurora_64b66b_w256_1375Gbps_wrapper_i_n_214,aurora_64b66b_w256_1375Gbps_wrapper_i_n_215,aurora_64b66b_w256_1375Gbps_wrapper_i_n_216,aurora_64b66b_w256_1375Gbps_wrapper_i_n_217,aurora_64b66b_w256_1375Gbps_wrapper_i_n_218,aurora_64b66b_w256_1375Gbps_wrapper_i_n_219,aurora_64b66b_w256_1375Gbps_wrapper_i_n_220,aurora_64b66b_w256_1375Gbps_wrapper_i_n_221,aurora_64b66b_w256_1375Gbps_wrapper_i_n_222,aurora_64b66b_w256_1375Gbps_wrapper_i_n_223,aurora_64b66b_w256_1375Gbps_wrapper_i_n_224,aurora_64b66b_w256_1375Gbps_wrapper_i_n_225,aurora_64b66b_w256_1375Gbps_wrapper_i_n_226}),
        .\fifo_dout_reg[63]_0 ({\cbcc_gtx0_lane2_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_245,aurora_64b66b_w256_1375Gbps_wrapper_i_n_246,aurora_64b66b_w256_1375Gbps_wrapper_i_n_247,aurora_64b66b_w256_1375Gbps_wrapper_i_n_248,aurora_64b66b_w256_1375Gbps_wrapper_i_n_249,aurora_64b66b_w256_1375Gbps_wrapper_i_n_250,aurora_64b66b_w256_1375Gbps_wrapper_i_n_251,aurora_64b66b_w256_1375Gbps_wrapper_i_n_252,aurora_64b66b_w256_1375Gbps_wrapper_i_n_253,aurora_64b66b_w256_1375Gbps_wrapper_i_n_254,aurora_64b66b_w256_1375Gbps_wrapper_i_n_255,aurora_64b66b_w256_1375Gbps_wrapper_i_n_256,aurora_64b66b_w256_1375Gbps_wrapper_i_n_257,aurora_64b66b_w256_1375Gbps_wrapper_i_n_258,aurora_64b66b_w256_1375Gbps_wrapper_i_n_259,aurora_64b66b_w256_1375Gbps_wrapper_i_n_260,aurora_64b66b_w256_1375Gbps_wrapper_i_n_261,aurora_64b66b_w256_1375Gbps_wrapper_i_n_262,aurora_64b66b_w256_1375Gbps_wrapper_i_n_263,aurora_64b66b_w256_1375Gbps_wrapper_i_n_264,aurora_64b66b_w256_1375Gbps_wrapper_i_n_265,aurora_64b66b_w256_1375Gbps_wrapper_i_n_266,aurora_64b66b_w256_1375Gbps_wrapper_i_n_267,aurora_64b66b_w256_1375Gbps_wrapper_i_n_268,aurora_64b66b_w256_1375Gbps_wrapper_i_n_269,aurora_64b66b_w256_1375Gbps_wrapper_i_n_270,aurora_64b66b_w256_1375Gbps_wrapper_i_n_271,aurora_64b66b_w256_1375Gbps_wrapper_i_n_272,aurora_64b66b_w256_1375Gbps_wrapper_i_n_273,aurora_64b66b_w256_1375Gbps_wrapper_i_n_274,aurora_64b66b_w256_1375Gbps_wrapper_i_n_275,aurora_64b66b_w256_1375Gbps_wrapper_i_n_276,aurora_64b66b_w256_1375Gbps_wrapper_i_n_277,aurora_64b66b_w256_1375Gbps_wrapper_i_n_278,aurora_64b66b_w256_1375Gbps_wrapper_i_n_279,aurora_64b66b_w256_1375Gbps_wrapper_i_n_280,aurora_64b66b_w256_1375Gbps_wrapper_i_n_281,aurora_64b66b_w256_1375Gbps_wrapper_i_n_282,aurora_64b66b_w256_1375Gbps_wrapper_i_n_283,aurora_64b66b_w256_1375Gbps_wrapper_i_n_284,aurora_64b66b_w256_1375Gbps_wrapper_i_n_285,aurora_64b66b_w256_1375Gbps_wrapper_i_n_286,aurora_64b66b_w256_1375Gbps_wrapper_i_n_287,aurora_64b66b_w256_1375Gbps_wrapper_i_n_288,aurora_64b66b_w256_1375Gbps_wrapper_i_n_289,aurora_64b66b_w256_1375Gbps_wrapper_i_n_290,aurora_64b66b_w256_1375Gbps_wrapper_i_n_291,aurora_64b66b_w256_1375Gbps_wrapper_i_n_292}),
        .\fifo_dout_reg[63]_1 ({\cbcc_gtx0_lane3_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_311,aurora_64b66b_w256_1375Gbps_wrapper_i_n_312,aurora_64b66b_w256_1375Gbps_wrapper_i_n_313,aurora_64b66b_w256_1375Gbps_wrapper_i_n_314,aurora_64b66b_w256_1375Gbps_wrapper_i_n_315,aurora_64b66b_w256_1375Gbps_wrapper_i_n_316,aurora_64b66b_w256_1375Gbps_wrapper_i_n_317,aurora_64b66b_w256_1375Gbps_wrapper_i_n_318,aurora_64b66b_w256_1375Gbps_wrapper_i_n_319,aurora_64b66b_w256_1375Gbps_wrapper_i_n_320,aurora_64b66b_w256_1375Gbps_wrapper_i_n_321,aurora_64b66b_w256_1375Gbps_wrapper_i_n_322,aurora_64b66b_w256_1375Gbps_wrapper_i_n_323,aurora_64b66b_w256_1375Gbps_wrapper_i_n_324,aurora_64b66b_w256_1375Gbps_wrapper_i_n_325,aurora_64b66b_w256_1375Gbps_wrapper_i_n_326,aurora_64b66b_w256_1375Gbps_wrapper_i_n_327,aurora_64b66b_w256_1375Gbps_wrapper_i_n_328,aurora_64b66b_w256_1375Gbps_wrapper_i_n_329,aurora_64b66b_w256_1375Gbps_wrapper_i_n_330,aurora_64b66b_w256_1375Gbps_wrapper_i_n_331,aurora_64b66b_w256_1375Gbps_wrapper_i_n_332,aurora_64b66b_w256_1375Gbps_wrapper_i_n_333,aurora_64b66b_w256_1375Gbps_wrapper_i_n_334,aurora_64b66b_w256_1375Gbps_wrapper_i_n_335,aurora_64b66b_w256_1375Gbps_wrapper_i_n_336,aurora_64b66b_w256_1375Gbps_wrapper_i_n_337,aurora_64b66b_w256_1375Gbps_wrapper_i_n_338,aurora_64b66b_w256_1375Gbps_wrapper_i_n_339,aurora_64b66b_w256_1375Gbps_wrapper_i_n_340,aurora_64b66b_w256_1375Gbps_wrapper_i_n_341,aurora_64b66b_w256_1375Gbps_wrapper_i_n_342,aurora_64b66b_w256_1375Gbps_wrapper_i_n_343,aurora_64b66b_w256_1375Gbps_wrapper_i_n_344,aurora_64b66b_w256_1375Gbps_wrapper_i_n_345,aurora_64b66b_w256_1375Gbps_wrapper_i_n_346,aurora_64b66b_w256_1375Gbps_wrapper_i_n_347,aurora_64b66b_w256_1375Gbps_wrapper_i_n_348,aurora_64b66b_w256_1375Gbps_wrapper_i_n_349,aurora_64b66b_w256_1375Gbps_wrapper_i_n_350,aurora_64b66b_w256_1375Gbps_wrapper_i_n_351,aurora_64b66b_w256_1375Gbps_wrapper_i_n_352,aurora_64b66b_w256_1375Gbps_wrapper_i_n_353,aurora_64b66b_w256_1375Gbps_wrapper_i_n_354,aurora_64b66b_w256_1375Gbps_wrapper_i_n_355,aurora_64b66b_w256_1375Gbps_wrapper_i_n_356,aurora_64b66b_w256_1375Gbps_wrapper_i_n_357,aurora_64b66b_w256_1375Gbps_wrapper_i_n_358}),
        .\fifo_dout_reg[64] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_369),
        .\fifo_dout_reg[64]_0 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_371),
        .\fifo_dout_reg[64]_1 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_373),
        .\fifo_dout_reg[64]_2 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_375),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_in(gt_qpllclk_quad1_in),
        .gt_qplllock_quad1_in(gt_qplllock_quad1_in),
        .gt_qpllrefclk_quad1_in(gt_qpllrefclk_quad1_in),
        .gt_refclk1(gt_refclk1),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gt_to_common_qpllreset_out(gt_to_common_qpllreset_out),
        .hold_reg_r_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_7),
        .hold_reg_r_reg_0(aurora_64b66b_w256_1375Gbps_wrapper_i_n_8),
        .hold_reg_r_reg_1(aurora_64b66b_w256_1375Gbps_wrapper_i_n_9),
        .hold_reg_r_reg_2(aurora_64b66b_w256_1375Gbps_wrapper_i_n_10),
        .in0(fsm_resetdone),
        .init_clk(init_clk),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .mmcm_not_locked(mmcm_not_locked),
        .rst_drp(rst_drp),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rst_pma_init_usrclk_0(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rst_pma_init_usrclk_1(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rst_pma_init_usrclk_2(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rx_header_1_i_0(rx_header_1_i_0),
        .rx_header_1_i_1(rx_header_1_i_1),
        .rx_header_1_i_2(rx_header_1_i_2),
        .rx_header_1_i_3(rx_header_1_i_3),
        .rx_reset_i_0(rx_reset_i_0),
        .rx_reset_i_1(rx_reset_i_1),
        .rx_reset_i_2(rx_reset_i_2),
        .rx_reset_i_3(rx_reset_i_3),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .rxn(rxn),
        .rxp(rxp),
        .stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(sys_reset_out),
        .stg5_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_0),
        .stg5_reg_0(aurora_64b66b_w256_1375Gbps_wrapper_i_n_1),
        .stg5_reg_1(aurora_64b66b_w256_1375Gbps_wrapper_i_n_2),
        .stg5_reg_2(aurora_64b66b_w256_1375Gbps_wrapper_i_n_3),
        .sync_clk(sync_clk),
        .tx_out_clk(tx_out_clk),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .txn(txn),
        .txp(txp),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_AURORA_LANE aurora_lane_0_i
       (.CHECK_POLARITY_IN(check_polarity_i_3),
        .D(p_1_in_8),
        .GEN_CH_BOND(gen_ch_bond_i),
        .HARD_ERR0__0(\err_detect_i/HARD_ERR0__0 ),
        .ILLEGAL_BTF_reg(sys_reset_out),
        .Q({\cbcc_gtx0_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_109,aurora_64b66b_w256_1375Gbps_wrapper_i_n_110,aurora_64b66b_w256_1375Gbps_wrapper_i_n_111,aurora_64b66b_w256_1375Gbps_wrapper_i_n_112,aurora_64b66b_w256_1375Gbps_wrapper_i_n_113,aurora_64b66b_w256_1375Gbps_wrapper_i_n_114,aurora_64b66b_w256_1375Gbps_wrapper_i_n_115,aurora_64b66b_w256_1375Gbps_wrapper_i_n_116,aurora_64b66b_w256_1375Gbps_wrapper_i_n_117,aurora_64b66b_w256_1375Gbps_wrapper_i_n_118,aurora_64b66b_w256_1375Gbps_wrapper_i_n_119,aurora_64b66b_w256_1375Gbps_wrapper_i_n_120,aurora_64b66b_w256_1375Gbps_wrapper_i_n_121,aurora_64b66b_w256_1375Gbps_wrapper_i_n_122,aurora_64b66b_w256_1375Gbps_wrapper_i_n_123,aurora_64b66b_w256_1375Gbps_wrapper_i_n_124,aurora_64b66b_w256_1375Gbps_wrapper_i_n_125,aurora_64b66b_w256_1375Gbps_wrapper_i_n_126,aurora_64b66b_w256_1375Gbps_wrapper_i_n_127,aurora_64b66b_w256_1375Gbps_wrapper_i_n_128,aurora_64b66b_w256_1375Gbps_wrapper_i_n_129,aurora_64b66b_w256_1375Gbps_wrapper_i_n_130,aurora_64b66b_w256_1375Gbps_wrapper_i_n_131,aurora_64b66b_w256_1375Gbps_wrapper_i_n_132,aurora_64b66b_w256_1375Gbps_wrapper_i_n_133,aurora_64b66b_w256_1375Gbps_wrapper_i_n_134,aurora_64b66b_w256_1375Gbps_wrapper_i_n_135,aurora_64b66b_w256_1375Gbps_wrapper_i_n_136,aurora_64b66b_w256_1375Gbps_wrapper_i_n_137,aurora_64b66b_w256_1375Gbps_wrapper_i_n_138,aurora_64b66b_w256_1375Gbps_wrapper_i_n_139,aurora_64b66b_w256_1375Gbps_wrapper_i_n_140,aurora_64b66b_w256_1375Gbps_wrapper_i_n_141,aurora_64b66b_w256_1375Gbps_wrapper_i_n_142,aurora_64b66b_w256_1375Gbps_wrapper_i_n_143,aurora_64b66b_w256_1375Gbps_wrapper_i_n_144,aurora_64b66b_w256_1375Gbps_wrapper_i_n_145,aurora_64b66b_w256_1375Gbps_wrapper_i_n_146,aurora_64b66b_w256_1375Gbps_wrapper_i_n_147,aurora_64b66b_w256_1375Gbps_wrapper_i_n_148,aurora_64b66b_w256_1375Gbps_wrapper_i_n_149,aurora_64b66b_w256_1375Gbps_wrapper_i_n_150,aurora_64b66b_w256_1375Gbps_wrapper_i_n_151,aurora_64b66b_w256_1375Gbps_wrapper_i_n_152,aurora_64b66b_w256_1375Gbps_wrapper_i_n_153,aurora_64b66b_w256_1375Gbps_wrapper_i_n_154,aurora_64b66b_w256_1375Gbps_wrapper_i_n_155,aurora_64b66b_w256_1375Gbps_wrapper_i_n_156}),
        .RESET(rst_drp),
        .RESET_LANES(reset_lanes_i),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .RXHEADER_OUT_ERR(rx_header_err_i_3),
        .RXLOSSOFSYNC_OUT(rx_lossofsync_i_3),
        .RXPOLARITY_IN(rx_polarity_i_3),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_7),
        .RX_HEADER_0_REG_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_369),
        .\RX_PE_DATA_reg[0] ({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63]}),
        .TXDATA_IN(tx_data_i_192),
        .TXHEADER_IN({tx_header_1_i_3,tx_header_0_i_3}),
        .\TX_DATA_reg[59] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_0),
        .\TX_DATA_reg[59]_0 (global_logic_i_n_35),
        .\TX_DATA_reg[60] (global_logic_i_n_34),
        .\TX_DATA_reg[61] (global_logic_i_n_33),
        .\TX_DATA_reg[62] (global_logic_i_n_32),
        .\TX_DATA_reg[63] (global_logic_i_n_27),
        .\TX_DATA_reg[7] ({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47],tx_pe_data_i[52],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[56],tx_pe_data_i[61],tx_pe_data_i[62],tx_pe_data_i[63]}),
        .TX_HEADER_1_reg(global_logic_i_n_12),
        .gen_cc_i(gen_cc_i[0]),
        .got_idles_i(got_idles_i[0]),
        .hard_err_i(hard_err_i[0]),
        .lane_up_flop_i(lane_up[0]),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_5 ),
        .\remote_rdy_cntr_reg[1] (aurora_lane_0_i_n_12),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rx_header_1_i_3(rx_header_1_i_3),
        .rx_pe_data_v_i(rx_pe_data_v_i[0]),
        .rx_reset_i_3(rx_reset_i_3),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(rx_neg_i_3),
        .soft_err_i(soft_err_i[0]),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_AURORA_LANE_0 aurora_lane_1_i
       (.CHANNEL_UP_TX_IF(channel_up_tx_if),
        .CHECK_POLARITY_IN_LANE1(check_polarity_i_2),
        .D(p_1_in_7),
        .GEN_CH_BOND(gen_ch_bond_i),
        .HARD_ERR0__0(\err_detect_i/HARD_ERR0__0 ),
        .Q({tx_pe_data_i[64],tx_pe_data_i[65],tx_pe_data_i[66],tx_pe_data_i[67],tx_pe_data_i[68],tx_pe_data_i[69],tx_pe_data_i[70],tx_pe_data_i[71],tx_pe_data_i[72],tx_pe_data_i[73],tx_pe_data_i[74],tx_pe_data_i[75],tx_pe_data_i[76],tx_pe_data_i[77],tx_pe_data_i[78],tx_pe_data_i[79],tx_pe_data_i[80],tx_pe_data_i[81],tx_pe_data_i[82],tx_pe_data_i[83],tx_pe_data_i[84],tx_pe_data_i[85],tx_pe_data_i[86],tx_pe_data_i[87],tx_pe_data_i[88],tx_pe_data_i[89],tx_pe_data_i[90],tx_pe_data_i[91],tx_pe_data_i[92],tx_pe_data_i[93],tx_pe_data_i[94],tx_pe_data_i[95],tx_pe_data_i[96],tx_pe_data_i[97],tx_pe_data_i[98],tx_pe_data_i[99],tx_pe_data_i[100],tx_pe_data_i[101],tx_pe_data_i[102],tx_pe_data_i[103],tx_pe_data_i[104],tx_pe_data_i[105],tx_pe_data_i[106],tx_pe_data_i[107],tx_pe_data_i[108],tx_pe_data_i[109],tx_pe_data_i[110],tx_pe_data_i[111],tx_pe_data_i[116],tx_pe_data_i[117],tx_pe_data_i[118],tx_pe_data_i[119],tx_pe_data_i[120],tx_pe_data_i[125],tx_pe_data_i[126],tx_pe_data_i[127]}),
        .RESET(rst_drp),
        .RESET_LANES(reset_lanes_i),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .RXHEADER_OUT_ERR_LANE1(rx_header_err_i_2),
        .RXLOSSOFSYNC_OUT_LANE1(rx_lossofsync_i_2),
        .RXPOLARITY_IN_LANE1(rx_polarity_i_2),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_8),
        .\RX_DATA_REG_reg[63] ({\cbcc_gtx0_lane1_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_179,aurora_64b66b_w256_1375Gbps_wrapper_i_n_180,aurora_64b66b_w256_1375Gbps_wrapper_i_n_181,aurora_64b66b_w256_1375Gbps_wrapper_i_n_182,aurora_64b66b_w256_1375Gbps_wrapper_i_n_183,aurora_64b66b_w256_1375Gbps_wrapper_i_n_184,aurora_64b66b_w256_1375Gbps_wrapper_i_n_185,aurora_64b66b_w256_1375Gbps_wrapper_i_n_186,aurora_64b66b_w256_1375Gbps_wrapper_i_n_187,aurora_64b66b_w256_1375Gbps_wrapper_i_n_188,aurora_64b66b_w256_1375Gbps_wrapper_i_n_189,aurora_64b66b_w256_1375Gbps_wrapper_i_n_190,aurora_64b66b_w256_1375Gbps_wrapper_i_n_191,aurora_64b66b_w256_1375Gbps_wrapper_i_n_192,aurora_64b66b_w256_1375Gbps_wrapper_i_n_193,aurora_64b66b_w256_1375Gbps_wrapper_i_n_194,aurora_64b66b_w256_1375Gbps_wrapper_i_n_195,aurora_64b66b_w256_1375Gbps_wrapper_i_n_196,aurora_64b66b_w256_1375Gbps_wrapper_i_n_197,aurora_64b66b_w256_1375Gbps_wrapper_i_n_198,aurora_64b66b_w256_1375Gbps_wrapper_i_n_199,aurora_64b66b_w256_1375Gbps_wrapper_i_n_200,aurora_64b66b_w256_1375Gbps_wrapper_i_n_201,aurora_64b66b_w256_1375Gbps_wrapper_i_n_202,aurora_64b66b_w256_1375Gbps_wrapper_i_n_203,aurora_64b66b_w256_1375Gbps_wrapper_i_n_204,aurora_64b66b_w256_1375Gbps_wrapper_i_n_205,aurora_64b66b_w256_1375Gbps_wrapper_i_n_206,aurora_64b66b_w256_1375Gbps_wrapper_i_n_207,aurora_64b66b_w256_1375Gbps_wrapper_i_n_208,aurora_64b66b_w256_1375Gbps_wrapper_i_n_209,aurora_64b66b_w256_1375Gbps_wrapper_i_n_210,aurora_64b66b_w256_1375Gbps_wrapper_i_n_211,aurora_64b66b_w256_1375Gbps_wrapper_i_n_212,aurora_64b66b_w256_1375Gbps_wrapper_i_n_213,aurora_64b66b_w256_1375Gbps_wrapper_i_n_214,aurora_64b66b_w256_1375Gbps_wrapper_i_n_215,aurora_64b66b_w256_1375Gbps_wrapper_i_n_216,aurora_64b66b_w256_1375Gbps_wrapper_i_n_217,aurora_64b66b_w256_1375Gbps_wrapper_i_n_218,aurora_64b66b_w256_1375Gbps_wrapper_i_n_219,aurora_64b66b_w256_1375Gbps_wrapper_i_n_220,aurora_64b66b_w256_1375Gbps_wrapper_i_n_221,aurora_64b66b_w256_1375Gbps_wrapper_i_n_222,aurora_64b66b_w256_1375Gbps_wrapper_i_n_223,aurora_64b66b_w256_1375Gbps_wrapper_i_n_224,aurora_64b66b_w256_1375Gbps_wrapper_i_n_225,aurora_64b66b_w256_1375Gbps_wrapper_i_n_226}),
        .RX_HEADER_0_REG_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_371),
        .RX_IDLE_reg(sys_reset_out),
        .\RX_PE_DATA_reg[0] ({rx_pe_data_i[64],rx_pe_data_i[65],rx_pe_data_i[66],rx_pe_data_i[67],rx_pe_data_i[68],rx_pe_data_i[69],rx_pe_data_i[70],rx_pe_data_i[71],rx_pe_data_i[72],rx_pe_data_i[73],rx_pe_data_i[74],rx_pe_data_i[75],rx_pe_data_i[76],rx_pe_data_i[77],rx_pe_data_i[78],rx_pe_data_i[79],rx_pe_data_i[80],rx_pe_data_i[81],rx_pe_data_i[82],rx_pe_data_i[83],rx_pe_data_i[84],rx_pe_data_i[85],rx_pe_data_i[86],rx_pe_data_i[87],rx_pe_data_i[88],rx_pe_data_i[89],rx_pe_data_i[90],rx_pe_data_i[91],rx_pe_data_i[92],rx_pe_data_i[93],rx_pe_data_i[94],rx_pe_data_i[95],rx_pe_data_i[96],rx_pe_data_i[97],rx_pe_data_i[98],rx_pe_data_i[99],rx_pe_data_i[100],rx_pe_data_i[101],rx_pe_data_i[102],rx_pe_data_i[103],rx_pe_data_i[104],rx_pe_data_i[105],rx_pe_data_i[106],rx_pe_data_i[107],rx_pe_data_i[108],rx_pe_data_i[109],rx_pe_data_i[110],rx_pe_data_i[111],rx_pe_data_i[112],rx_pe_data_i[113],rx_pe_data_i[114],rx_pe_data_i[115],rx_pe_data_i[116],rx_pe_data_i[117],rx_pe_data_i[118],rx_pe_data_i[119],rx_pe_data_i[120],rx_pe_data_i[121],rx_pe_data_i[122],rx_pe_data_i[123],rx_pe_data_i[124],rx_pe_data_i[125],rx_pe_data_i[126],rx_pe_data_i[127]}),
        .SOFT_ERR_reg(aurora_lane_1_i_n_12),
        .TXDATA_IN_LANE1(tx_data_i_128),
        .TXHEADER_IN_LANE1({tx_header_1_i_2,tx_header_0_i_2}),
        .\TX_DATA_reg[59] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_1),
        .\TX_DATA_reg[59]_0 (global_logic_i_n_39),
        .\TX_DATA_reg[60] (global_logic_i_n_38),
        .\TX_DATA_reg[61] (global_logic_i_n_37),
        .\TX_DATA_reg[62] (global_logic_i_n_36),
        .\TX_DATA_reg[63] (global_logic_i_n_28),
        .TX_HEADER_1_reg(global_logic_i_n_12),
        .\chan_bond_timer_reg[0] (lane_up[0]),
        .\chan_bond_timer_reg[0]_0 (lane_up[3]),
        .\chan_bond_timer_reg[0]_1 (lane_up[2]),
        .gen_cc_i(gen_cc_i[1]),
        .got_idles_i(got_idles_i[1]),
        .hard_err_i(hard_err_i[1]),
        .lane_up_flop_i(lane_up[1]),
        .lane_up_flop_i_0(aurora_lane_1_i_n_11),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_4 ),
        .\remote_rdy_cntr_reg[1] (aurora_lane_1_i_n_10),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rx_header_1_i_2(rx_header_1_i_2),
        .rx_pe_data_v_i(rx_pe_data_v_i[1]),
        .rx_reset_i_2(rx_reset_i_2),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(rx_neg_i_2),
        .soft_err_reg({soft_err_i[0],soft_err_i[2],soft_err_i[3]}),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_AURORA_LANE_1 aurora_lane_2_i
       (.CHECK_POLARITY_IN_LANE2(check_polarity_i_1),
        .D(p_1_in_6),
        .GEN_CH_BOND(gen_ch_bond_i),
        .HARD_ERR0__0(\err_detect_i/HARD_ERR0__0 ),
        .ILLEGAL_BTF_reg(sys_reset_out),
        .Q({tx_pe_data_i[128],tx_pe_data_i[129],tx_pe_data_i[130],tx_pe_data_i[131],tx_pe_data_i[132],tx_pe_data_i[133],tx_pe_data_i[134],tx_pe_data_i[135],tx_pe_data_i[136],tx_pe_data_i[137],tx_pe_data_i[138],tx_pe_data_i[139],tx_pe_data_i[140],tx_pe_data_i[141],tx_pe_data_i[142],tx_pe_data_i[143],tx_pe_data_i[144],tx_pe_data_i[145],tx_pe_data_i[146],tx_pe_data_i[147],tx_pe_data_i[148],tx_pe_data_i[149],tx_pe_data_i[150],tx_pe_data_i[151],tx_pe_data_i[152],tx_pe_data_i[153],tx_pe_data_i[154],tx_pe_data_i[155],tx_pe_data_i[156],tx_pe_data_i[157],tx_pe_data_i[158],tx_pe_data_i[159],tx_pe_data_i[160],tx_pe_data_i[161],tx_pe_data_i[162],tx_pe_data_i[163],tx_pe_data_i[164],tx_pe_data_i[165],tx_pe_data_i[166],tx_pe_data_i[167],tx_pe_data_i[168],tx_pe_data_i[169],tx_pe_data_i[170],tx_pe_data_i[171],tx_pe_data_i[172],tx_pe_data_i[173],tx_pe_data_i[174],tx_pe_data_i[175],tx_pe_data_i[180],tx_pe_data_i[181],tx_pe_data_i[182],tx_pe_data_i[183],tx_pe_data_i[184],tx_pe_data_i[189],tx_pe_data_i[190],tx_pe_data_i[191]}),
        .RESET(rst_drp),
        .RESET_LANES(reset_lanes_i),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .RXHEADER_OUT_ERR_LANE2(rx_header_err_i_1),
        .RXLOSSOFSYNC_OUT_LANE2(rx_lossofsync_i_1),
        .RXPOLARITY_IN_LANE2(rx_polarity_i_1),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_9),
        .\RX_DATA_REG_reg[63] ({\cbcc_gtx0_lane2_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_245,aurora_64b66b_w256_1375Gbps_wrapper_i_n_246,aurora_64b66b_w256_1375Gbps_wrapper_i_n_247,aurora_64b66b_w256_1375Gbps_wrapper_i_n_248,aurora_64b66b_w256_1375Gbps_wrapper_i_n_249,aurora_64b66b_w256_1375Gbps_wrapper_i_n_250,aurora_64b66b_w256_1375Gbps_wrapper_i_n_251,aurora_64b66b_w256_1375Gbps_wrapper_i_n_252,aurora_64b66b_w256_1375Gbps_wrapper_i_n_253,aurora_64b66b_w256_1375Gbps_wrapper_i_n_254,aurora_64b66b_w256_1375Gbps_wrapper_i_n_255,aurora_64b66b_w256_1375Gbps_wrapper_i_n_256,aurora_64b66b_w256_1375Gbps_wrapper_i_n_257,aurora_64b66b_w256_1375Gbps_wrapper_i_n_258,aurora_64b66b_w256_1375Gbps_wrapper_i_n_259,aurora_64b66b_w256_1375Gbps_wrapper_i_n_260,aurora_64b66b_w256_1375Gbps_wrapper_i_n_261,aurora_64b66b_w256_1375Gbps_wrapper_i_n_262,aurora_64b66b_w256_1375Gbps_wrapper_i_n_263,aurora_64b66b_w256_1375Gbps_wrapper_i_n_264,aurora_64b66b_w256_1375Gbps_wrapper_i_n_265,aurora_64b66b_w256_1375Gbps_wrapper_i_n_266,aurora_64b66b_w256_1375Gbps_wrapper_i_n_267,aurora_64b66b_w256_1375Gbps_wrapper_i_n_268,aurora_64b66b_w256_1375Gbps_wrapper_i_n_269,aurora_64b66b_w256_1375Gbps_wrapper_i_n_270,aurora_64b66b_w256_1375Gbps_wrapper_i_n_271,aurora_64b66b_w256_1375Gbps_wrapper_i_n_272,aurora_64b66b_w256_1375Gbps_wrapper_i_n_273,aurora_64b66b_w256_1375Gbps_wrapper_i_n_274,aurora_64b66b_w256_1375Gbps_wrapper_i_n_275,aurora_64b66b_w256_1375Gbps_wrapper_i_n_276,aurora_64b66b_w256_1375Gbps_wrapper_i_n_277,aurora_64b66b_w256_1375Gbps_wrapper_i_n_278,aurora_64b66b_w256_1375Gbps_wrapper_i_n_279,aurora_64b66b_w256_1375Gbps_wrapper_i_n_280,aurora_64b66b_w256_1375Gbps_wrapper_i_n_281,aurora_64b66b_w256_1375Gbps_wrapper_i_n_282,aurora_64b66b_w256_1375Gbps_wrapper_i_n_283,aurora_64b66b_w256_1375Gbps_wrapper_i_n_284,aurora_64b66b_w256_1375Gbps_wrapper_i_n_285,aurora_64b66b_w256_1375Gbps_wrapper_i_n_286,aurora_64b66b_w256_1375Gbps_wrapper_i_n_287,aurora_64b66b_w256_1375Gbps_wrapper_i_n_288,aurora_64b66b_w256_1375Gbps_wrapper_i_n_289,aurora_64b66b_w256_1375Gbps_wrapper_i_n_290,aurora_64b66b_w256_1375Gbps_wrapper_i_n_291,aurora_64b66b_w256_1375Gbps_wrapper_i_n_292}),
        .RX_HEADER_0_REG_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_373),
        .\RX_PE_DATA_reg[0] ({rx_pe_data_i[128],rx_pe_data_i[129],rx_pe_data_i[130],rx_pe_data_i[131],rx_pe_data_i[132],rx_pe_data_i[133],rx_pe_data_i[134],rx_pe_data_i[135],rx_pe_data_i[136],rx_pe_data_i[137],rx_pe_data_i[138],rx_pe_data_i[139],rx_pe_data_i[140],rx_pe_data_i[141],rx_pe_data_i[142],rx_pe_data_i[143],rx_pe_data_i[144],rx_pe_data_i[145],rx_pe_data_i[146],rx_pe_data_i[147],rx_pe_data_i[148],rx_pe_data_i[149],rx_pe_data_i[150],rx_pe_data_i[151],rx_pe_data_i[152],rx_pe_data_i[153],rx_pe_data_i[154],rx_pe_data_i[155],rx_pe_data_i[156],rx_pe_data_i[157],rx_pe_data_i[158],rx_pe_data_i[159],rx_pe_data_i[160],rx_pe_data_i[161],rx_pe_data_i[162],rx_pe_data_i[163],rx_pe_data_i[164],rx_pe_data_i[165],rx_pe_data_i[166],rx_pe_data_i[167],rx_pe_data_i[168],rx_pe_data_i[169],rx_pe_data_i[170],rx_pe_data_i[171],rx_pe_data_i[172],rx_pe_data_i[173],rx_pe_data_i[174],rx_pe_data_i[175],rx_pe_data_i[176],rx_pe_data_i[177],rx_pe_data_i[178],rx_pe_data_i[179],rx_pe_data_i[180],rx_pe_data_i[181],rx_pe_data_i[182],rx_pe_data_i[183],rx_pe_data_i[184],rx_pe_data_i[185],rx_pe_data_i[186],rx_pe_data_i[187],rx_pe_data_i[188],rx_pe_data_i[189],rx_pe_data_i[190],rx_pe_data_i[191]}),
        .SOFT_ERR_reg(soft_err_i[2]),
        .TXDATA_IN_LANE2(tx_data_i_64),
        .TXHEADER_IN_LANE2({tx_header_1_i_1,tx_header_0_i_1}),
        .\TX_DATA_reg[59] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_2),
        .\TX_DATA_reg[59]_0 (global_logic_i_n_43),
        .\TX_DATA_reg[60] (global_logic_i_n_42),
        .\TX_DATA_reg[61] (global_logic_i_n_41),
        .\TX_DATA_reg[62] (global_logic_i_n_40),
        .\TX_DATA_reg[63] (global_logic_i_n_29),
        .TX_HEADER_1_reg(global_logic_i_n_12),
        .gen_cc_i(gen_cc_i[2]),
        .got_idles_i(got_idles_i[2]),
        .hard_err_i(hard_err_i[2]),
        .lane_up_flop_i(lane_up[2]),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_3 ),
        .\remote_rdy_cntr_reg[1] (aurora_lane_2_i_n_11),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rx_header_1_i_1(rx_header_1_i_1),
        .rx_pe_data_v_i(rx_pe_data_v_i[2]),
        .rx_reset_i_1(rx_reset_i_1),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(rx_neg_i_1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_AURORA_LANE_2 aurora_lane_3_i
       (.CHECK_POLARITY_IN_LANE3(check_polarity_i_0),
        .D(p_1_in),
        .GEN_CH_BOND(gen_ch_bond_i),
        .HARD_ERR0__0(\err_detect_i/HARD_ERR0__0 ),
        .Q({tx_pe_data_i[192],tx_pe_data_i[193],tx_pe_data_i[194],tx_pe_data_i[195],tx_pe_data_i[196],tx_pe_data_i[197],tx_pe_data_i[198],tx_pe_data_i[199],tx_pe_data_i[200],tx_pe_data_i[201],tx_pe_data_i[202],tx_pe_data_i[203],tx_pe_data_i[204],tx_pe_data_i[205],tx_pe_data_i[206],tx_pe_data_i[207],tx_pe_data_i[208],tx_pe_data_i[209],tx_pe_data_i[210],tx_pe_data_i[211],tx_pe_data_i[212],tx_pe_data_i[213],tx_pe_data_i[214],tx_pe_data_i[215],tx_pe_data_i[216],tx_pe_data_i[217],tx_pe_data_i[218],tx_pe_data_i[219],tx_pe_data_i[220],tx_pe_data_i[221],tx_pe_data_i[222],tx_pe_data_i[223],tx_pe_data_i[224],tx_pe_data_i[225],tx_pe_data_i[226],tx_pe_data_i[227],tx_pe_data_i[228],tx_pe_data_i[229],tx_pe_data_i[230],tx_pe_data_i[231],tx_pe_data_i[232],tx_pe_data_i[233],tx_pe_data_i[234],tx_pe_data_i[235],tx_pe_data_i[236],tx_pe_data_i[237],tx_pe_data_i[238],tx_pe_data_i[239],tx_pe_data_i[244],tx_pe_data_i[245],tx_pe_data_i[246],tx_pe_data_i[247],tx_pe_data_i[248],tx_pe_data_i[253],tx_pe_data_i[254],tx_pe_data_i[255]}),
        .RESET(rst_drp),
        .RESET_LANES(reset_lanes_i),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .RXHEADER_OUT_ERR_LANE3(rx_header_err_i_0),
        .RXLOSSOFSYNC_OUT_LANE3(rx_lossofsync_i_0),
        .RXPOLARITY_IN_LANE3(rx_polarity_i_0),
        .\RX_DATA_REG_reg[0] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_10),
        .\RX_DATA_REG_reg[63] ({\cbcc_gtx0_lane3_i/p_1_in ,aurora_64b66b_w256_1375Gbps_wrapper_i_n_311,aurora_64b66b_w256_1375Gbps_wrapper_i_n_312,aurora_64b66b_w256_1375Gbps_wrapper_i_n_313,aurora_64b66b_w256_1375Gbps_wrapper_i_n_314,aurora_64b66b_w256_1375Gbps_wrapper_i_n_315,aurora_64b66b_w256_1375Gbps_wrapper_i_n_316,aurora_64b66b_w256_1375Gbps_wrapper_i_n_317,aurora_64b66b_w256_1375Gbps_wrapper_i_n_318,aurora_64b66b_w256_1375Gbps_wrapper_i_n_319,aurora_64b66b_w256_1375Gbps_wrapper_i_n_320,aurora_64b66b_w256_1375Gbps_wrapper_i_n_321,aurora_64b66b_w256_1375Gbps_wrapper_i_n_322,aurora_64b66b_w256_1375Gbps_wrapper_i_n_323,aurora_64b66b_w256_1375Gbps_wrapper_i_n_324,aurora_64b66b_w256_1375Gbps_wrapper_i_n_325,aurora_64b66b_w256_1375Gbps_wrapper_i_n_326,aurora_64b66b_w256_1375Gbps_wrapper_i_n_327,aurora_64b66b_w256_1375Gbps_wrapper_i_n_328,aurora_64b66b_w256_1375Gbps_wrapper_i_n_329,aurora_64b66b_w256_1375Gbps_wrapper_i_n_330,aurora_64b66b_w256_1375Gbps_wrapper_i_n_331,aurora_64b66b_w256_1375Gbps_wrapper_i_n_332,aurora_64b66b_w256_1375Gbps_wrapper_i_n_333,aurora_64b66b_w256_1375Gbps_wrapper_i_n_334,aurora_64b66b_w256_1375Gbps_wrapper_i_n_335,aurora_64b66b_w256_1375Gbps_wrapper_i_n_336,aurora_64b66b_w256_1375Gbps_wrapper_i_n_337,aurora_64b66b_w256_1375Gbps_wrapper_i_n_338,aurora_64b66b_w256_1375Gbps_wrapper_i_n_339,aurora_64b66b_w256_1375Gbps_wrapper_i_n_340,aurora_64b66b_w256_1375Gbps_wrapper_i_n_341,aurora_64b66b_w256_1375Gbps_wrapper_i_n_342,aurora_64b66b_w256_1375Gbps_wrapper_i_n_343,aurora_64b66b_w256_1375Gbps_wrapper_i_n_344,aurora_64b66b_w256_1375Gbps_wrapper_i_n_345,aurora_64b66b_w256_1375Gbps_wrapper_i_n_346,aurora_64b66b_w256_1375Gbps_wrapper_i_n_347,aurora_64b66b_w256_1375Gbps_wrapper_i_n_348,aurora_64b66b_w256_1375Gbps_wrapper_i_n_349,aurora_64b66b_w256_1375Gbps_wrapper_i_n_350,aurora_64b66b_w256_1375Gbps_wrapper_i_n_351,aurora_64b66b_w256_1375Gbps_wrapper_i_n_352,aurora_64b66b_w256_1375Gbps_wrapper_i_n_353,aurora_64b66b_w256_1375Gbps_wrapper_i_n_354,aurora_64b66b_w256_1375Gbps_wrapper_i_n_355,aurora_64b66b_w256_1375Gbps_wrapper_i_n_356,aurora_64b66b_w256_1375Gbps_wrapper_i_n_357,aurora_64b66b_w256_1375Gbps_wrapper_i_n_358}),
        .RX_HEADER_0_REG_reg(aurora_64b66b_w256_1375Gbps_wrapper_i_n_375),
        .RX_IDLE_reg(sys_reset_out),
        .\RX_PE_DATA_reg[0] ({rx_pe_data_i[192],rx_pe_data_i[193],rx_pe_data_i[194],rx_pe_data_i[195],rx_pe_data_i[196],rx_pe_data_i[197],rx_pe_data_i[198],rx_pe_data_i[199],rx_pe_data_i[200],rx_pe_data_i[201],rx_pe_data_i[202],rx_pe_data_i[203],rx_pe_data_i[204],rx_pe_data_i[205],rx_pe_data_i[206],rx_pe_data_i[207],rx_pe_data_i[208],rx_pe_data_i[209],rx_pe_data_i[210],rx_pe_data_i[211],rx_pe_data_i[212],rx_pe_data_i[213],rx_pe_data_i[214],rx_pe_data_i[215],rx_pe_data_i[216],rx_pe_data_i[217],rx_pe_data_i[218],rx_pe_data_i[219],rx_pe_data_i[220],rx_pe_data_i[221],rx_pe_data_i[222],rx_pe_data_i[223],rx_pe_data_i[224],rx_pe_data_i[225],rx_pe_data_i[226],rx_pe_data_i[227],rx_pe_data_i[228],rx_pe_data_i[229],rx_pe_data_i[230],rx_pe_data_i[231],rx_pe_data_i[232],rx_pe_data_i[233],rx_pe_data_i[234],rx_pe_data_i[235],rx_pe_data_i[236],rx_pe_data_i[237],rx_pe_data_i[238],rx_pe_data_i[239],rx_pe_data_i[240],rx_pe_data_i[241],rx_pe_data_i[242],rx_pe_data_i[243],rx_pe_data_i[244],rx_pe_data_i[245],rx_pe_data_i[246],rx_pe_data_i[247],rx_pe_data_i[248],rx_pe_data_i[249],rx_pe_data_i[250],rx_pe_data_i[251],rx_pe_data_i[252],rx_pe_data_i[253],rx_pe_data_i[254],rx_pe_data_i[255]}),
        .SOFT_ERR_reg(soft_err_i[3]),
        .TXDATA_IN_LANE3(tx_data_i_0),
        .TXHEADER_IN_LANE3({tx_header_1_i_0,tx_header_0_i_0}),
        .\TX_DATA_reg[59] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_3),
        .\TX_DATA_reg[59]_0 (global_logic_i_n_47),
        .\TX_DATA_reg[60] (global_logic_i_n_46),
        .\TX_DATA_reg[61] (global_logic_i_n_45),
        .\TX_DATA_reg[62] (global_logic_i_n_44),
        .\TX_DATA_reg[63] (global_logic_i_n_30),
        .TX_HEADER_1_reg(global_logic_i_n_12),
        .gen_cc_i(gen_cc_i[3]),
        .got_idles_i(got_idles_i[3]),
        .hard_err_i(hard_err_i[3]),
        .lane_up_flop_i(lane_up[3]),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0 ),
        .\remote_rdy_cntr_reg[1] (aurora_lane_3_i_n_11),
        .remote_ready_r_reg(aurora_lane_2_i_n_11),
        .remote_ready_r_reg_0(aurora_lane_0_i_n_12),
        .remote_ready_r_reg_1(aurora_lane_1_i_n_10),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rx_header_1_i_0(rx_header_1_i_0),
        .rx_pe_data_v_i(rx_pe_data_v_i[3]),
        .rx_reset_i_0(rx_reset_i_0),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .s_level_out_d1_aurora_64b66b_w256_1375Gbps_cdc_to_reg(rx_neg_i_0),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_AXI_TO_DRP axi_to_drp_i
       (.RESET(rst_drp),
        .drpaddr_in({drpaddr_in_lane3_i,drpaddr_in_lane2_i,drpaddr_in_lane1_i,drpaddr_in_i}),
        .drpdi_in({drpdi_in_lane3_i,drpdi_in_lane2_i,drpdi_in_lane1_i,drpdi_in_i}),
        .drpdo_out({drpdo_out_lane3_i,drpdo_out_lane2_i,drpdo_out_lane1_i,drpdo_out_i}),
        .drpen_in({drpen_in_lane3_i,drpen_in_lane2_i,drpen_in_lane1_i,drpen_in_i}),
        .drprdy_out({drprdy_out_lane3_i,drprdy_out_lane2_i,drprdy_out_lane1_i,drprdy_out_i}),
        .drpwe_in({drpwe_in_lane3_i,drpwe_in_lane2_i,drpwe_in_lane1_i,drpwe_in_i}),
        .init_clk(init_clk),
        .s_axi_araddr(s_axi_araddr[11:2]),
        .s_axi_araddr_lane1(s_axi_araddr_lane1[11:2]),
        .s_axi_araddr_lane2(s_axi_araddr_lane2[11:2]),
        .s_axi_araddr_lane3(s_axi_araddr_lane3[11:2]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arready_lane1(s_axi_arready_lane1),
        .s_axi_arready_lane2(s_axi_arready_lane2),
        .s_axi_arready_lane3(s_axi_arready_lane3),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_arvalid_lane1(s_axi_arvalid_lane1),
        .s_axi_arvalid_lane2(s_axi_arvalid_lane2),
        .s_axi_arvalid_lane3(s_axi_arvalid_lane3),
        .s_axi_awaddr(s_axi_awaddr[11:2]),
        .s_axi_awaddr_lane1(s_axi_awaddr_lane1[11:2]),
        .s_axi_awaddr_lane2(s_axi_awaddr_lane2[11:2]),
        .s_axi_awaddr_lane3(s_axi_awaddr_lane3[11:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awready_lane1(s_axi_awready_lane1),
        .s_axi_awready_lane2(s_axi_awready_lane2),
        .s_axi_awready_lane3(s_axi_awready_lane3),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_awvalid_lane1(s_axi_awvalid_lane1),
        .s_axi_awvalid_lane2(s_axi_awvalid_lane2),
        .s_axi_awvalid_lane3(s_axi_awvalid_lane3),
        .s_axi_bready(s_axi_bready),
        .s_axi_bready_lane1(s_axi_bready_lane1),
        .s_axi_bready_lane2(s_axi_bready_lane2),
        .s_axi_bready_lane3(s_axi_bready_lane3),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_bvalid_lane1(s_axi_bvalid_lane1),
        .s_axi_bvalid_lane2(s_axi_bvalid_lane2),
        .s_axi_bvalid_lane3(s_axi_bvalid_lane3),
        .s_axi_rdata(\^s_axi_rdata ),
        .s_axi_rdata_lane1(\^s_axi_rdata_lane1 ),
        .s_axi_rdata_lane2(\^s_axi_rdata_lane2 ),
        .s_axi_rdata_lane3(\^s_axi_rdata_lane3 ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rready_lane1(s_axi_rready_lane1),
        .s_axi_rready_lane2(s_axi_rready_lane2),
        .s_axi_rready_lane3(s_axi_rready_lane3),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_rvalid_lane1(s_axi_rvalid_lane1),
        .s_axi_rvalid_lane2(s_axi_rvalid_lane2),
        .s_axi_rvalid_lane3(s_axi_rvalid_lane3),
        .s_axi_wdata(s_axi_wdata[15:0]),
        .s_axi_wdata_lane1(s_axi_wdata_lane1[15:0]),
        .s_axi_wdata_lane2(s_axi_wdata_lane2[15:0]),
        .s_axi_wdata_lane3(s_axi_wdata_lane3[15:0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wready_lane1(s_axi_wready_lane1),
        .s_axi_wready_lane2(s_axi_wready_lane2),
        .s_axi_wready_lane3(s_axi_wready_lane3),
        .s_axi_wvalid(s_axi_wvalid),
        .s_axi_wvalid_lane1(s_axi_wvalid_lane1),
        .s_axi_wvalid_lane2(s_axi_wvalid_lane2),
        .s_axi_wvalid_lane3(s_axi_wvalid_lane3));
  aurora_64b66b_w256_1375Gbps_RESET_LOGIC core_reset_logic_i
       (.SYSTEM_RESET_reg_0(sys_reset_out),
        .chan_bond_reset_i(\channel_init_sm_i/chan_bond_reset_i ),
        .hard_err_i(hard_err_i),
        .in0(fsm_resetdone),
        .lane_up(lane_up[1]),
        .link_reset_out(link_reset_out),
        .power_down(power_down),
        .ready_r_reg(lane_up[2]),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_5 ),
        .ready_r_reg0_0(\lane_init_sm_i/ready_r_reg0_4 ),
        .ready_r_reg0_1(\lane_init_sm_i/ready_r_reg0_3 ),
        .ready_r_reg0_2(\lane_init_sm_i/ready_r_reg0 ),
        .ready_r_reg_0(lane_up[3]),
        .ready_r_reg_1(lane_up[0]),
        .sysreset_to_core_sync(sysreset_to_core_sync),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ));
  aurora_64b66b_w256_1375Gbps_GLOBAL_LOGIC global_logic_i
       (.CHANNEL_UP_RX_IF(channel_up),
        .CHANNEL_UP_RX_IF_reg(global_logic_i_n_31),
        .CHANNEL_UP_TX_IF(channel_up_tx_if),
        .CHANNEL_UP_TX_IF_reg(sys_reset_out),
        .CHAN_BOND_RESET(chan_bond_reset_i),
        .D(p_1_in_8),
        .EN_CHAN_SYNC(en_chan_sync_i),
        .GEN_CH_BOND(gen_ch_bond_i),
        .Q({tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[51],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[112],tx_pe_data_i[113],tx_pe_data_i[114],tx_pe_data_i[115],tx_pe_data_i[121],tx_pe_data_i[122],tx_pe_data_i[123],tx_pe_data_i[124],tx_pe_data_i[176],tx_pe_data_i[177],tx_pe_data_i[178],tx_pe_data_i[179],tx_pe_data_i[185],tx_pe_data_i[186],tx_pe_data_i[187],tx_pe_data_i[188],tx_pe_data_i[240],tx_pe_data_i[241],tx_pe_data_i[242],tx_pe_data_i[243],tx_pe_data_i[249],tx_pe_data_i[250],tx_pe_data_i[251],tx_pe_data_i[252]}),
        .R0(\tx_stream_control_sm_i/R0 ),
        .RESET_LANES(reset_lanes_i),
        .SR(p_0_in),
        .TXDATAVALID_IN(txdatavalid_i),
        .\TX_DATA_reg[63] (aurora_64b66b_w256_1375Gbps_wrapper_i_n_0),
        .\TX_DATA_reg[63]_0 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_1),
        .\TX_DATA_reg[63]_1 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_2),
        .\TX_DATA_reg[63]_2 (aurora_64b66b_w256_1375Gbps_wrapper_i_n_3),
        .ch_bond_done_i(ch_bond_done_i),
        .chan_bond_reset_i(\channel_init_sm_i/chan_bond_reset_i ),
        .\chan_bond_timer_reg[0] (aurora_lane_1_i_n_11),
        .channel_bond_r_reg(global_logic_i_n_12),
        .\gen_cc_blk[0].gen_cc_flop (global_logic_i_n_27),
        .\gen_cc_blk[1].gen_cc_flop (p_1_in_7),
        .\gen_cc_blk[1].gen_cc_flop_0 (global_logic_i_n_28),
        .\gen_cc_blk[2].gen_cc_flop (p_1_in_6),
        .\gen_cc_blk[2].gen_cc_flop_0 (global_logic_i_n_29),
        .\gen_cc_blk[3].gen_cc_flop (p_1_in),
        .\gen_cc_blk[3].gen_cc_flop_0 (global_logic_i_n_30),
        .gen_cc_i(gen_cc_i),
        .got_idles_i(got_idles_i),
        .hard_err(hard_err),
        .hard_err_i(hard_err_i),
        .lane_up(lane_up[1]),
        .remote_ready_r_reg(aurora_lane_3_i_n_11),
        .reset_lanes_flop_0_i(lane_up[2]),
        .reset_lanes_flop_0_i_0(lane_up[3]),
        .reset_lanes_flop_0_i_1(lane_up[0]),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rst_pma_init_usrclk_0(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rst_pma_init_usrclk_1(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rst_pma_init_usrclk_2(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rx_pe_data_v_i(rx_pe_data_v_i),
        .stg5_reg(global_logic_i_n_32),
        .stg5_reg_0(global_logic_i_n_33),
        .stg5_reg_1(global_logic_i_n_34),
        .stg5_reg_10(global_logic_i_n_43),
        .stg5_reg_11(global_logic_i_n_44),
        .stg5_reg_12(global_logic_i_n_45),
        .stg5_reg_13(global_logic_i_n_46),
        .stg5_reg_14(global_logic_i_n_47),
        .stg5_reg_2(global_logic_i_n_35),
        .stg5_reg_3(global_logic_i_n_36),
        .stg5_reg_4(global_logic_i_n_37),
        .stg5_reg_5(global_logic_i_n_38),
        .stg5_reg_6(global_logic_i_n_39),
        .stg5_reg_7(global_logic_i_n_40),
        .stg5_reg_8(global_logic_i_n_41),
        .stg5_reg_9(global_logic_i_n_42),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .user_clk(user_clk),
        .wait_for_lane_up_r0(\channel_init_sm_i/wait_for_lane_up_r0 ));
  aurora_64b66b_w256_1375Gbps_rst_sync gt_reset_sync
       (.RESET(rst_drp),
        .init_clk(init_clk),
        .pma_init(pma_init));
  aurora_64b66b_w256_1375Gbps_rst_sync_3 reset_pb_sync
       (.sysreset_to_core(sysreset_to_core),
        .sysreset_to_core_sync(sysreset_to_core_sync),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_RX_STREAM rx_stream_i
       (.D({rx_pe_data_i[0],rx_pe_data_i[1],rx_pe_data_i[2],rx_pe_data_i[3],rx_pe_data_i[4],rx_pe_data_i[5],rx_pe_data_i[6],rx_pe_data_i[7],rx_pe_data_i[8],rx_pe_data_i[9],rx_pe_data_i[10],rx_pe_data_i[11],rx_pe_data_i[12],rx_pe_data_i[13],rx_pe_data_i[14],rx_pe_data_i[15],rx_pe_data_i[16],rx_pe_data_i[17],rx_pe_data_i[18],rx_pe_data_i[19],rx_pe_data_i[20],rx_pe_data_i[21],rx_pe_data_i[22],rx_pe_data_i[23],rx_pe_data_i[24],rx_pe_data_i[25],rx_pe_data_i[26],rx_pe_data_i[27],rx_pe_data_i[28],rx_pe_data_i[29],rx_pe_data_i[30],rx_pe_data_i[31],rx_pe_data_i[32],rx_pe_data_i[33],rx_pe_data_i[34],rx_pe_data_i[35],rx_pe_data_i[36],rx_pe_data_i[37],rx_pe_data_i[38],rx_pe_data_i[39],rx_pe_data_i[40],rx_pe_data_i[41],rx_pe_data_i[42],rx_pe_data_i[43],rx_pe_data_i[44],rx_pe_data_i[45],rx_pe_data_i[46],rx_pe_data_i[47],rx_pe_data_i[48],rx_pe_data_i[49],rx_pe_data_i[50],rx_pe_data_i[51],rx_pe_data_i[52],rx_pe_data_i[53],rx_pe_data_i[54],rx_pe_data_i[55],rx_pe_data_i[56],rx_pe_data_i[57],rx_pe_data_i[58],rx_pe_data_i[59],rx_pe_data_i[60],rx_pe_data_i[61],rx_pe_data_i[62],rx_pe_data_i[63],rx_pe_data_i[64],rx_pe_data_i[65],rx_pe_data_i[66],rx_pe_data_i[67],rx_pe_data_i[68],rx_pe_data_i[69],rx_pe_data_i[70],rx_pe_data_i[71],rx_pe_data_i[72],rx_pe_data_i[73],rx_pe_data_i[74],rx_pe_data_i[75],rx_pe_data_i[76],rx_pe_data_i[77],rx_pe_data_i[78],rx_pe_data_i[79],rx_pe_data_i[80],rx_pe_data_i[81],rx_pe_data_i[82],rx_pe_data_i[83],rx_pe_data_i[84],rx_pe_data_i[85],rx_pe_data_i[86],rx_pe_data_i[87],rx_pe_data_i[88],rx_pe_data_i[89],rx_pe_data_i[90],rx_pe_data_i[91],rx_pe_data_i[92],rx_pe_data_i[93],rx_pe_data_i[94],rx_pe_data_i[95],rx_pe_data_i[96],rx_pe_data_i[97],rx_pe_data_i[98],rx_pe_data_i[99],rx_pe_data_i[100],rx_pe_data_i[101],rx_pe_data_i[102],rx_pe_data_i[103],rx_pe_data_i[104],rx_pe_data_i[105],rx_pe_data_i[106],rx_pe_data_i[107],rx_pe_data_i[108],rx_pe_data_i[109],rx_pe_data_i[110],rx_pe_data_i[111],rx_pe_data_i[112],rx_pe_data_i[113],rx_pe_data_i[114],rx_pe_data_i[115],rx_pe_data_i[116],rx_pe_data_i[117],rx_pe_data_i[118],rx_pe_data_i[119],rx_pe_data_i[120],rx_pe_data_i[121],rx_pe_data_i[122],rx_pe_data_i[123],rx_pe_data_i[124],rx_pe_data_i[125],rx_pe_data_i[126],rx_pe_data_i[127],rx_pe_data_i[128],rx_pe_data_i[129],rx_pe_data_i[130],rx_pe_data_i[131],rx_pe_data_i[132],rx_pe_data_i[133],rx_pe_data_i[134],rx_pe_data_i[135],rx_pe_data_i[136],rx_pe_data_i[137],rx_pe_data_i[138],rx_pe_data_i[139],rx_pe_data_i[140],rx_pe_data_i[141],rx_pe_data_i[142],rx_pe_data_i[143],rx_pe_data_i[144],rx_pe_data_i[145],rx_pe_data_i[146],rx_pe_data_i[147],rx_pe_data_i[148],rx_pe_data_i[149],rx_pe_data_i[150],rx_pe_data_i[151],rx_pe_data_i[152],rx_pe_data_i[153],rx_pe_data_i[154],rx_pe_data_i[155],rx_pe_data_i[156],rx_pe_data_i[157],rx_pe_data_i[158],rx_pe_data_i[159],rx_pe_data_i[160],rx_pe_data_i[161],rx_pe_data_i[162],rx_pe_data_i[163],rx_pe_data_i[164],rx_pe_data_i[165],rx_pe_data_i[166],rx_pe_data_i[167],rx_pe_data_i[168],rx_pe_data_i[169],rx_pe_data_i[170],rx_pe_data_i[171],rx_pe_data_i[172],rx_pe_data_i[173],rx_pe_data_i[174],rx_pe_data_i[175],rx_pe_data_i[176],rx_pe_data_i[177],rx_pe_data_i[178],rx_pe_data_i[179],rx_pe_data_i[180],rx_pe_data_i[181],rx_pe_data_i[182],rx_pe_data_i[183],rx_pe_data_i[184],rx_pe_data_i[185],rx_pe_data_i[186],rx_pe_data_i[187],rx_pe_data_i[188],rx_pe_data_i[189],rx_pe_data_i[190],rx_pe_data_i[191],rx_pe_data_i[192],rx_pe_data_i[193],rx_pe_data_i[194],rx_pe_data_i[195],rx_pe_data_i[196],rx_pe_data_i[197],rx_pe_data_i[198],rx_pe_data_i[199],rx_pe_data_i[200],rx_pe_data_i[201],rx_pe_data_i[202],rx_pe_data_i[203],rx_pe_data_i[204],rx_pe_data_i[205],rx_pe_data_i[206],rx_pe_data_i[207],rx_pe_data_i[208],rx_pe_data_i[209],rx_pe_data_i[210],rx_pe_data_i[211],rx_pe_data_i[212],rx_pe_data_i[213],rx_pe_data_i[214],rx_pe_data_i[215],rx_pe_data_i[216],rx_pe_data_i[217],rx_pe_data_i[218],rx_pe_data_i[219],rx_pe_data_i[220],rx_pe_data_i[221],rx_pe_data_i[222],rx_pe_data_i[223],rx_pe_data_i[224],rx_pe_data_i[225],rx_pe_data_i[226],rx_pe_data_i[227],rx_pe_data_i[228],rx_pe_data_i[229],rx_pe_data_i[230],rx_pe_data_i[231],rx_pe_data_i[232],rx_pe_data_i[233],rx_pe_data_i[234],rx_pe_data_i[235],rx_pe_data_i[236],rx_pe_data_i[237],rx_pe_data_i[238],rx_pe_data_i[239],rx_pe_data_i[240],rx_pe_data_i[241],rx_pe_data_i[242],rx_pe_data_i[243],rx_pe_data_i[244],rx_pe_data_i[245],rx_pe_data_i[246],rx_pe_data_i[247],rx_pe_data_i[248],rx_pe_data_i[249],rx_pe_data_i[250],rx_pe_data_i[251],rx_pe_data_i[252],rx_pe_data_i[253],rx_pe_data_i[254],rx_pe_data_i[255]}),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .m_axi_rx_tvalid_reg(global_logic_i_n_31),
        .user_clk(user_clk));
  FDRE soft_err_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(aurora_lane_1_i_n_12),
        .Q(soft_err),
        .R(sys_reset_out));
  aurora_64b66b_w256_1375Gbps_STANDARD_CC_MODULE standard_cc_module_i
       (.CHANNEL_UP_RX_IF(channel_up),
        .Q(do_cc_i),
        .SR(p_0_in),
        .do_cc_r0(\tx_stream_control_sm_i/do_cc_r0 ),
        .extend_cc_r(\tx_stream_control_sm_i/extend_cc_r ),
        .user_clk(user_clk));
  aurora_64b66b_w256_1375Gbps_TX_STREAM tx_stream_i
       (.Q(do_cc_i),
        .R0(\tx_stream_control_sm_i/R0 ),
        .TXDATAVALID_IN(txdatavalid_i),
        .\TX_PE_DATA_reg[0] ({tx_pe_data_i[0],tx_pe_data_i[1],tx_pe_data_i[2],tx_pe_data_i[3],tx_pe_data_i[4],tx_pe_data_i[5],tx_pe_data_i[6],tx_pe_data_i[7],tx_pe_data_i[8],tx_pe_data_i[9],tx_pe_data_i[10],tx_pe_data_i[11],tx_pe_data_i[12],tx_pe_data_i[13],tx_pe_data_i[14],tx_pe_data_i[15],tx_pe_data_i[16],tx_pe_data_i[17],tx_pe_data_i[18],tx_pe_data_i[19],tx_pe_data_i[20],tx_pe_data_i[21],tx_pe_data_i[22],tx_pe_data_i[23],tx_pe_data_i[24],tx_pe_data_i[25],tx_pe_data_i[26],tx_pe_data_i[27],tx_pe_data_i[28],tx_pe_data_i[29],tx_pe_data_i[30],tx_pe_data_i[31],tx_pe_data_i[32],tx_pe_data_i[33],tx_pe_data_i[34],tx_pe_data_i[35],tx_pe_data_i[36],tx_pe_data_i[37],tx_pe_data_i[38],tx_pe_data_i[39],tx_pe_data_i[40],tx_pe_data_i[41],tx_pe_data_i[42],tx_pe_data_i[43],tx_pe_data_i[44],tx_pe_data_i[45],tx_pe_data_i[46],tx_pe_data_i[47],tx_pe_data_i[48],tx_pe_data_i[49],tx_pe_data_i[50],tx_pe_data_i[51],tx_pe_data_i[52],tx_pe_data_i[53],tx_pe_data_i[54],tx_pe_data_i[55],tx_pe_data_i[56],tx_pe_data_i[57],tx_pe_data_i[58],tx_pe_data_i[59],tx_pe_data_i[60],tx_pe_data_i[61],tx_pe_data_i[62],tx_pe_data_i[63],tx_pe_data_i[64],tx_pe_data_i[65],tx_pe_data_i[66],tx_pe_data_i[67],tx_pe_data_i[68],tx_pe_data_i[69],tx_pe_data_i[70],tx_pe_data_i[71],tx_pe_data_i[72],tx_pe_data_i[73],tx_pe_data_i[74],tx_pe_data_i[75],tx_pe_data_i[76],tx_pe_data_i[77],tx_pe_data_i[78],tx_pe_data_i[79],tx_pe_data_i[80],tx_pe_data_i[81],tx_pe_data_i[82],tx_pe_data_i[83],tx_pe_data_i[84],tx_pe_data_i[85],tx_pe_data_i[86],tx_pe_data_i[87],tx_pe_data_i[88],tx_pe_data_i[89],tx_pe_data_i[90],tx_pe_data_i[91],tx_pe_data_i[92],tx_pe_data_i[93],tx_pe_data_i[94],tx_pe_data_i[95],tx_pe_data_i[96],tx_pe_data_i[97],tx_pe_data_i[98],tx_pe_data_i[99],tx_pe_data_i[100],tx_pe_data_i[101],tx_pe_data_i[102],tx_pe_data_i[103],tx_pe_data_i[104],tx_pe_data_i[105],tx_pe_data_i[106],tx_pe_data_i[107],tx_pe_data_i[108],tx_pe_data_i[109],tx_pe_data_i[110],tx_pe_data_i[111],tx_pe_data_i[112],tx_pe_data_i[113],tx_pe_data_i[114],tx_pe_data_i[115],tx_pe_data_i[116],tx_pe_data_i[117],tx_pe_data_i[118],tx_pe_data_i[119],tx_pe_data_i[120],tx_pe_data_i[121],tx_pe_data_i[122],tx_pe_data_i[123],tx_pe_data_i[124],tx_pe_data_i[125],tx_pe_data_i[126],tx_pe_data_i[127],tx_pe_data_i[128],tx_pe_data_i[129],tx_pe_data_i[130],tx_pe_data_i[131],tx_pe_data_i[132],tx_pe_data_i[133],tx_pe_data_i[134],tx_pe_data_i[135],tx_pe_data_i[136],tx_pe_data_i[137],tx_pe_data_i[138],tx_pe_data_i[139],tx_pe_data_i[140],tx_pe_data_i[141],tx_pe_data_i[142],tx_pe_data_i[143],tx_pe_data_i[144],tx_pe_data_i[145],tx_pe_data_i[146],tx_pe_data_i[147],tx_pe_data_i[148],tx_pe_data_i[149],tx_pe_data_i[150],tx_pe_data_i[151],tx_pe_data_i[152],tx_pe_data_i[153],tx_pe_data_i[154],tx_pe_data_i[155],tx_pe_data_i[156],tx_pe_data_i[157],tx_pe_data_i[158],tx_pe_data_i[159],tx_pe_data_i[160],tx_pe_data_i[161],tx_pe_data_i[162],tx_pe_data_i[163],tx_pe_data_i[164],tx_pe_data_i[165],tx_pe_data_i[166],tx_pe_data_i[167],tx_pe_data_i[168],tx_pe_data_i[169],tx_pe_data_i[170],tx_pe_data_i[171],tx_pe_data_i[172],tx_pe_data_i[173],tx_pe_data_i[174],tx_pe_data_i[175],tx_pe_data_i[176],tx_pe_data_i[177],tx_pe_data_i[178],tx_pe_data_i[179],tx_pe_data_i[180],tx_pe_data_i[181],tx_pe_data_i[182],tx_pe_data_i[183],tx_pe_data_i[184],tx_pe_data_i[185],tx_pe_data_i[186],tx_pe_data_i[187],tx_pe_data_i[188],tx_pe_data_i[189],tx_pe_data_i[190],tx_pe_data_i[191],tx_pe_data_i[192],tx_pe_data_i[193],tx_pe_data_i[194],tx_pe_data_i[195],tx_pe_data_i[196],tx_pe_data_i[197],tx_pe_data_i[198],tx_pe_data_i[199],tx_pe_data_i[200],tx_pe_data_i[201],tx_pe_data_i[202],tx_pe_data_i[203],tx_pe_data_i[204],tx_pe_data_i[205],tx_pe_data_i[206],tx_pe_data_i[207],tx_pe_data_i[208],tx_pe_data_i[209],tx_pe_data_i[210],tx_pe_data_i[211],tx_pe_data_i[212],tx_pe_data_i[213],tx_pe_data_i[214],tx_pe_data_i[215],tx_pe_data_i[216],tx_pe_data_i[217],tx_pe_data_i[218],tx_pe_data_i[219],tx_pe_data_i[220],tx_pe_data_i[221],tx_pe_data_i[222],tx_pe_data_i[223],tx_pe_data_i[224],tx_pe_data_i[225],tx_pe_data_i[226],tx_pe_data_i[227],tx_pe_data_i[228],tx_pe_data_i[229],tx_pe_data_i[230],tx_pe_data_i[231],tx_pe_data_i[232],tx_pe_data_i[233],tx_pe_data_i[234],tx_pe_data_i[235],tx_pe_data_i[236],tx_pe_data_i[237],tx_pe_data_i[238],tx_pe_data_i[239],tx_pe_data_i[240],tx_pe_data_i[241],tx_pe_data_i[242],tx_pe_data_i[243],tx_pe_data_i[244],tx_pe_data_i[245],tx_pe_data_i[246],tx_pe_data_i[247],tx_pe_data_i[248],tx_pe_data_i[249],tx_pe_data_i[250],tx_pe_data_i[251],tx_pe_data_i[252],tx_pe_data_i[253],tx_pe_data_i[254],tx_pe_data_i[255]}),
        .do_cc_r0(\tx_stream_control_sm_i/do_cc_r0 ),
        .extend_cc_r(\tx_stream_control_sm_i/extend_cc_r ),
        .gen_cc_i(gen_cc_i),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .user_clk(user_clk));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_master,fifo_generator_v13_2_7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
module aurora_64b66b_w256_1375Gbps_fifo_gen_master
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "virtexuplusHBM" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "12" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "13" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  aurora_64b66b_w256_1375Gbps_fifo_generator_v13_2_7__parameterized1 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
module aurora_64b66b_w256_1375Gbps_fifo_gen_slave
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "virtexuplusHBM" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  aurora_64b66b_w256_1375Gbps_fifo_generator_v13_2_7 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
module aurora_64b66b_w256_1375Gbps_fifo_gen_slave__xdcDup__1
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "virtexuplusHBM" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  aurora_64b66b_w256_1375Gbps_fifo_generator_v13_2_7__3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave,fifo_generator_v13_2_7,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_fifo_gen_slave" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_7,Vivado 2022.2" *) 
module aurora_64b66b_w256_1375Gbps_fifo_gen_slave__xdcDup__2
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "virtexuplusHBM" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  aurora_64b66b_w256_1375Gbps_fifo_generator_v13_2_7__4 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "aurora_64b66b_w256_1375Gbps_gt,aurora_64b66b_w256_1375Gbps_gt_gtwizard_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "aurora_64b66b_w256_1375Gbps_gt_gtwizard_top,Vivado 2022.2" *) 
module aurora_64b66b_w256_1375Gbps_gt
   (gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    pcsrsvdin_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxusrclk_in,
    rxusrclk2_in,
    txdiffctrl_in,
    txheader_in,
    txinhibit_in,
    txpcsreset_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txsequence_in,
    txusrclk_in,
    txusrclk2_in,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gtpowergood_out,
    gtytxn_out,
    gtytxp_out,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxresetdone_out,
    rxstartofseq_out,
    txbufstatus_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    txresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [255:0]gtwiz_userdata_tx_in;
  output [255:0]gtwiz_userdata_rx_out;
  input [39:0]drpaddr_in;
  input [3:0]drpclk_in;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [11:0]loopback_in;
  input [63:0]pcsrsvdin_in;
  input [3:0]qpll0clk_in;
  input [3:0]qpll0refclk_in;
  input [3:0]qpll1clk_in;
  input [3:0]qpll1refclk_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [15:0]rxprbssel_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [19:0]txdiffctrl_in;
  input [23:0]txheader_in;
  input [3:0]txinhibit_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [19:0]txpostcursor_in;
  input [3:0]txprbsforceerr_in;
  input [15:0]txprbssel_in;
  input [19:0]txprecursor_in;
  input [27:0]txsequence_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  output [63:0]dmonitorout_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [11:0]rxbufstatus_out;
  output [7:0]rxdatavalid_out;
  output [23:0]rxheader_out;
  output [7:0]rxheadervalid_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxresetdone_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire \<const0> ;
  wire [39:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [3:0]qpll0clk_in;
  wire [3:0]qpll0refclk_in;
  wire [11:2]\^rxbufstatus_out ;
  wire [3:0]rxcdrovrden_in;
  wire [6:0]\^rxdatavalid_out ;
  wire [3:0]rxgearboxslip_in;
  wire [19:0]\^rxheader_out ;
  wire [6:0]\^rxheadervalid_out ;
  wire [2:2]\^rxoutclk_out ;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [7:1]\^txbufstatus_out ;
  wire [23:0]txheader_in;
  wire [2:2]\^txoutclk_out ;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;
  wire [3:0]NLW_inst_bufgtce_out_UNCONNECTED;
  wire [11:0]NLW_inst_bufgtcemask_out_UNCONNECTED;
  wire [35:0]NLW_inst_bufgtdiv_out_UNCONNECTED;
  wire [3:0]NLW_inst_bufgtreset_out_UNCONNECTED;
  wire [11:0]NLW_inst_bufgtrstmask_out_UNCONNECTED;
  wire [3:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [3:0]NLW_inst_cplllock_out_UNCONNECTED;
  wire [3:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [63:0]NLW_inst_dmonitorout_out_UNCONNECTED;
  wire [3:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [3:0]NLW_inst_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxp_out_UNCONNECTED;
  wire [3:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcierategen3_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcierateidle_out_UNCONNECTED;
  wire [7:0]NLW_inst_pcierateqpllpd_out_UNCONNECTED;
  wire [7:0]NLW_inst_pcierateqpllreset_out_UNCONNECTED;
  wire [3:0]NLW_inst_pciesynctxsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieusergen3rdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieuserphystatusrst_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieuserratestart_out_UNCONNECTED;
  wire [63:0]NLW_inst_pcsrsvdout_out_UNCONNECTED;
  wire [3:0]NLW_inst_phystatus_out_UNCONNECTED;
  wire [63:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [3:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [3:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [10:0]NLW_inst_rxbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxbyteisaligned_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxbyterealign_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcdrlock_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [19:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxclkcorcnt_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcommadet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [63:0]NLW_inst_rxctrl0_out_UNCONNECTED;
  wire [63:0]NLW_inst_rxctrl1_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxctrl2_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxctrl3_out_UNCONNECTED;
  wire [511:0]NLW_inst_rxdata_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [7:1]NLW_inst_rxdatavalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxdlysresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxelecidle_out_UNCONNECTED;
  wire [23:2]NLW_inst_rxheader_out_UNCONNECTED;
  wire [7:1]NLW_inst_rxheadervalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxphaligndone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprbserr_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprbslocked_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxstartofseq_out_UNCONNECTED;
  wire [11:0]NLW_inst_rxstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxvalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [6:0]NLW_inst_txbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [3:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txdlysresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_inst_txphaligndone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txphinitdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [3:0]NLW_inst_txratedone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txsyncout_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdaddr_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubden_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdi_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdwe_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubmdmtdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubtxuart_out_UNCONNECTED;

  assign dmonitorout_out[63] = \<const0> ;
  assign dmonitorout_out[62] = \<const0> ;
  assign dmonitorout_out[61] = \<const0> ;
  assign dmonitorout_out[60] = \<const0> ;
  assign dmonitorout_out[59] = \<const0> ;
  assign dmonitorout_out[58] = \<const0> ;
  assign dmonitorout_out[57] = \<const0> ;
  assign dmonitorout_out[56] = \<const0> ;
  assign dmonitorout_out[55] = \<const0> ;
  assign dmonitorout_out[54] = \<const0> ;
  assign dmonitorout_out[53] = \<const0> ;
  assign dmonitorout_out[52] = \<const0> ;
  assign dmonitorout_out[51] = \<const0> ;
  assign dmonitorout_out[50] = \<const0> ;
  assign dmonitorout_out[49] = \<const0> ;
  assign dmonitorout_out[48] = \<const0> ;
  assign dmonitorout_out[47] = \<const0> ;
  assign dmonitorout_out[46] = \<const0> ;
  assign dmonitorout_out[45] = \<const0> ;
  assign dmonitorout_out[44] = \<const0> ;
  assign dmonitorout_out[43] = \<const0> ;
  assign dmonitorout_out[42] = \<const0> ;
  assign dmonitorout_out[41] = \<const0> ;
  assign dmonitorout_out[40] = \<const0> ;
  assign dmonitorout_out[39] = \<const0> ;
  assign dmonitorout_out[38] = \<const0> ;
  assign dmonitorout_out[37] = \<const0> ;
  assign dmonitorout_out[36] = \<const0> ;
  assign dmonitorout_out[35] = \<const0> ;
  assign dmonitorout_out[34] = \<const0> ;
  assign dmonitorout_out[33] = \<const0> ;
  assign dmonitorout_out[32] = \<const0> ;
  assign dmonitorout_out[31] = \<const0> ;
  assign dmonitorout_out[30] = \<const0> ;
  assign dmonitorout_out[29] = \<const0> ;
  assign dmonitorout_out[28] = \<const0> ;
  assign dmonitorout_out[27] = \<const0> ;
  assign dmonitorout_out[26] = \<const0> ;
  assign dmonitorout_out[25] = \<const0> ;
  assign dmonitorout_out[24] = \<const0> ;
  assign dmonitorout_out[23] = \<const0> ;
  assign dmonitorout_out[22] = \<const0> ;
  assign dmonitorout_out[21] = \<const0> ;
  assign dmonitorout_out[20] = \<const0> ;
  assign dmonitorout_out[19] = \<const0> ;
  assign dmonitorout_out[18] = \<const0> ;
  assign dmonitorout_out[17] = \<const0> ;
  assign dmonitorout_out[16] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign eyescandataerror_out[3] = \<const0> ;
  assign eyescandataerror_out[2] = \<const0> ;
  assign eyescandataerror_out[1] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign rxbufstatus_out[11] = \^rxbufstatus_out [11];
  assign rxbufstatus_out[10] = \<const0> ;
  assign rxbufstatus_out[9] = \<const0> ;
  assign rxbufstatus_out[8] = \^rxbufstatus_out [8];
  assign rxbufstatus_out[7] = \<const0> ;
  assign rxbufstatus_out[6] = \<const0> ;
  assign rxbufstatus_out[5] = \^rxbufstatus_out [5];
  assign rxbufstatus_out[4] = \<const0> ;
  assign rxbufstatus_out[3] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxdatavalid_out[7] = \<const0> ;
  assign rxdatavalid_out[6] = \^rxdatavalid_out [6];
  assign rxdatavalid_out[5] = \<const0> ;
  assign rxdatavalid_out[4] = \^rxdatavalid_out [4];
  assign rxdatavalid_out[3] = \<const0> ;
  assign rxdatavalid_out[2] = \^rxdatavalid_out [2];
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxheader_out[23] = \<const0> ;
  assign rxheader_out[22] = \<const0> ;
  assign rxheader_out[21] = \<const0> ;
  assign rxheader_out[20] = \<const0> ;
  assign rxheader_out[19:18] = \^rxheader_out [19:18];
  assign rxheader_out[17] = \<const0> ;
  assign rxheader_out[16] = \<const0> ;
  assign rxheader_out[15] = \<const0> ;
  assign rxheader_out[14] = \<const0> ;
  assign rxheader_out[13:12] = \^rxheader_out [13:12];
  assign rxheader_out[11] = \<const0> ;
  assign rxheader_out[10] = \<const0> ;
  assign rxheader_out[9] = \<const0> ;
  assign rxheader_out[8] = \<const0> ;
  assign rxheader_out[7:6] = \^rxheader_out [7:6];
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[7] = \<const0> ;
  assign rxheadervalid_out[6] = \^rxheadervalid_out [6];
  assign rxheadervalid_out[5] = \<const0> ;
  assign rxheadervalid_out[4] = \^rxheadervalid_out [4];
  assign rxheadervalid_out[3] = \<const0> ;
  assign rxheadervalid_out[2] = \^rxheadervalid_out [2];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxoutclk_out[3] = \<const0> ;
  assign rxoutclk_out[2] = \^rxoutclk_out [2];
  assign rxoutclk_out[1] = \<const0> ;
  assign rxoutclk_out[0] = \<const0> ;
  assign rxprbserr_out[3] = \<const0> ;
  assign rxprbserr_out[2] = \<const0> ;
  assign rxprbserr_out[1] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxresetdone_out[3] = \<const0> ;
  assign rxresetdone_out[2] = \<const0> ;
  assign rxresetdone_out[1] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxstartofseq_out[7] = \<const0> ;
  assign rxstartofseq_out[6] = \<const0> ;
  assign rxstartofseq_out[5] = \<const0> ;
  assign rxstartofseq_out[4] = \<const0> ;
  assign rxstartofseq_out[3] = \<const0> ;
  assign rxstartofseq_out[2] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign txbufstatus_out[7] = \^txbufstatus_out [7];
  assign txbufstatus_out[6] = \<const0> ;
  assign txbufstatus_out[5] = \^txbufstatus_out [5];
  assign txbufstatus_out[4] = \<const0> ;
  assign txbufstatus_out[3] = \^txbufstatus_out [3];
  assign txbufstatus_out[2] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txoutclk_out[3] = \<const0> ;
  assign txoutclk_out[2] = \^txoutclk_out [2];
  assign txoutclk_out[1] = \<const0> ;
  assign txoutclk_out[0] = \<const0> ;
  assign txoutclkfabric_out[3] = \<const0> ;
  assign txoutclkfabric_out[2] = \<const0> ;
  assign txoutclkfabric_out[1] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[3] = \<const0> ;
  assign txoutclkpcs_out[2] = \<const0> ;
  assign txoutclkpcs_out[1] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txresetdone_out[3] = \<const0> ;
  assign txresetdone_out[2] = \<const0> ;
  assign txresetdone_out[1] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000000000000000000000000000000000000000" *) 
  (* C_COMMON_SCALING_FACTOR = "1" *) 
  (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
  (* C_ENABLE_COMMON_USRCLK = "0" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "50.000000" *) 
  (* C_GT_REV = "67" *) 
  (* C_GT_TYPE = "3" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "1" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) 
  (* C_PCIE_CORECLK_FREQ = "250" *) 
  (* C_PCIE_ENABLE = "0" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "1" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "2" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "0" *) 
  (* C_RX_CC_K = "8'b00000000" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "0" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_COMMA_M_ENABLE = "0" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "0" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "2" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "64" *) 
  (* C_RX_LINE_RATE = "25.000000" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "41" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "390.625000" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "0" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_RX_SLIDE_MODE = "0" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "64" *) 
  (* C_RX_USRCLK2_FREQUENCY = "390.625000" *) 
  (* C_RX_USRCLK_FREQUENCY = "390.625000" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_SIM_CPLL_CAL_BYPASS = "1" *) 
  (* C_TOTAL_NUM_CHANNELS = "4" *) 
  (* C_TOTAL_NUM_COMMONS = "0" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "0" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "0" *) 
  (* C_TXPROGDIV_FREQ_VAL = "390.625000" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "1" *) 
  (* C_TX_DATA_ENCODING = "2" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "64" *) 
  (* C_TX_LINE_RATE = "25.000000" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "41" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_TX_OUTCLK_FREQUENCY = "390.625000" *) 
  (* C_TX_OUTCLK_SOURCE = "1" *) 
  (* C_TX_PLL_TYPE = "0" *) 
  (* C_TX_REFCLK_FREQUENCY = "156.250000" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "64" *) 
  (* C_TX_USRCLK2_FREQUENCY = "390.625000" *) 
  (* C_TX_USRCLK_FREQUENCY = "390.625000" *) 
  (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
  aurora_64b66b_w256_1375Gbps_gt_gtwizard_top inst
       (.bgbypassb_in(1'b1),
        .bgmonitorenb_in(1'b1),
        .bgpdb_in(1'b1),
        .bgrcalovrd_in({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .bgrcalovrdenb_in(1'b1),
        .bufgtce_out(NLW_inst_bufgtce_out_UNCONNECTED[3:0]),
        .bufgtcemask_out(NLW_inst_bufgtcemask_out_UNCONNECTED[11:0]),
        .bufgtdiv_out(NLW_inst_bufgtdiv_out_UNCONNECTED[35:0]),
        .bufgtreset_out(NLW_inst_bufgtreset_out_UNCONNECTED[3:0]),
        .bufgtrstmask_out(NLW_inst_bufgtrstmask_out_UNCONNECTED[11:0]),
        .cdrstepdir_in({1'b0,1'b0,1'b0,1'b0}),
        .cdrstepsq_in({1'b0,1'b0,1'b0,1'b0}),
        .cdrstepsx_in({1'b0,1'b0,1'b0,1'b0}),
        .cfgreset_in({1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd0_in({1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd1_in({1'b0,1'b0,1'b0,1'b0}),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[3:0]),
        .cpllfreqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .cplllock_out(NLW_inst_cplllock_out_UNCONNECTED[3:0]),
        .cplllockdetclk_in({1'b0,1'b0,1'b0,1'b0}),
        .cplllocken_in({1'b0,1'b0,1'b0,1'b0}),
        .cpllpd_in({1'b1,1'b1,1'b1,1'b1}),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[3:0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1}),
        .cpllreset_in({1'b1,1'b1,1'b1,1'b1}),
        .dmonfiforeset_in({1'b0,1'b0,1'b0,1'b0}),
        .dmonitorclk_in({1'b0,1'b0,1'b0,1'b0}),
        .dmonitorout_out(NLW_inst_dmonitorout_out_UNCONNECTED[63:0]),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[3:0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in(drpaddr_in),
        .drpclk_common_in(1'b0),
        .drpclk_in({1'b0,1'b0,1'b0,drpclk_in[0]}),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in(drpdi_in),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[15:0]),
        .drpdo_out(drpdo_out),
        .drpen_common_in(1'b0),
        .drpen_in(drpen_in),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[0]),
        .drprdy_out(drprdy_out),
        .drprst_in({1'b0,1'b0,1'b0,1'b0}),
        .drpwe_common_in(1'b0),
        .drpwe_in(drpwe_in),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in(1'b0),
        .evoddphicalstart_in(1'b0),
        .evoddphidrden_in(1'b0),
        .evoddphidwren_in(1'b0),
        .evoddphixrden_in(1'b0),
        .evoddphixwren_in(1'b0),
        .eyescandataerror_out(NLW_inst_eyescandataerror_out_UNCONNECTED[3:0]),
        .eyescanmode_in(1'b0),
        .eyescanreset_in({1'b0,1'b0,1'b0,1'b0}),
        .eyescantrigger_in({1'b0,1'b0,1'b0,1'b0}),
        .freqos_in({1'b0,1'b0,1'b0,1'b0}),
        .gtgrefclk0_in(1'b0),
        .gtgrefclk1_in(1'b0),
        .gtgrefclk_in({1'b0,1'b0,1'b0,1'b0}),
        .gthrxn_in(1'b0),
        .gthrxp_in(1'b0),
        .gthtxn_out(NLW_inst_gthtxn_out_UNCONNECTED[0]),
        .gthtxp_out(NLW_inst_gthtxp_out_UNCONNECTED[0]),
        .gtnorthrefclk00_in(1'b0),
        .gtnorthrefclk01_in(1'b0),
        .gtnorthrefclk0_in({1'b0,1'b0,1'b0,1'b0}),
        .gtnorthrefclk10_in(1'b0),
        .gtnorthrefclk11_in(1'b0),
        .gtnorthrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(1'b0),
        .gtrefclk01_in(1'b0),
        .gtrefclk0_in({1'b0,1'b0,1'b0,gtrefclk0_in[0]}),
        .gtrefclk10_in(1'b0),
        .gtrefclk11_in(1'b0),
        .gtrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[3:0]),
        .gtresetsel_in(1'b0),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in({1'b0,1'b0,1'b0,1'b0}),
        .gtrxresetsel_in({1'b0,1'b0,1'b0,1'b0}),
        .gtsouthrefclk00_in(1'b0),
        .gtsouthrefclk01_in(1'b0),
        .gtsouthrefclk0_in({1'b0,1'b0,1'b0,1'b0}),
        .gtsouthrefclk10_in(1'b0),
        .gtsouthrefclk11_in(1'b0),
        .gtsouthrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gttxreset_in({1'b0,1'b0,1'b0,1'b0}),
        .gttxresetsel_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_buffbypass_rx_done_out(NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(1'b0),
        .gtwiz_buffbypass_rx_start_user_in(1'b0),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_qpll1lock_in(1'b0),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_cdr_stable_out(NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(1'b0),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in({1'b0,1'b0,1'b0,1'b0}),
        .loopback_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,loopback_in[2:0]}),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lpbkrxtxseren_in(1'b0),
        .lpbktxrxseren_in(1'b0),
        .pcieeqrxeqadaptdone_in({1'b0,1'b0,1'b0,1'b0}),
        .pcierategen3_out(NLW_inst_pcierategen3_out_UNCONNECTED[3:0]),
        .pcierateidle_out(NLW_inst_pcierateidle_out_UNCONNECTED[3:0]),
        .pcierateqpll0_in({1'b0,1'b0,1'b0}),
        .pcierateqpll1_in({1'b0,1'b0,1'b0}),
        .pcierateqpllpd_out(NLW_inst_pcierateqpllpd_out_UNCONNECTED[7:0]),
        .pcierateqpllreset_out(NLW_inst_pcierateqpllreset_out_UNCONNECTED[7:0]),
        .pcierstidle_in({1'b0,1'b0,1'b0,1'b0}),
        .pciersttxsyncstart_in({1'b0,1'b0,1'b0,1'b0}),
        .pciesynctxsyncdone_out(NLW_inst_pciesynctxsyncdone_out_UNCONNECTED[3:0]),
        .pcieusergen3rdy_out(NLW_inst_pcieusergen3rdy_out_UNCONNECTED[3:0]),
        .pcieuserphystatusrst_out(NLW_inst_pcieuserphystatusrst_out_UNCONNECTED[3:0]),
        .pcieuserratedone_in({1'b0,1'b0,1'b0,1'b0}),
        .pcieuserratestart_out(NLW_inst_pcieuserratestart_out_UNCONNECTED[3:0]),
        .pcsrsvdin2_in(1'b0),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcsrsvdout_out(NLW_inst_pcsrsvdout_out_UNCONNECTED[63:0]),
        .phystatus_out(NLW_inst_phystatus_out_UNCONNECTED[3:0]),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[63:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in(1'b0),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[7:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[7:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[3:0]),
        .qpll0clk_in({1'b0,1'b0,1'b0,qpll0clk_in[0]}),
        .qpll0clkrsvd0_in(1'b0),
        .qpll0clkrsvd1_in(1'b0),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[0]),
        .qpll0fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0freqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[0]),
        .qpll0lockdetclk_in(1'b0),
        .qpll0locken_in(1'b1),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[0]),
        .qpll0pd_in(1'b0),
        .qpll0refclk_in({1'b0,1'b0,1'b0,qpll0refclk_in[0]}),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1}),
        .qpll0reset_in(1'b0),
        .qpll1clk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1clkrsvd0_in(1'b0),
        .qpll1clkrsvd1_in(1'b0),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[0]),
        .qpll1fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1freqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1lock_out(NLW_inst_qpll1lock_out_UNCONNECTED[0]),
        .qpll1lockdetclk_in(1'b0),
        .qpll1locken_in(1'b0),
        .qpll1outclk_out(NLW_inst_qpll1outclk_out_UNCONNECTED[0]),
        .qpll1outrefclk_out(NLW_inst_qpll1outrefclk_out_UNCONNECTED[0]),
        .qpll1pd_in(1'b1),
        .qpll1refclk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1}),
        .qpll1reset_in(1'b1),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[7:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[7:0]),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd3_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in(1'b1),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[3:0]),
        .resetovrd_in({1'b0,1'b0,1'b0,1'b0}),
        .rstclkentx_in(1'b0),
        .rx8b10ben_in({1'b0,1'b0,1'b0,1'b0}),
        .rxafecfoken_in({1'b1,1'b1,1'b1,1'b1}),
        .rxbufreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufstatus_out({\^rxbufstatus_out ,NLW_inst_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxbyteisaligned_out(NLW_inst_rxbyteisaligned_out_UNCONNECTED[3:0]),
        .rxbyterealign_out(NLW_inst_rxbyterealign_out_UNCONNECTED[3:0]),
        .rxcdrfreqreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrlock_out(NLW_inst_rxcdrlock_out_UNCONNECTED[3:0]),
        .rxcdrovrden_in({1'b0,1'b0,1'b0,rxcdrovrden_in[0]}),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[3:0]),
        .rxcdrreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrresetrsv_in(1'b0),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[3:0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[3:0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[3:0]),
        .rxchbonden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondmaster_in({1'b0,1'b0,1'b0,1'b0}),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[19:0]),
        .rxchbondslave_in({1'b0,1'b0,1'b0,1'b0}),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[3:0]),
        .rxckcalreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxckcalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxclkcorcnt_out(NLW_inst_rxclkcorcnt_out_UNCONNECTED[7:0]),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[3:0]),
        .rxcommadet_out(NLW_inst_rxcommadet_out_UNCONNECTED[3:0]),
        .rxcommadeten_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[3:0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[3:0]),
        .rxctrl0_out(NLW_inst_rxctrl0_out_UNCONNECTED[63:0]),
        .rxctrl1_out(NLW_inst_rxctrl1_out_UNCONNECTED[63:0]),
        .rxctrl2_out(NLW_inst_rxctrl2_out_UNCONNECTED[31:0]),
        .rxctrl3_out(NLW_inst_rxctrl3_out_UNCONNECTED[31:0]),
        .rxdata_out(NLW_inst_rxdata_out_UNCONNECTED[511:0]),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[31:0]),
        .rxdatavalid_out({NLW_inst_rxdatavalid_out_UNCONNECTED[7],\^rxdatavalid_out }),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in(1'b0),
        .rxdfeagchold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeagcovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokfcnum_in({1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1}),
        .rxdfecfokfen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokfpulse_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokovren_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfekhhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfekhovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelfovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelpmreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeuthold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeutovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevphold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevpovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevsen_in(1'b0),
        .rxdfexyden_in({1'b1,1'b1,1'b1,1'b1}),
        .rxdlybypass_in({1'b1,1'b1,1'b1,1'b1}),
        .rxdlyen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlyovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlysreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlysresetdone_out(NLW_inst_rxdlysresetdone_out_UNCONNECTED[3:0]),
        .rxelecidle_out(NLW_inst_rxelecidle_out_UNCONNECTED[3:0]),
        .rxelecidlemode_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxeqtraining_in({1'b0,1'b0,1'b0,1'b0}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({NLW_inst_rxheader_out_UNCONNECTED[23:20],\^rxheader_out }),
        .rxheadervalid_out({NLW_inst_rxheadervalid_out_UNCONNECTED[7],\^rxheadervalid_out }),
        .rxlatclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[3:0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[3:0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[3:0]),
        .rxlpmen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmgchold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmgcovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfklovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmoshold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmosovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxmcommaalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[31:0]),
        .rxmonitorsel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoobreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoscalreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoshold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxosintcfg_in(1'b0),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[3:0]),
        .rxosinten_in(1'b0),
        .rxosinthold_in(1'b0),
        .rxosintovrden_in(1'b0),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[3:0]),
        .rxosintstrobe_in(1'b0),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[3:0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[3:0]),
        .rxosinttestovrden_in(1'b0),
        .rxosovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoutclk_out({NLW_inst_rxoutclk_out_UNCONNECTED[3],\^rxoutclk_out ,NLW_inst_rxoutclk_out_UNCONNECTED[1:0]}),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[3:0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[3:0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphalign_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphaligndone_out(NLW_inst_rxphaligndone_out_UNCONNECTED[3:0]),
        .rxphalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[3:0]),
        .rxphdlypd_in({1'b1,1'b1,1'b1,1'b1}),
        .rxphdlyreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphovrden_in(1'b0),
        .rxpllclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprbserr_out(NLW_inst_rxprbserr_out_UNCONNECTED[3:0]),
        .rxprbslocked_out(NLW_inst_rxprbslocked_out_UNCONNECTED[3:0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxprgdivresetdone_out(NLW_inst_rxprgdivresetdone_out_UNCONNECTED[3:0]),
        .rxprogdivreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxqpien_in(1'b0),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[0]),
        .rxrate_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[3:0]),
        .rxratemode_in({1'b0,1'b0,1'b0,1'b0}),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[1:0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[1:0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[3:0]),
        .rxresetdone_out(NLW_inst_rxresetdone_out_UNCONNECTED[3:0]),
        .rxslide_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[3:0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[3:0]),
        .rxslipoutclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[3:0]),
        .rxslippma_in({1'b0,1'b0,1'b0,1'b0}),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[3:0]),
        .rxstartofseq_out(NLW_inst_rxstartofseq_out_UNCONNECTED[7:0]),
        .rxstatus_out(NLW_inst_rxstatus_out_UNCONNECTED[11:0]),
        .rxsyncallin_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncdone_out(NLW_inst_rxsyncdone_out_UNCONNECTED[3:0]),
        .rxsyncin_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncmode_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[3:0]),
        .rxsysclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .rxtermination_in({1'b0,1'b0,1'b0,1'b0}),
        .rxuserrdy_in({1'b1,1'b1,1'b1,1'b1}),
        .rxusrclk2_in({1'b0,1'b0,1'b0,rxusrclk2_in[0]}),
        .rxusrclk_in({1'b0,1'b0,1'b0,rxusrclk_in[0]}),
        .rxvalid_out(NLW_inst_rxvalid_out_UNCONNECTED[3:0]),
        .sdm0data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[3:0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[14:0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in({1'b0,1'b0}),
        .sdm1data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[3:0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[14:0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in({1'b0,1'b0}),
        .sigvalidclk_in({1'b0,1'b0,1'b0,1'b0}),
        .tcongpi_in(1'b0),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[0]),
        .tconpowerup_in(1'b0),
        .tconreset_in(1'b0),
        .tconrsvdin1_in(1'b0),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in({1'b0,1'b0,1'b0,1'b0}),
        .txbufdiffctrl_in(1'b0),
        .txbufstatus_out({\^txbufstatus_out ,NLW_inst_txbufstatus_out_UNCONNECTED[0]}),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[3:0]),
        .txcominit_in({1'b0,1'b0,1'b0,1'b0}),
        .txcomsas_in({1'b0,1'b0,1'b0,1'b0}),
        .txcomwake_in({1'b0,1'b0,1'b0,1'b0}),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[3:0]),
        .txdccforcestart_in({1'b0,1'b0,1'b0,1'b0}),
        .txdccreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txdeemph_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdetectrx_in({1'b0,1'b0,1'b0,1'b0}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txdiffpd_in(1'b0),
        .txdlybypass_in({1'b1,1'b1,1'b1,1'b1}),
        .txdlyen_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlyhold_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlyovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlysreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlysresetdone_out(NLW_inst_txdlysresetdone_out_UNCONNECTED[3:0]),
        .txdlyupdown_in({1'b0,1'b0,1'b0,1'b0}),
        .txelecidle_in({1'b0,1'b0,1'b0,1'b0}),
        .txelforcestart_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,txheader_in[19:18],1'b0,1'b0,1'b0,1'b0,txheader_in[13:12],1'b0,1'b0,1'b0,1'b0,txheader_in[7:6],1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .txinhibit_in({1'b0,1'b0,1'b0,1'b0}),
        .txlatclk_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpstreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpsu2lpexit_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpsu3wake_in({1'b0,1'b0,1'b0,1'b0}),
        .txmaincursor_in({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .txmargin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txmuxdcdexhold_in({1'b0,1'b0,1'b0,1'b0}),
        .txmuxdcdorwren_in({1'b0,1'b0,1'b0,1'b0}),
        .txoneszeros_in({1'b0,1'b0,1'b0,1'b0}),
        .txoutclk_out({NLW_inst_txoutclk_out_UNCONNECTED[3],\^txoutclk_out ,NLW_inst_txoutclk_out_UNCONNECTED[1:0]}),
        .txoutclkfabric_out(NLW_inst_txoutclkfabric_out_UNCONNECTED[3:0]),
        .txoutclkpcs_out(NLW_inst_txoutclkpcs_out_UNCONNECTED[3:0]),
        .txoutclksel_in({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .txpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpdelecidlemode_in({1'b0,1'b0,1'b0,1'b0}),
        .txphalign_in({1'b0,1'b0,1'b0,1'b0}),
        .txphaligndone_out(NLW_inst_txphaligndone_out_UNCONNECTED[3:0]),
        .txphalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .txphdlypd_in({1'b1,1'b1,1'b1,1'b1}),
        .txphdlyreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txphdlytstclk_in({1'b0,1'b0,1'b0,1'b0}),
        .txphinit_in({1'b0,1'b0,1'b0,1'b0}),
        .txphinitdone_out(NLW_inst_txphinitdone_out_UNCONNECTED[3:0]),
        .txphovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmen_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmpd_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmsel_in({1'b1,1'b1,1'b1,1'b1}),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in({1'b0,1'b0,1'b0,1'b0}),
        .txpllclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .txpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in({1'b0,1'b0,1'b0,1'b0}),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpostcursorinv_in(1'b0),
        .txprbsforceerr_in({1'b0,1'b0,1'b0,1'b0}),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursorinv_in(1'b0),
        .txprgdivresetdone_out(NLW_inst_txprgdivresetdone_out_UNCONNECTED[3:0]),
        .txprogdivreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txqpibiasen_in(1'b0),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[0]),
        .txqpistrongpdown_in(1'b0),
        .txqpiweakpup_in(1'b0),
        .txrate_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[3:0]),
        .txratemode_in({1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(NLW_inst_txresetdone_out_UNCONNECTED[3:0]),
        .txsequence_in(txsequence_in),
        .txswing_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncallin_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncdone_out(NLW_inst_txsyncdone_out_UNCONNECTED[3:0]),
        .txsyncin_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncmode_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncout_out(NLW_inst_txsyncout_out_UNCONNECTED[3:0]),
        .txsysclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .txuserrdy_in({1'b1,1'b1,1'b1,1'b1}),
        .txusrclk2_in({1'b0,1'b0,1'b0,txusrclk2_in[0]}),
        .txusrclk_in({1'b0,1'b0,1'b0,txusrclk_in[0]}),
        .ubcfgstreamen_in(1'b0),
        .ubdaddr_out(NLW_inst_ubdaddr_out_UNCONNECTED[15:0]),
        .ubden_out(NLW_inst_ubden_out_UNCONNECTED[0]),
        .ubdi_out(NLW_inst_ubdi_out_UNCONNECTED[15:0]),
        .ubdo_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ubdrdy_in(1'b0),
        .ubdwe_out(NLW_inst_ubdwe_out_UNCONNECTED[0]),
        .ubenable_in(1'b0),
        .ubgpi_in({1'b0,1'b0}),
        .ubintr_in({1'b0,1'b0}),
        .ubiolmbrst_in(1'b0),
        .ubmbrst_in(1'b0),
        .ubmdmcapture_in(1'b0),
        .ubmdmdbgrst_in(1'b0),
        .ubmdmdbgupdate_in(1'b0),
        .ubmdmregen_in({1'b0,1'b0,1'b0,1'b0}),
        .ubmdmshift_in(1'b0),
        .ubmdmsysrst_in(1'b0),
        .ubmdmtck_in(1'b0),
        .ubmdmtdi_in(1'b0),
        .ubmdmtdo_out(NLW_inst_ubmdmtdo_out_UNCONNECTED[0]),
        .ubrsvdout_out(NLW_inst_ubrsvdout_out_UNCONNECTED[0]),
        .ubtxuart_out(NLW_inst_ubtxuart_out_UNCONNECTED[0]));
endmodule

module aurora_64b66b_w256_1375Gbps_gt_gtwizard_gtye4
   (drprdy_out,
    gtytxn_out,
    gtytxp_out,
    rxpmaresetdone_out,
    txpmaresetdone_out,
    gtwiz_userdata_rx_out,
    drpdo_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    gtpowergood_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    drpclk_in,
    drpen_in,
    drpwe_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    rxusrclk_in,
    rxusrclk2_in,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [3:0]drprdy_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]txpmaresetdone_out;
  output [255:0]gtwiz_userdata_rx_out;
  output [63:0]drpdo_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  output [3:0]gtpowergood_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [0:0]gtrefclk0_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [63:0]drpdi_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input [39:0]drpaddr_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [39:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_20 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_21 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_22 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_23 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_32 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_33 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_34 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_35 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_40 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_41 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_42 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_43 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gtpowergood_int ;
  wire [3:0]\gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire [3:0]\gen_gtwizard_gtye4.txpisopd_ch_int ;
  wire [3:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_w256_1375Gbps_gt_gtye4_channel_wrapper \gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst 
       (.GTYE4_CHANNEL_GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTYE4_CHANNEL_GTRXRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ),
        .GTYE4_CHANNEL_GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTYE4_CHANNEL_RXCDRLOCK({\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_20 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_21 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_22 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_23 }),
        .GTYE4_CHANNEL_RXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ),
        .GTYE4_CHANNEL_RXRESETDONE({\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 }),
        .GTYE4_CHANNEL_RXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ),
        .GTYE4_CHANNEL_TXOUTCLKPCS({\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_32 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_33 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_34 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_35 }),
        .GTYE4_CHANNEL_TXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int ),
        .GTYE4_CHANNEL_TXRESETDONE({\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_40 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_41 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_42 ,\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_43 }),
        .GTYE4_CHANNEL_TXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_35 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [0]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ),
        .out(gtpowergood_out[0]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_92 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[1].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_34 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [1]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .out(gtpowergood_out[1]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_93 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[2].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_33 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [2]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ),
        .out(gtpowergood_out[2]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_94 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[3].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_32 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [3]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ),
        .out(gtpowergood_out[3]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [0]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_95 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_43 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [0]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_96 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[1].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [1]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_97 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[1].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_42 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [1]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_98 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[2].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [2]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_99 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[2].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_41 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [2]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_100 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[3].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [3]));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_101 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[3].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_40 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [3]));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int 
       (.I0(gtpowergood_out[1]),
        .I1(gtpowergood_out[0]),
        .I2(gtpowergood_out[3]),
        .I3(gtpowergood_out[2]),
        .O(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtwiz_reset \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.GTYE4_CHANNEL_GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTYE4_CHANNEL_GTRXRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ),
        .GTYE4_CHANNEL_GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTYE4_CHANNEL_RXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ),
        .GTYE4_CHANNEL_RXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ),
        .GTYE4_CHANNEL_TXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ),
        .GTYE4_CHANNEL_TXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .gtpowergood_out(gtpowergood_out),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .i_in_meta_reg(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ),
        .in0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ),
        .rxusrclk2_in(rxusrclk2_in),
        .txusrclk2_in(txusrclk2_in));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int 
       (.I0(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_22 ),
        .I1(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_23 ),
        .I2(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_20 ),
        .I3(\gen_gtwizard_gtye4.gen_channel_container[10].gen_enabled_channel.gtye4_channel_wrapper_inst_n_21 ),
        .O(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011110000000000000000000000000000000000000000" *) (* C_COMMON_SCALING_FACTOR = "1" *) (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
(* C_ENABLE_COMMON_USRCLK = "0" *) (* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "50.000000" *) 
(* C_GT_REV = "67" *) (* C_GT_TYPE = "3" *) (* C_INCLUDE_CPLL_CAL = "2" *) 
(* C_LOCATE_COMMON = "1" *) (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "0" *) 
(* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) (* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_TX_USER_CLOCKING = "1" *) (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) (* C_PCIE_CORECLK_FREQ = "250" *) 
(* C_PCIE_ENABLE = "0" *) (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
(* C_RX_BUFFBYPASS_MODE = "0" *) (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "1" *) 
(* C_RX_CB_DISP = "8'b00000000" *) (* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) 
(* C_RX_CB_MAX_LEVEL = "2" *) (* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_CC_DISP = "8'b00000000" *) (* C_RX_CC_ENABLE = "0" *) (* C_RX_CC_K = "8'b00000000" *) 
(* C_RX_CC_LEN_SEQ = "1" *) (* C_RX_CC_NUM_SEQ = "0" *) (* C_RX_CC_PERIODICITY = "5000" *) 
(* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_COMMA_M_ENABLE = "0" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
(* C_RX_COMMA_P_ENABLE = "0" *) (* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "2" *) 
(* C_RX_ENABLE = "1" *) (* C_RX_INT_DATA_WIDTH = "64" *) (* C_RX_LINE_RATE = "25.000000" *) 
(* C_RX_MASTER_CHANNEL_IDX = "41" *) (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "390.625000" *) 
(* C_RX_OUTCLK_SOURCE = "1" *) (* C_RX_PLL_TYPE = "0" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_REFCLK_FREQUENCY = "156.250000" *) (* C_RX_SLIDE_MODE = "0" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_RX_USER_CLOCKING_SOURCE = "0" *) (* C_RX_USER_DATA_WIDTH = "64" *) (* C_RX_USRCLK2_FREQUENCY = "390.625000" *) 
(* C_RX_USRCLK_FREQUENCY = "390.625000" *) (* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
(* C_SIM_CPLL_CAL_BYPASS = "1" *) (* C_TOTAL_NUM_CHANNELS = "4" *) (* C_TOTAL_NUM_COMMONS = "0" *) 
(* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) (* C_TXPROGDIV_FREQ_ENABLE = "0" *) (* C_TXPROGDIV_FREQ_SOURCE = "0" *) 
(* C_TXPROGDIV_FREQ_VAL = "390.625000" *) (* C_TX_BUFFBYPASS_MODE = "0" *) (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
(* C_TX_BUFFER_MODE = "1" *) (* C_TX_DATA_ENCODING = "2" *) (* C_TX_ENABLE = "1" *) 
(* C_TX_INT_DATA_WIDTH = "64" *) (* C_TX_LINE_RATE = "25.000000" *) (* C_TX_MASTER_CHANNEL_IDX = "41" *) 
(* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_TX_OUTCLK_FREQUENCY = "390.625000" *) (* C_TX_OUTCLK_SOURCE = "1" *) 
(* C_TX_PLL_TYPE = "0" *) (* C_TX_REFCLK_FREQUENCY = "156.250000" *) (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_TX_USER_CLOCKING_SOURCE = "0" *) (* C_TX_USER_DATA_WIDTH = "64" *) (* C_TX_USRCLK2_FREQUENCY = "390.625000" *) 
(* C_TX_USRCLK_FREQUENCY = "390.625000" *) (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
module aurora_64b66b_w256_1375Gbps_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_gthe4_cpll_cal_txoutclk_period_in,
    gtwiz_gthe4_cpll_cal_cnt_tol_in,
    gtwiz_gthe4_cpll_cal_bufg_ce_in,
    gtwiz_gtye4_cpll_cal_txoutclk_period_in,
    gtwiz_gtye4_cpll_cal_cnt_tol_in,
    gtwiz_gtye4_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    ubcfgstreamen_in,
    ubdo_in,
    ubdrdy_in,
    ubenable_in,
    ubgpi_in,
    ubintr_in,
    ubiolmbrst_in,
    ubmbrst_in,
    ubmdmcapture_in,
    ubmdmdbgrst_in,
    ubmdmdbgupdate_in,
    ubmdmregen_in,
    ubmdmshift_in,
    ubmdmsysrst_in,
    ubmdmtck_in,
    ubmdmtdi_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    ubdaddr_out,
    ubden_out,
    ubdi_out,
    ubdwe_out,
    ubmdmtdo_out,
    ubrsvdout_out,
    ubtxuart_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    incpctrl_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [0:0]gtwiz_reset_qpll1reset_out;
  input [71:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [71:0]gtwiz_gthe4_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gthe4_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gthe4_cpll_cal_bufg_ce_in;
  input [71:0]gtwiz_gtye4_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gtye4_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gtye4_cpll_cal_bufg_ce_in;
  input [255:0]gtwiz_userdata_tx_in;
  output [255:0]gtwiz_userdata_rx_out;
  input [0:0]bgbypassb_in;
  input [0:0]bgmonitorenb_in;
  input [0:0]bgpdb_in;
  input [4:0]bgrcalovrd_in;
  input [0:0]bgrcalovrdenb_in;
  input [15:0]drpaddr_common_in;
  input [0:0]drpclk_common_in;
  input [15:0]drpdi_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [2:0]pcierateqpll0_in;
  input [2:0]pcierateqpll1_in;
  input [7:0]pmarsvd0_in;
  input [7:0]pmarsvd1_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [7:0]qpll0fbdiv_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [2:0]qpll0refclksel_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [7:0]qpll1fbdiv_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [2:0]qpll1refclksel_in;
  input [0:0]qpll1reset_in;
  input [7:0]qpllrsvd1_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd4_in;
  input [0:0]rcalenb_in;
  input [24:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [1:0]sdm0width_in;
  input [24:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [1:0]sdm1width_in;
  input [0:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [0:0]tconreset_in;
  input [0:0]tconrsvdin1_in;
  input [0:0]ubcfgstreamen_in;
  input [15:0]ubdo_in;
  input [0:0]ubdrdy_in;
  input [0:0]ubenable_in;
  input [1:0]ubgpi_in;
  input [1:0]ubintr_in;
  input [0:0]ubiolmbrst_in;
  input [0:0]ubmbrst_in;
  input [0:0]ubmdmcapture_in;
  input [0:0]ubmdmdbgrst_in;
  input [0:0]ubmdmdbgupdate_in;
  input [3:0]ubmdmregen_in;
  input [0:0]ubmdmshift_in;
  input [0:0]ubmdmsysrst_in;
  input [0:0]ubmdmtck_in;
  input [0:0]ubmdmtdi_in;
  output [15:0]drpdo_common_out;
  output [0:0]drprdy_common_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [0:0]rxrecclk0_sel_out;
  output [0:0]rxrecclk1_sel_out;
  output [1:0]rxrecclk0sel_out;
  output [1:0]rxrecclk1sel_out;
  output [3:0]sdm0finalout_out;
  output [14:0]sdm0testdata_out;
  output [3:0]sdm1finalout_out;
  output [14:0]sdm1testdata_out;
  output [0:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  output [15:0]ubdaddr_out;
  output [0:0]ubden_out;
  output [15:0]ubdi_out;
  output [0:0]ubdwe_out;
  output [0:0]ubmdmtdo_out;
  output [0:0]ubrsvdout_out;
  output [0:0]ubtxuart_out;
  input [3:0]cdrstepdir_in;
  input [3:0]cdrstepsq_in;
  input [3:0]cdrstepsx_in;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cpllfreqlock_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [11:0]cpllrefclksel_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [39:0]drpaddr_in;
  input [3:0]drpclk_in;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drprst_in;
  input [3:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [0:0]evoddphicaldone_in;
  input [0:0]evoddphicalstart_in;
  input [0:0]evoddphidrden_in;
  input [0:0]evoddphidwren_in;
  input [0:0]evoddphixrden_in;
  input [0:0]evoddphixwren_in;
  input [0:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]freqos_in;
  input [3:0]gtgrefclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [0:0]gtresetsel_in;
  input [63:0]gtrsvd_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtrxresetsel_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]gttxresetsel_in;
  input [3:0]incpctrl_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [11:0]loopback_in;
  input [0:0]looprsvd_in;
  input [0:0]lpbkrxtxseren_in;
  input [0:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [63:0]pcsrsvdin_in;
  input [0:0]pcsrsvdin2_in;
  input [0:0]pmarsvdin_in;
  input [3:0]qpll0clk_in;
  input [3:0]qpll0freqlock_in;
  input [3:0]qpll0refclk_in;
  input [3:0]qpll1clk_in;
  input [3:0]qpll1freqlock_in;
  input [3:0]qpll1refclk_in;
  input [3:0]resetovrd_in;
  input [0:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxafecfoken_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [0:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [19:0]rxchbondi_in;
  input [11:0]rxchbondlevel_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxckcalreset_in;
  input [27:0]rxckcalstart_in;
  input [3:0]rxcommadeten_in;
  input [0:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [15:0]rxdfecfokfcnum_in;
  input [3:0]rxdfecfokfen_in;
  input [3:0]rxdfecfokfpulse_in;
  input [3:0]rxdfecfokhold_in;
  input [3:0]rxdfecfokovren_in;
  input [3:0]rxdfekhhold_in;
  input [3:0]rxdfekhovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [0:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [7:0]rxelecidlemode_in;
  input [3:0]rxeqtraining_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [7:0]rxmonitorsel_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [0:0]rxosintcfg_in;
  input [0:0]rxosinten_in;
  input [0:0]rxosinthold_in;
  input [0:0]rxosintovrden_in;
  input [0:0]rxosintstrobe_in;
  input [0:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [11:0]rxoutclksel_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [7:0]rxpd_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [0:0]rxphovrden_in;
  input [7:0]rxpllclksel_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [15:0]rxprbssel_in;
  input [3:0]rxprogdivreset_in;
  input [0:0]rxqpien_in;
  input [11:0]rxrate_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [7:0]rxsysclksel_in;
  input [3:0]rxtermination_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [79:0]tstin_in;
  input [31:0]tx8b10bbypass_in;
  input [3:0]tx8b10ben_in;
  input [0:0]txbufdiffctrl_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [31:0]txctrl2_in;
  input [511:0]txdata_in;
  input [31:0]txdataextendrsvd_in;
  input [3:0]txdccforcestart_in;
  input [3:0]txdccreset_in;
  input [7:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [19:0]txdiffctrl_in;
  input [0:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [23:0]txheader_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txlfpstreset_in;
  input [3:0]txlfpsu2lpexit_in;
  input [3:0]txlfpsu3wake_in;
  input [27:0]txmaincursor_in;
  input [11:0]txmargin_in;
  input [3:0]txmuxdcdexhold_in;
  input [3:0]txmuxdcdorwren_in;
  input [3:0]txoneszeros_in;
  input [11:0]txoutclksel_in;
  input [3:0]txpcsreset_in;
  input [7:0]txpd_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [19:0]txpippmstepsize_in;
  input [3:0]txpisopd_in;
  input [7:0]txpllclksel_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [19:0]txpostcursor_in;
  input [0:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [15:0]txprbssel_in;
  input [19:0]txprecursor_in;
  input [0:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [0:0]txqpibiasen_in;
  input [0:0]txqpistrongpdown_in;
  input [0:0]txqpiweakpup_in;
  input [11:0]txrate_in;
  input [3:0]txratemode_in;
  input [27:0]txsequence_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [7:0]txsysclksel_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  output [3:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [35:0]bufgtdiv_out;
  output [3:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [63:0]dmonitorout_out;
  output [3:0]dmonitoroutclk_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [63:0]pcsrsvdout_out;
  output [3:0]phystatus_out;
  output [63:0]pinrsrvdas_out;
  output [3:0]powerpresent_out;
  output [3:0]resetexception_out;
  output [11:0]rxbufstatus_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [19:0]rxchbondo_out;
  output [3:0]rxckcaldone_out;
  output [7:0]rxclkcorcnt_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [511:0]rxdata_out;
  output [31:0]rxdataextendrsvd_out;
  output [7:0]rxdatavalid_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [23:0]rxheader_out;
  output [7:0]rxheadervalid_out;
  output [3:0]rxlfpstresetdet_out;
  output [3:0]rxlfpsu2lpexitdet_out;
  output [3:0]rxlfpsu3wakedet_out;
  output [31:0]rxmonitorout_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [0:0]rxqpisenn_out;
  output [0:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [7:0]rxstartofseq_out;
  output [11:0]rxstatus_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [7:0]txbufstatus_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdccdone_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [0:0]txqpisenn_out;
  output [0:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire \<const0> ;
  wire [39:0]drpaddr_in;
  wire [3:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [3:0]qpll0clk_in;
  wire [3:0]qpll0refclk_in;
  wire [11:2]\^rxbufstatus_out ;
  wire [3:0]rxcdrovrden_in;
  wire [6:0]\^rxdatavalid_out ;
  wire [3:0]rxgearboxslip_in;
  wire [19:0]\^rxheader_out ;
  wire [6:0]\^rxheadervalid_out ;
  wire [2:2]\^rxoutclk_out ;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [7:1]\^txbufstatus_out ;
  wire [23:0]txheader_in;
  wire [2:2]\^txoutclk_out ;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txusrclk2_in;
  wire [3:0]txusrclk_in;

  assign bufgtce_out[3] = \<const0> ;
  assign bufgtce_out[2] = \<const0> ;
  assign bufgtce_out[1] = \<const0> ;
  assign bufgtce_out[0] = \<const0> ;
  assign bufgtcemask_out[11] = \<const0> ;
  assign bufgtcemask_out[10] = \<const0> ;
  assign bufgtcemask_out[9] = \<const0> ;
  assign bufgtcemask_out[8] = \<const0> ;
  assign bufgtcemask_out[7] = \<const0> ;
  assign bufgtcemask_out[6] = \<const0> ;
  assign bufgtcemask_out[5] = \<const0> ;
  assign bufgtcemask_out[4] = \<const0> ;
  assign bufgtcemask_out[3] = \<const0> ;
  assign bufgtcemask_out[2] = \<const0> ;
  assign bufgtcemask_out[1] = \<const0> ;
  assign bufgtcemask_out[0] = \<const0> ;
  assign bufgtdiv_out[35] = \<const0> ;
  assign bufgtdiv_out[34] = \<const0> ;
  assign bufgtdiv_out[33] = \<const0> ;
  assign bufgtdiv_out[32] = \<const0> ;
  assign bufgtdiv_out[31] = \<const0> ;
  assign bufgtdiv_out[30] = \<const0> ;
  assign bufgtdiv_out[29] = \<const0> ;
  assign bufgtdiv_out[28] = \<const0> ;
  assign bufgtdiv_out[27] = \<const0> ;
  assign bufgtdiv_out[26] = \<const0> ;
  assign bufgtdiv_out[25] = \<const0> ;
  assign bufgtdiv_out[24] = \<const0> ;
  assign bufgtdiv_out[23] = \<const0> ;
  assign bufgtdiv_out[22] = \<const0> ;
  assign bufgtdiv_out[21] = \<const0> ;
  assign bufgtdiv_out[20] = \<const0> ;
  assign bufgtdiv_out[19] = \<const0> ;
  assign bufgtdiv_out[18] = \<const0> ;
  assign bufgtdiv_out[17] = \<const0> ;
  assign bufgtdiv_out[16] = \<const0> ;
  assign bufgtdiv_out[15] = \<const0> ;
  assign bufgtdiv_out[14] = \<const0> ;
  assign bufgtdiv_out[13] = \<const0> ;
  assign bufgtdiv_out[12] = \<const0> ;
  assign bufgtdiv_out[11] = \<const0> ;
  assign bufgtdiv_out[10] = \<const0> ;
  assign bufgtdiv_out[9] = \<const0> ;
  assign bufgtdiv_out[8] = \<const0> ;
  assign bufgtdiv_out[7] = \<const0> ;
  assign bufgtdiv_out[6] = \<const0> ;
  assign bufgtdiv_out[5] = \<const0> ;
  assign bufgtdiv_out[4] = \<const0> ;
  assign bufgtdiv_out[3] = \<const0> ;
  assign bufgtdiv_out[2] = \<const0> ;
  assign bufgtdiv_out[1] = \<const0> ;
  assign bufgtdiv_out[0] = \<const0> ;
  assign bufgtreset_out[3] = \<const0> ;
  assign bufgtreset_out[2] = \<const0> ;
  assign bufgtreset_out[1] = \<const0> ;
  assign bufgtreset_out[0] = \<const0> ;
  assign bufgtrstmask_out[11] = \<const0> ;
  assign bufgtrstmask_out[10] = \<const0> ;
  assign bufgtrstmask_out[9] = \<const0> ;
  assign bufgtrstmask_out[8] = \<const0> ;
  assign bufgtrstmask_out[7] = \<const0> ;
  assign bufgtrstmask_out[6] = \<const0> ;
  assign bufgtrstmask_out[5] = \<const0> ;
  assign bufgtrstmask_out[4] = \<const0> ;
  assign bufgtrstmask_out[3] = \<const0> ;
  assign bufgtrstmask_out[2] = \<const0> ;
  assign bufgtrstmask_out[1] = \<const0> ;
  assign bufgtrstmask_out[0] = \<const0> ;
  assign cpllfbclklost_out[3] = \<const0> ;
  assign cpllfbclklost_out[2] = \<const0> ;
  assign cpllfbclklost_out[1] = \<const0> ;
  assign cpllfbclklost_out[0] = \<const0> ;
  assign cplllock_out[3] = \<const0> ;
  assign cplllock_out[2] = \<const0> ;
  assign cplllock_out[1] = \<const0> ;
  assign cplllock_out[0] = \<const0> ;
  assign cpllrefclklost_out[3] = \<const0> ;
  assign cpllrefclklost_out[2] = \<const0> ;
  assign cpllrefclklost_out[1] = \<const0> ;
  assign cpllrefclklost_out[0] = \<const0> ;
  assign dmonitorout_out[63] = \<const0> ;
  assign dmonitorout_out[62] = \<const0> ;
  assign dmonitorout_out[61] = \<const0> ;
  assign dmonitorout_out[60] = \<const0> ;
  assign dmonitorout_out[59] = \<const0> ;
  assign dmonitorout_out[58] = \<const0> ;
  assign dmonitorout_out[57] = \<const0> ;
  assign dmonitorout_out[56] = \<const0> ;
  assign dmonitorout_out[55] = \<const0> ;
  assign dmonitorout_out[54] = \<const0> ;
  assign dmonitorout_out[53] = \<const0> ;
  assign dmonitorout_out[52] = \<const0> ;
  assign dmonitorout_out[51] = \<const0> ;
  assign dmonitorout_out[50] = \<const0> ;
  assign dmonitorout_out[49] = \<const0> ;
  assign dmonitorout_out[48] = \<const0> ;
  assign dmonitorout_out[47] = \<const0> ;
  assign dmonitorout_out[46] = \<const0> ;
  assign dmonitorout_out[45] = \<const0> ;
  assign dmonitorout_out[44] = \<const0> ;
  assign dmonitorout_out[43] = \<const0> ;
  assign dmonitorout_out[42] = \<const0> ;
  assign dmonitorout_out[41] = \<const0> ;
  assign dmonitorout_out[40] = \<const0> ;
  assign dmonitorout_out[39] = \<const0> ;
  assign dmonitorout_out[38] = \<const0> ;
  assign dmonitorout_out[37] = \<const0> ;
  assign dmonitorout_out[36] = \<const0> ;
  assign dmonitorout_out[35] = \<const0> ;
  assign dmonitorout_out[34] = \<const0> ;
  assign dmonitorout_out[33] = \<const0> ;
  assign dmonitorout_out[32] = \<const0> ;
  assign dmonitorout_out[31] = \<const0> ;
  assign dmonitorout_out[30] = \<const0> ;
  assign dmonitorout_out[29] = \<const0> ;
  assign dmonitorout_out[28] = \<const0> ;
  assign dmonitorout_out[27] = \<const0> ;
  assign dmonitorout_out[26] = \<const0> ;
  assign dmonitorout_out[25] = \<const0> ;
  assign dmonitorout_out[24] = \<const0> ;
  assign dmonitorout_out[23] = \<const0> ;
  assign dmonitorout_out[22] = \<const0> ;
  assign dmonitorout_out[21] = \<const0> ;
  assign dmonitorout_out[20] = \<const0> ;
  assign dmonitorout_out[19] = \<const0> ;
  assign dmonitorout_out[18] = \<const0> ;
  assign dmonitorout_out[17] = \<const0> ;
  assign dmonitorout_out[16] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign dmonitoroutclk_out[3] = \<const0> ;
  assign dmonitoroutclk_out[2] = \<const0> ;
  assign dmonitoroutclk_out[1] = \<const0> ;
  assign dmonitoroutclk_out[0] = \<const0> ;
  assign drpdo_common_out[15] = \<const0> ;
  assign drpdo_common_out[14] = \<const0> ;
  assign drpdo_common_out[13] = \<const0> ;
  assign drpdo_common_out[12] = \<const0> ;
  assign drpdo_common_out[11] = \<const0> ;
  assign drpdo_common_out[10] = \<const0> ;
  assign drpdo_common_out[9] = \<const0> ;
  assign drpdo_common_out[8] = \<const0> ;
  assign drpdo_common_out[7] = \<const0> ;
  assign drpdo_common_out[6] = \<const0> ;
  assign drpdo_common_out[5] = \<const0> ;
  assign drpdo_common_out[4] = \<const0> ;
  assign drpdo_common_out[3] = \<const0> ;
  assign drpdo_common_out[2] = \<const0> ;
  assign drpdo_common_out[1] = \<const0> ;
  assign drpdo_common_out[0] = \<const0> ;
  assign drprdy_common_out[0] = \<const0> ;
  assign eyescandataerror_out[3] = \<const0> ;
  assign eyescandataerror_out[2] = \<const0> ;
  assign eyescandataerror_out[1] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gthtxn_out[0] = \<const0> ;
  assign gthtxp_out[0] = \<const0> ;
  assign gtrefclkmonitor_out[3] = \<const0> ;
  assign gtrefclkmonitor_out[2] = \<const0> ;
  assign gtrefclkmonitor_out[1] = \<const0> ;
  assign gtrefclkmonitor_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll1reset_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign pcierategen3_out[3] = \<const0> ;
  assign pcierategen3_out[2] = \<const0> ;
  assign pcierategen3_out[1] = \<const0> ;
  assign pcierategen3_out[0] = \<const0> ;
  assign pcierateidle_out[3] = \<const0> ;
  assign pcierateidle_out[2] = \<const0> ;
  assign pcierateidle_out[1] = \<const0> ;
  assign pcierateidle_out[0] = \<const0> ;
  assign pcierateqpllpd_out[7] = \<const0> ;
  assign pcierateqpllpd_out[6] = \<const0> ;
  assign pcierateqpllpd_out[5] = \<const0> ;
  assign pcierateqpllpd_out[4] = \<const0> ;
  assign pcierateqpllpd_out[3] = \<const0> ;
  assign pcierateqpllpd_out[2] = \<const0> ;
  assign pcierateqpllpd_out[1] = \<const0> ;
  assign pcierateqpllpd_out[0] = \<const0> ;
  assign pcierateqpllreset_out[7] = \<const0> ;
  assign pcierateqpllreset_out[6] = \<const0> ;
  assign pcierateqpllreset_out[5] = \<const0> ;
  assign pcierateqpllreset_out[4] = \<const0> ;
  assign pcierateqpllreset_out[3] = \<const0> ;
  assign pcierateqpllreset_out[2] = \<const0> ;
  assign pcierateqpllreset_out[1] = \<const0> ;
  assign pcierateqpllreset_out[0] = \<const0> ;
  assign pciesynctxsyncdone_out[3] = \<const0> ;
  assign pciesynctxsyncdone_out[2] = \<const0> ;
  assign pciesynctxsyncdone_out[1] = \<const0> ;
  assign pciesynctxsyncdone_out[0] = \<const0> ;
  assign pcieusergen3rdy_out[3] = \<const0> ;
  assign pcieusergen3rdy_out[2] = \<const0> ;
  assign pcieusergen3rdy_out[1] = \<const0> ;
  assign pcieusergen3rdy_out[0] = \<const0> ;
  assign pcieuserphystatusrst_out[3] = \<const0> ;
  assign pcieuserphystatusrst_out[2] = \<const0> ;
  assign pcieuserphystatusrst_out[1] = \<const0> ;
  assign pcieuserphystatusrst_out[0] = \<const0> ;
  assign pcieuserratestart_out[3] = \<const0> ;
  assign pcieuserratestart_out[2] = \<const0> ;
  assign pcieuserratestart_out[1] = \<const0> ;
  assign pcieuserratestart_out[0] = \<const0> ;
  assign pcsrsvdout_out[63] = \<const0> ;
  assign pcsrsvdout_out[62] = \<const0> ;
  assign pcsrsvdout_out[61] = \<const0> ;
  assign pcsrsvdout_out[60] = \<const0> ;
  assign pcsrsvdout_out[59] = \<const0> ;
  assign pcsrsvdout_out[58] = \<const0> ;
  assign pcsrsvdout_out[57] = \<const0> ;
  assign pcsrsvdout_out[56] = \<const0> ;
  assign pcsrsvdout_out[55] = \<const0> ;
  assign pcsrsvdout_out[54] = \<const0> ;
  assign pcsrsvdout_out[53] = \<const0> ;
  assign pcsrsvdout_out[52] = \<const0> ;
  assign pcsrsvdout_out[51] = \<const0> ;
  assign pcsrsvdout_out[50] = \<const0> ;
  assign pcsrsvdout_out[49] = \<const0> ;
  assign pcsrsvdout_out[48] = \<const0> ;
  assign pcsrsvdout_out[47] = \<const0> ;
  assign pcsrsvdout_out[46] = \<const0> ;
  assign pcsrsvdout_out[45] = \<const0> ;
  assign pcsrsvdout_out[44] = \<const0> ;
  assign pcsrsvdout_out[43] = \<const0> ;
  assign pcsrsvdout_out[42] = \<const0> ;
  assign pcsrsvdout_out[41] = \<const0> ;
  assign pcsrsvdout_out[40] = \<const0> ;
  assign pcsrsvdout_out[39] = \<const0> ;
  assign pcsrsvdout_out[38] = \<const0> ;
  assign pcsrsvdout_out[37] = \<const0> ;
  assign pcsrsvdout_out[36] = \<const0> ;
  assign pcsrsvdout_out[35] = \<const0> ;
  assign pcsrsvdout_out[34] = \<const0> ;
  assign pcsrsvdout_out[33] = \<const0> ;
  assign pcsrsvdout_out[32] = \<const0> ;
  assign pcsrsvdout_out[31] = \<const0> ;
  assign pcsrsvdout_out[30] = \<const0> ;
  assign pcsrsvdout_out[29] = \<const0> ;
  assign pcsrsvdout_out[28] = \<const0> ;
  assign pcsrsvdout_out[27] = \<const0> ;
  assign pcsrsvdout_out[26] = \<const0> ;
  assign pcsrsvdout_out[25] = \<const0> ;
  assign pcsrsvdout_out[24] = \<const0> ;
  assign pcsrsvdout_out[23] = \<const0> ;
  assign pcsrsvdout_out[22] = \<const0> ;
  assign pcsrsvdout_out[21] = \<const0> ;
  assign pcsrsvdout_out[20] = \<const0> ;
  assign pcsrsvdout_out[19] = \<const0> ;
  assign pcsrsvdout_out[18] = \<const0> ;
  assign pcsrsvdout_out[17] = \<const0> ;
  assign pcsrsvdout_out[16] = \<const0> ;
  assign pcsrsvdout_out[15] = \<const0> ;
  assign pcsrsvdout_out[14] = \<const0> ;
  assign pcsrsvdout_out[13] = \<const0> ;
  assign pcsrsvdout_out[12] = \<const0> ;
  assign pcsrsvdout_out[11] = \<const0> ;
  assign pcsrsvdout_out[10] = \<const0> ;
  assign pcsrsvdout_out[9] = \<const0> ;
  assign pcsrsvdout_out[8] = \<const0> ;
  assign pcsrsvdout_out[7] = \<const0> ;
  assign pcsrsvdout_out[6] = \<const0> ;
  assign pcsrsvdout_out[5] = \<const0> ;
  assign pcsrsvdout_out[4] = \<const0> ;
  assign pcsrsvdout_out[3] = \<const0> ;
  assign pcsrsvdout_out[2] = \<const0> ;
  assign pcsrsvdout_out[1] = \<const0> ;
  assign pcsrsvdout_out[0] = \<const0> ;
  assign phystatus_out[3] = \<const0> ;
  assign phystatus_out[2] = \<const0> ;
  assign phystatus_out[1] = \<const0> ;
  assign phystatus_out[0] = \<const0> ;
  assign pinrsrvdas_out[63] = \<const0> ;
  assign pinrsrvdas_out[62] = \<const0> ;
  assign pinrsrvdas_out[61] = \<const0> ;
  assign pinrsrvdas_out[60] = \<const0> ;
  assign pinrsrvdas_out[59] = \<const0> ;
  assign pinrsrvdas_out[58] = \<const0> ;
  assign pinrsrvdas_out[57] = \<const0> ;
  assign pinrsrvdas_out[56] = \<const0> ;
  assign pinrsrvdas_out[55] = \<const0> ;
  assign pinrsrvdas_out[54] = \<const0> ;
  assign pinrsrvdas_out[53] = \<const0> ;
  assign pinrsrvdas_out[52] = \<const0> ;
  assign pinrsrvdas_out[51] = \<const0> ;
  assign pinrsrvdas_out[50] = \<const0> ;
  assign pinrsrvdas_out[49] = \<const0> ;
  assign pinrsrvdas_out[48] = \<const0> ;
  assign pinrsrvdas_out[47] = \<const0> ;
  assign pinrsrvdas_out[46] = \<const0> ;
  assign pinrsrvdas_out[45] = \<const0> ;
  assign pinrsrvdas_out[44] = \<const0> ;
  assign pinrsrvdas_out[43] = \<const0> ;
  assign pinrsrvdas_out[42] = \<const0> ;
  assign pinrsrvdas_out[41] = \<const0> ;
  assign pinrsrvdas_out[40] = \<const0> ;
  assign pinrsrvdas_out[39] = \<const0> ;
  assign pinrsrvdas_out[38] = \<const0> ;
  assign pinrsrvdas_out[37] = \<const0> ;
  assign pinrsrvdas_out[36] = \<const0> ;
  assign pinrsrvdas_out[35] = \<const0> ;
  assign pinrsrvdas_out[34] = \<const0> ;
  assign pinrsrvdas_out[33] = \<const0> ;
  assign pinrsrvdas_out[32] = \<const0> ;
  assign pinrsrvdas_out[31] = \<const0> ;
  assign pinrsrvdas_out[30] = \<const0> ;
  assign pinrsrvdas_out[29] = \<const0> ;
  assign pinrsrvdas_out[28] = \<const0> ;
  assign pinrsrvdas_out[27] = \<const0> ;
  assign pinrsrvdas_out[26] = \<const0> ;
  assign pinrsrvdas_out[25] = \<const0> ;
  assign pinrsrvdas_out[24] = \<const0> ;
  assign pinrsrvdas_out[23] = \<const0> ;
  assign pinrsrvdas_out[22] = \<const0> ;
  assign pinrsrvdas_out[21] = \<const0> ;
  assign pinrsrvdas_out[20] = \<const0> ;
  assign pinrsrvdas_out[19] = \<const0> ;
  assign pinrsrvdas_out[18] = \<const0> ;
  assign pinrsrvdas_out[17] = \<const0> ;
  assign pinrsrvdas_out[16] = \<const0> ;
  assign pinrsrvdas_out[15] = \<const0> ;
  assign pinrsrvdas_out[14] = \<const0> ;
  assign pinrsrvdas_out[13] = \<const0> ;
  assign pinrsrvdas_out[12] = \<const0> ;
  assign pinrsrvdas_out[11] = \<const0> ;
  assign pinrsrvdas_out[10] = \<const0> ;
  assign pinrsrvdas_out[9] = \<const0> ;
  assign pinrsrvdas_out[8] = \<const0> ;
  assign pinrsrvdas_out[7] = \<const0> ;
  assign pinrsrvdas_out[6] = \<const0> ;
  assign pinrsrvdas_out[5] = \<const0> ;
  assign pinrsrvdas_out[4] = \<const0> ;
  assign pinrsrvdas_out[3] = \<const0> ;
  assign pinrsrvdas_out[2] = \<const0> ;
  assign pinrsrvdas_out[1] = \<const0> ;
  assign pinrsrvdas_out[0] = \<const0> ;
  assign pmarsvdout0_out[7] = \<const0> ;
  assign pmarsvdout0_out[6] = \<const0> ;
  assign pmarsvdout0_out[5] = \<const0> ;
  assign pmarsvdout0_out[4] = \<const0> ;
  assign pmarsvdout0_out[3] = \<const0> ;
  assign pmarsvdout0_out[2] = \<const0> ;
  assign pmarsvdout0_out[1] = \<const0> ;
  assign pmarsvdout0_out[0] = \<const0> ;
  assign pmarsvdout1_out[7] = \<const0> ;
  assign pmarsvdout1_out[6] = \<const0> ;
  assign pmarsvdout1_out[5] = \<const0> ;
  assign pmarsvdout1_out[4] = \<const0> ;
  assign pmarsvdout1_out[3] = \<const0> ;
  assign pmarsvdout1_out[2] = \<const0> ;
  assign pmarsvdout1_out[1] = \<const0> ;
  assign pmarsvdout1_out[0] = \<const0> ;
  assign powerpresent_out[3] = \<const0> ;
  assign powerpresent_out[2] = \<const0> ;
  assign powerpresent_out[1] = \<const0> ;
  assign powerpresent_out[0] = \<const0> ;
  assign qpll0fbclklost_out[0] = \<const0> ;
  assign qpll0lock_out[0] = \<const0> ;
  assign qpll0outclk_out[0] = \<const0> ;
  assign qpll0outrefclk_out[0] = \<const0> ;
  assign qpll0refclklost_out[0] = \<const0> ;
  assign qpll1fbclklost_out[0] = \<const0> ;
  assign qpll1lock_out[0] = \<const0> ;
  assign qpll1outclk_out[0] = \<const0> ;
  assign qpll1outrefclk_out[0] = \<const0> ;
  assign qpll1refclklost_out[0] = \<const0> ;
  assign qplldmonitor0_out[7] = \<const0> ;
  assign qplldmonitor0_out[6] = \<const0> ;
  assign qplldmonitor0_out[5] = \<const0> ;
  assign qplldmonitor0_out[4] = \<const0> ;
  assign qplldmonitor0_out[3] = \<const0> ;
  assign qplldmonitor0_out[2] = \<const0> ;
  assign qplldmonitor0_out[1] = \<const0> ;
  assign qplldmonitor0_out[0] = \<const0> ;
  assign qplldmonitor1_out[7] = \<const0> ;
  assign qplldmonitor1_out[6] = \<const0> ;
  assign qplldmonitor1_out[5] = \<const0> ;
  assign qplldmonitor1_out[4] = \<const0> ;
  assign qplldmonitor1_out[3] = \<const0> ;
  assign qplldmonitor1_out[2] = \<const0> ;
  assign qplldmonitor1_out[1] = \<const0> ;
  assign qplldmonitor1_out[0] = \<const0> ;
  assign refclkoutmonitor0_out[0] = \<const0> ;
  assign refclkoutmonitor1_out[0] = \<const0> ;
  assign resetexception_out[3] = \<const0> ;
  assign resetexception_out[2] = \<const0> ;
  assign resetexception_out[1] = \<const0> ;
  assign resetexception_out[0] = \<const0> ;
  assign rxbufstatus_out[11] = \^rxbufstatus_out [11];
  assign rxbufstatus_out[10] = \<const0> ;
  assign rxbufstatus_out[9] = \<const0> ;
  assign rxbufstatus_out[8] = \^rxbufstatus_out [8];
  assign rxbufstatus_out[7] = \<const0> ;
  assign rxbufstatus_out[6] = \<const0> ;
  assign rxbufstatus_out[5] = \^rxbufstatus_out [5];
  assign rxbufstatus_out[4] = \<const0> ;
  assign rxbufstatus_out[3] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxbyteisaligned_out[3] = \<const0> ;
  assign rxbyteisaligned_out[2] = \<const0> ;
  assign rxbyteisaligned_out[1] = \<const0> ;
  assign rxbyteisaligned_out[0] = \<const0> ;
  assign rxbyterealign_out[3] = \<const0> ;
  assign rxbyterealign_out[2] = \<const0> ;
  assign rxbyterealign_out[1] = \<const0> ;
  assign rxbyterealign_out[0] = \<const0> ;
  assign rxcdrlock_out[3] = \<const0> ;
  assign rxcdrlock_out[2] = \<const0> ;
  assign rxcdrlock_out[1] = \<const0> ;
  assign rxcdrlock_out[0] = \<const0> ;
  assign rxcdrphdone_out[3] = \<const0> ;
  assign rxcdrphdone_out[2] = \<const0> ;
  assign rxcdrphdone_out[1] = \<const0> ;
  assign rxcdrphdone_out[0] = \<const0> ;
  assign rxchanbondseq_out[3] = \<const0> ;
  assign rxchanbondseq_out[2] = \<const0> ;
  assign rxchanbondseq_out[1] = \<const0> ;
  assign rxchanbondseq_out[0] = \<const0> ;
  assign rxchanisaligned_out[3] = \<const0> ;
  assign rxchanisaligned_out[2] = \<const0> ;
  assign rxchanisaligned_out[1] = \<const0> ;
  assign rxchanisaligned_out[0] = \<const0> ;
  assign rxchanrealign_out[3] = \<const0> ;
  assign rxchanrealign_out[2] = \<const0> ;
  assign rxchanrealign_out[1] = \<const0> ;
  assign rxchanrealign_out[0] = \<const0> ;
  assign rxchbondo_out[19] = \<const0> ;
  assign rxchbondo_out[18] = \<const0> ;
  assign rxchbondo_out[17] = \<const0> ;
  assign rxchbondo_out[16] = \<const0> ;
  assign rxchbondo_out[15] = \<const0> ;
  assign rxchbondo_out[14] = \<const0> ;
  assign rxchbondo_out[13] = \<const0> ;
  assign rxchbondo_out[12] = \<const0> ;
  assign rxchbondo_out[11] = \<const0> ;
  assign rxchbondo_out[10] = \<const0> ;
  assign rxchbondo_out[9] = \<const0> ;
  assign rxchbondo_out[8] = \<const0> ;
  assign rxchbondo_out[7] = \<const0> ;
  assign rxchbondo_out[6] = \<const0> ;
  assign rxchbondo_out[5] = \<const0> ;
  assign rxchbondo_out[4] = \<const0> ;
  assign rxchbondo_out[3] = \<const0> ;
  assign rxchbondo_out[2] = \<const0> ;
  assign rxchbondo_out[1] = \<const0> ;
  assign rxchbondo_out[0] = \<const0> ;
  assign rxckcaldone_out[3] = \<const0> ;
  assign rxckcaldone_out[2] = \<const0> ;
  assign rxckcaldone_out[1] = \<const0> ;
  assign rxckcaldone_out[0] = \<const0> ;
  assign rxclkcorcnt_out[7] = \<const0> ;
  assign rxclkcorcnt_out[6] = \<const0> ;
  assign rxclkcorcnt_out[5] = \<const0> ;
  assign rxclkcorcnt_out[4] = \<const0> ;
  assign rxclkcorcnt_out[3] = \<const0> ;
  assign rxclkcorcnt_out[2] = \<const0> ;
  assign rxclkcorcnt_out[1] = \<const0> ;
  assign rxclkcorcnt_out[0] = \<const0> ;
  assign rxcominitdet_out[3] = \<const0> ;
  assign rxcominitdet_out[2] = \<const0> ;
  assign rxcominitdet_out[1] = \<const0> ;
  assign rxcominitdet_out[0] = \<const0> ;
  assign rxcommadet_out[3] = \<const0> ;
  assign rxcommadet_out[2] = \<const0> ;
  assign rxcommadet_out[1] = \<const0> ;
  assign rxcommadet_out[0] = \<const0> ;
  assign rxcomsasdet_out[3] = \<const0> ;
  assign rxcomsasdet_out[2] = \<const0> ;
  assign rxcomsasdet_out[1] = \<const0> ;
  assign rxcomsasdet_out[0] = \<const0> ;
  assign rxcomwakedet_out[3] = \<const0> ;
  assign rxcomwakedet_out[2] = \<const0> ;
  assign rxcomwakedet_out[1] = \<const0> ;
  assign rxcomwakedet_out[0] = \<const0> ;
  assign rxctrl0_out[63] = \<const0> ;
  assign rxctrl0_out[62] = \<const0> ;
  assign rxctrl0_out[61] = \<const0> ;
  assign rxctrl0_out[60] = \<const0> ;
  assign rxctrl0_out[59] = \<const0> ;
  assign rxctrl0_out[58] = \<const0> ;
  assign rxctrl0_out[57] = \<const0> ;
  assign rxctrl0_out[56] = \<const0> ;
  assign rxctrl0_out[55] = \<const0> ;
  assign rxctrl0_out[54] = \<const0> ;
  assign rxctrl0_out[53] = \<const0> ;
  assign rxctrl0_out[52] = \<const0> ;
  assign rxctrl0_out[51] = \<const0> ;
  assign rxctrl0_out[50] = \<const0> ;
  assign rxctrl0_out[49] = \<const0> ;
  assign rxctrl0_out[48] = \<const0> ;
  assign rxctrl0_out[47] = \<const0> ;
  assign rxctrl0_out[46] = \<const0> ;
  assign rxctrl0_out[45] = \<const0> ;
  assign rxctrl0_out[44] = \<const0> ;
  assign rxctrl0_out[43] = \<const0> ;
  assign rxctrl0_out[42] = \<const0> ;
  assign rxctrl0_out[41] = \<const0> ;
  assign rxctrl0_out[40] = \<const0> ;
  assign rxctrl0_out[39] = \<const0> ;
  assign rxctrl0_out[38] = \<const0> ;
  assign rxctrl0_out[37] = \<const0> ;
  assign rxctrl0_out[36] = \<const0> ;
  assign rxctrl0_out[35] = \<const0> ;
  assign rxctrl0_out[34] = \<const0> ;
  assign rxctrl0_out[33] = \<const0> ;
  assign rxctrl0_out[32] = \<const0> ;
  assign rxctrl0_out[31] = \<const0> ;
  assign rxctrl0_out[30] = \<const0> ;
  assign rxctrl0_out[29] = \<const0> ;
  assign rxctrl0_out[28] = \<const0> ;
  assign rxctrl0_out[27] = \<const0> ;
  assign rxctrl0_out[26] = \<const0> ;
  assign rxctrl0_out[25] = \<const0> ;
  assign rxctrl0_out[24] = \<const0> ;
  assign rxctrl0_out[23] = \<const0> ;
  assign rxctrl0_out[22] = \<const0> ;
  assign rxctrl0_out[21] = \<const0> ;
  assign rxctrl0_out[20] = \<const0> ;
  assign rxctrl0_out[19] = \<const0> ;
  assign rxctrl0_out[18] = \<const0> ;
  assign rxctrl0_out[17] = \<const0> ;
  assign rxctrl0_out[16] = \<const0> ;
  assign rxctrl0_out[15] = \<const0> ;
  assign rxctrl0_out[14] = \<const0> ;
  assign rxctrl0_out[13] = \<const0> ;
  assign rxctrl0_out[12] = \<const0> ;
  assign rxctrl0_out[11] = \<const0> ;
  assign rxctrl0_out[10] = \<const0> ;
  assign rxctrl0_out[9] = \<const0> ;
  assign rxctrl0_out[8] = \<const0> ;
  assign rxctrl0_out[7] = \<const0> ;
  assign rxctrl0_out[6] = \<const0> ;
  assign rxctrl0_out[5] = \<const0> ;
  assign rxctrl0_out[4] = \<const0> ;
  assign rxctrl0_out[3] = \<const0> ;
  assign rxctrl0_out[2] = \<const0> ;
  assign rxctrl0_out[1] = \<const0> ;
  assign rxctrl0_out[0] = \<const0> ;
  assign rxctrl1_out[63] = \<const0> ;
  assign rxctrl1_out[62] = \<const0> ;
  assign rxctrl1_out[61] = \<const0> ;
  assign rxctrl1_out[60] = \<const0> ;
  assign rxctrl1_out[59] = \<const0> ;
  assign rxctrl1_out[58] = \<const0> ;
  assign rxctrl1_out[57] = \<const0> ;
  assign rxctrl1_out[56] = \<const0> ;
  assign rxctrl1_out[55] = \<const0> ;
  assign rxctrl1_out[54] = \<const0> ;
  assign rxctrl1_out[53] = \<const0> ;
  assign rxctrl1_out[52] = \<const0> ;
  assign rxctrl1_out[51] = \<const0> ;
  assign rxctrl1_out[50] = \<const0> ;
  assign rxctrl1_out[49] = \<const0> ;
  assign rxctrl1_out[48] = \<const0> ;
  assign rxctrl1_out[47] = \<const0> ;
  assign rxctrl1_out[46] = \<const0> ;
  assign rxctrl1_out[45] = \<const0> ;
  assign rxctrl1_out[44] = \<const0> ;
  assign rxctrl1_out[43] = \<const0> ;
  assign rxctrl1_out[42] = \<const0> ;
  assign rxctrl1_out[41] = \<const0> ;
  assign rxctrl1_out[40] = \<const0> ;
  assign rxctrl1_out[39] = \<const0> ;
  assign rxctrl1_out[38] = \<const0> ;
  assign rxctrl1_out[37] = \<const0> ;
  assign rxctrl1_out[36] = \<const0> ;
  assign rxctrl1_out[35] = \<const0> ;
  assign rxctrl1_out[34] = \<const0> ;
  assign rxctrl1_out[33] = \<const0> ;
  assign rxctrl1_out[32] = \<const0> ;
  assign rxctrl1_out[31] = \<const0> ;
  assign rxctrl1_out[30] = \<const0> ;
  assign rxctrl1_out[29] = \<const0> ;
  assign rxctrl1_out[28] = \<const0> ;
  assign rxctrl1_out[27] = \<const0> ;
  assign rxctrl1_out[26] = \<const0> ;
  assign rxctrl1_out[25] = \<const0> ;
  assign rxctrl1_out[24] = \<const0> ;
  assign rxctrl1_out[23] = \<const0> ;
  assign rxctrl1_out[22] = \<const0> ;
  assign rxctrl1_out[21] = \<const0> ;
  assign rxctrl1_out[20] = \<const0> ;
  assign rxctrl1_out[19] = \<const0> ;
  assign rxctrl1_out[18] = \<const0> ;
  assign rxctrl1_out[17] = \<const0> ;
  assign rxctrl1_out[16] = \<const0> ;
  assign rxctrl1_out[15] = \<const0> ;
  assign rxctrl1_out[14] = \<const0> ;
  assign rxctrl1_out[13] = \<const0> ;
  assign rxctrl1_out[12] = \<const0> ;
  assign rxctrl1_out[11] = \<const0> ;
  assign rxctrl1_out[10] = \<const0> ;
  assign rxctrl1_out[9] = \<const0> ;
  assign rxctrl1_out[8] = \<const0> ;
  assign rxctrl1_out[7] = \<const0> ;
  assign rxctrl1_out[6] = \<const0> ;
  assign rxctrl1_out[5] = \<const0> ;
  assign rxctrl1_out[4] = \<const0> ;
  assign rxctrl1_out[3] = \<const0> ;
  assign rxctrl1_out[2] = \<const0> ;
  assign rxctrl1_out[1] = \<const0> ;
  assign rxctrl1_out[0] = \<const0> ;
  assign rxctrl2_out[31] = \<const0> ;
  assign rxctrl2_out[30] = \<const0> ;
  assign rxctrl2_out[29] = \<const0> ;
  assign rxctrl2_out[28] = \<const0> ;
  assign rxctrl2_out[27] = \<const0> ;
  assign rxctrl2_out[26] = \<const0> ;
  assign rxctrl2_out[25] = \<const0> ;
  assign rxctrl2_out[24] = \<const0> ;
  assign rxctrl2_out[23] = \<const0> ;
  assign rxctrl2_out[22] = \<const0> ;
  assign rxctrl2_out[21] = \<const0> ;
  assign rxctrl2_out[20] = \<const0> ;
  assign rxctrl2_out[19] = \<const0> ;
  assign rxctrl2_out[18] = \<const0> ;
  assign rxctrl2_out[17] = \<const0> ;
  assign rxctrl2_out[16] = \<const0> ;
  assign rxctrl2_out[15] = \<const0> ;
  assign rxctrl2_out[14] = \<const0> ;
  assign rxctrl2_out[13] = \<const0> ;
  assign rxctrl2_out[12] = \<const0> ;
  assign rxctrl2_out[11] = \<const0> ;
  assign rxctrl2_out[10] = \<const0> ;
  assign rxctrl2_out[9] = \<const0> ;
  assign rxctrl2_out[8] = \<const0> ;
  assign rxctrl2_out[7] = \<const0> ;
  assign rxctrl2_out[6] = \<const0> ;
  assign rxctrl2_out[5] = \<const0> ;
  assign rxctrl2_out[4] = \<const0> ;
  assign rxctrl2_out[3] = \<const0> ;
  assign rxctrl2_out[2] = \<const0> ;
  assign rxctrl2_out[1] = \<const0> ;
  assign rxctrl2_out[0] = \<const0> ;
  assign rxctrl3_out[31] = \<const0> ;
  assign rxctrl3_out[30] = \<const0> ;
  assign rxctrl3_out[29] = \<const0> ;
  assign rxctrl3_out[28] = \<const0> ;
  assign rxctrl3_out[27] = \<const0> ;
  assign rxctrl3_out[26] = \<const0> ;
  assign rxctrl3_out[25] = \<const0> ;
  assign rxctrl3_out[24] = \<const0> ;
  assign rxctrl3_out[23] = \<const0> ;
  assign rxctrl3_out[22] = \<const0> ;
  assign rxctrl3_out[21] = \<const0> ;
  assign rxctrl3_out[20] = \<const0> ;
  assign rxctrl3_out[19] = \<const0> ;
  assign rxctrl3_out[18] = \<const0> ;
  assign rxctrl3_out[17] = \<const0> ;
  assign rxctrl3_out[16] = \<const0> ;
  assign rxctrl3_out[15] = \<const0> ;
  assign rxctrl3_out[14] = \<const0> ;
  assign rxctrl3_out[13] = \<const0> ;
  assign rxctrl3_out[12] = \<const0> ;
  assign rxctrl3_out[11] = \<const0> ;
  assign rxctrl3_out[10] = \<const0> ;
  assign rxctrl3_out[9] = \<const0> ;
  assign rxctrl3_out[8] = \<const0> ;
  assign rxctrl3_out[7] = \<const0> ;
  assign rxctrl3_out[6] = \<const0> ;
  assign rxctrl3_out[5] = \<const0> ;
  assign rxctrl3_out[4] = \<const0> ;
  assign rxctrl3_out[3] = \<const0> ;
  assign rxctrl3_out[2] = \<const0> ;
  assign rxctrl3_out[1] = \<const0> ;
  assign rxctrl3_out[0] = \<const0> ;
  assign rxdata_out[511] = \<const0> ;
  assign rxdata_out[510] = \<const0> ;
  assign rxdata_out[509] = \<const0> ;
  assign rxdata_out[508] = \<const0> ;
  assign rxdata_out[507] = \<const0> ;
  assign rxdata_out[506] = \<const0> ;
  assign rxdata_out[505] = \<const0> ;
  assign rxdata_out[504] = \<const0> ;
  assign rxdata_out[503] = \<const0> ;
  assign rxdata_out[502] = \<const0> ;
  assign rxdata_out[501] = \<const0> ;
  assign rxdata_out[500] = \<const0> ;
  assign rxdata_out[499] = \<const0> ;
  assign rxdata_out[498] = \<const0> ;
  assign rxdata_out[497] = \<const0> ;
  assign rxdata_out[496] = \<const0> ;
  assign rxdata_out[495] = \<const0> ;
  assign rxdata_out[494] = \<const0> ;
  assign rxdata_out[493] = \<const0> ;
  assign rxdata_out[492] = \<const0> ;
  assign rxdata_out[491] = \<const0> ;
  assign rxdata_out[490] = \<const0> ;
  assign rxdata_out[489] = \<const0> ;
  assign rxdata_out[488] = \<const0> ;
  assign rxdata_out[487] = \<const0> ;
  assign rxdata_out[486] = \<const0> ;
  assign rxdata_out[485] = \<const0> ;
  assign rxdata_out[484] = \<const0> ;
  assign rxdata_out[483] = \<const0> ;
  assign rxdata_out[482] = \<const0> ;
  assign rxdata_out[481] = \<const0> ;
  assign rxdata_out[480] = \<const0> ;
  assign rxdata_out[479] = \<const0> ;
  assign rxdata_out[478] = \<const0> ;
  assign rxdata_out[477] = \<const0> ;
  assign rxdata_out[476] = \<const0> ;
  assign rxdata_out[475] = \<const0> ;
  assign rxdata_out[474] = \<const0> ;
  assign rxdata_out[473] = \<const0> ;
  assign rxdata_out[472] = \<const0> ;
  assign rxdata_out[471] = \<const0> ;
  assign rxdata_out[470] = \<const0> ;
  assign rxdata_out[469] = \<const0> ;
  assign rxdata_out[468] = \<const0> ;
  assign rxdata_out[467] = \<const0> ;
  assign rxdata_out[466] = \<const0> ;
  assign rxdata_out[465] = \<const0> ;
  assign rxdata_out[464] = \<const0> ;
  assign rxdata_out[463] = \<const0> ;
  assign rxdata_out[462] = \<const0> ;
  assign rxdata_out[461] = \<const0> ;
  assign rxdata_out[460] = \<const0> ;
  assign rxdata_out[459] = \<const0> ;
  assign rxdata_out[458] = \<const0> ;
  assign rxdata_out[457] = \<const0> ;
  assign rxdata_out[456] = \<const0> ;
  assign rxdata_out[455] = \<const0> ;
  assign rxdata_out[454] = \<const0> ;
  assign rxdata_out[453] = \<const0> ;
  assign rxdata_out[452] = \<const0> ;
  assign rxdata_out[451] = \<const0> ;
  assign rxdata_out[450] = \<const0> ;
  assign rxdata_out[449] = \<const0> ;
  assign rxdata_out[448] = \<const0> ;
  assign rxdata_out[447] = \<const0> ;
  assign rxdata_out[446] = \<const0> ;
  assign rxdata_out[445] = \<const0> ;
  assign rxdata_out[444] = \<const0> ;
  assign rxdata_out[443] = \<const0> ;
  assign rxdata_out[442] = \<const0> ;
  assign rxdata_out[441] = \<const0> ;
  assign rxdata_out[440] = \<const0> ;
  assign rxdata_out[439] = \<const0> ;
  assign rxdata_out[438] = \<const0> ;
  assign rxdata_out[437] = \<const0> ;
  assign rxdata_out[436] = \<const0> ;
  assign rxdata_out[435] = \<const0> ;
  assign rxdata_out[434] = \<const0> ;
  assign rxdata_out[433] = \<const0> ;
  assign rxdata_out[432] = \<const0> ;
  assign rxdata_out[431] = \<const0> ;
  assign rxdata_out[430] = \<const0> ;
  assign rxdata_out[429] = \<const0> ;
  assign rxdata_out[428] = \<const0> ;
  assign rxdata_out[427] = \<const0> ;
  assign rxdata_out[426] = \<const0> ;
  assign rxdata_out[425] = \<const0> ;
  assign rxdata_out[424] = \<const0> ;
  assign rxdata_out[423] = \<const0> ;
  assign rxdata_out[422] = \<const0> ;
  assign rxdata_out[421] = \<const0> ;
  assign rxdata_out[420] = \<const0> ;
  assign rxdata_out[419] = \<const0> ;
  assign rxdata_out[418] = \<const0> ;
  assign rxdata_out[417] = \<const0> ;
  assign rxdata_out[416] = \<const0> ;
  assign rxdata_out[415] = \<const0> ;
  assign rxdata_out[414] = \<const0> ;
  assign rxdata_out[413] = \<const0> ;
  assign rxdata_out[412] = \<const0> ;
  assign rxdata_out[411] = \<const0> ;
  assign rxdata_out[410] = \<const0> ;
  assign rxdata_out[409] = \<const0> ;
  assign rxdata_out[408] = \<const0> ;
  assign rxdata_out[407] = \<const0> ;
  assign rxdata_out[406] = \<const0> ;
  assign rxdata_out[405] = \<const0> ;
  assign rxdata_out[404] = \<const0> ;
  assign rxdata_out[403] = \<const0> ;
  assign rxdata_out[402] = \<const0> ;
  assign rxdata_out[401] = \<const0> ;
  assign rxdata_out[400] = \<const0> ;
  assign rxdata_out[399] = \<const0> ;
  assign rxdata_out[398] = \<const0> ;
  assign rxdata_out[397] = \<const0> ;
  assign rxdata_out[396] = \<const0> ;
  assign rxdata_out[395] = \<const0> ;
  assign rxdata_out[394] = \<const0> ;
  assign rxdata_out[393] = \<const0> ;
  assign rxdata_out[392] = \<const0> ;
  assign rxdata_out[391] = \<const0> ;
  assign rxdata_out[390] = \<const0> ;
  assign rxdata_out[389] = \<const0> ;
  assign rxdata_out[388] = \<const0> ;
  assign rxdata_out[387] = \<const0> ;
  assign rxdata_out[386] = \<const0> ;
  assign rxdata_out[385] = \<const0> ;
  assign rxdata_out[384] = \<const0> ;
  assign rxdata_out[383] = \<const0> ;
  assign rxdata_out[382] = \<const0> ;
  assign rxdata_out[381] = \<const0> ;
  assign rxdata_out[380] = \<const0> ;
  assign rxdata_out[379] = \<const0> ;
  assign rxdata_out[378] = \<const0> ;
  assign rxdata_out[377] = \<const0> ;
  assign rxdata_out[376] = \<const0> ;
  assign rxdata_out[375] = \<const0> ;
  assign rxdata_out[374] = \<const0> ;
  assign rxdata_out[373] = \<const0> ;
  assign rxdata_out[372] = \<const0> ;
  assign rxdata_out[371] = \<const0> ;
  assign rxdata_out[370] = \<const0> ;
  assign rxdata_out[369] = \<const0> ;
  assign rxdata_out[368] = \<const0> ;
  assign rxdata_out[367] = \<const0> ;
  assign rxdata_out[366] = \<const0> ;
  assign rxdata_out[365] = \<const0> ;
  assign rxdata_out[364] = \<const0> ;
  assign rxdata_out[363] = \<const0> ;
  assign rxdata_out[362] = \<const0> ;
  assign rxdata_out[361] = \<const0> ;
  assign rxdata_out[360] = \<const0> ;
  assign rxdata_out[359] = \<const0> ;
  assign rxdata_out[358] = \<const0> ;
  assign rxdata_out[357] = \<const0> ;
  assign rxdata_out[356] = \<const0> ;
  assign rxdata_out[355] = \<const0> ;
  assign rxdata_out[354] = \<const0> ;
  assign rxdata_out[353] = \<const0> ;
  assign rxdata_out[352] = \<const0> ;
  assign rxdata_out[351] = \<const0> ;
  assign rxdata_out[350] = \<const0> ;
  assign rxdata_out[349] = \<const0> ;
  assign rxdata_out[348] = \<const0> ;
  assign rxdata_out[347] = \<const0> ;
  assign rxdata_out[346] = \<const0> ;
  assign rxdata_out[345] = \<const0> ;
  assign rxdata_out[344] = \<const0> ;
  assign rxdata_out[343] = \<const0> ;
  assign rxdata_out[342] = \<const0> ;
  assign rxdata_out[341] = \<const0> ;
  assign rxdata_out[340] = \<const0> ;
  assign rxdata_out[339] = \<const0> ;
  assign rxdata_out[338] = \<const0> ;
  assign rxdata_out[337] = \<const0> ;
  assign rxdata_out[336] = \<const0> ;
  assign rxdata_out[335] = \<const0> ;
  assign rxdata_out[334] = \<const0> ;
  assign rxdata_out[333] = \<const0> ;
  assign rxdata_out[332] = \<const0> ;
  assign rxdata_out[331] = \<const0> ;
  assign rxdata_out[330] = \<const0> ;
  assign rxdata_out[329] = \<const0> ;
  assign rxdata_out[328] = \<const0> ;
  assign rxdata_out[327] = \<const0> ;
  assign rxdata_out[326] = \<const0> ;
  assign rxdata_out[325] = \<const0> ;
  assign rxdata_out[324] = \<const0> ;
  assign rxdata_out[323] = \<const0> ;
  assign rxdata_out[322] = \<const0> ;
  assign rxdata_out[321] = \<const0> ;
  assign rxdata_out[320] = \<const0> ;
  assign rxdata_out[319] = \<const0> ;
  assign rxdata_out[318] = \<const0> ;
  assign rxdata_out[317] = \<const0> ;
  assign rxdata_out[316] = \<const0> ;
  assign rxdata_out[315] = \<const0> ;
  assign rxdata_out[314] = \<const0> ;
  assign rxdata_out[313] = \<const0> ;
  assign rxdata_out[312] = \<const0> ;
  assign rxdata_out[311] = \<const0> ;
  assign rxdata_out[310] = \<const0> ;
  assign rxdata_out[309] = \<const0> ;
  assign rxdata_out[308] = \<const0> ;
  assign rxdata_out[307] = \<const0> ;
  assign rxdata_out[306] = \<const0> ;
  assign rxdata_out[305] = \<const0> ;
  assign rxdata_out[304] = \<const0> ;
  assign rxdata_out[303] = \<const0> ;
  assign rxdata_out[302] = \<const0> ;
  assign rxdata_out[301] = \<const0> ;
  assign rxdata_out[300] = \<const0> ;
  assign rxdata_out[299] = \<const0> ;
  assign rxdata_out[298] = \<const0> ;
  assign rxdata_out[297] = \<const0> ;
  assign rxdata_out[296] = \<const0> ;
  assign rxdata_out[295] = \<const0> ;
  assign rxdata_out[294] = \<const0> ;
  assign rxdata_out[293] = \<const0> ;
  assign rxdata_out[292] = \<const0> ;
  assign rxdata_out[291] = \<const0> ;
  assign rxdata_out[290] = \<const0> ;
  assign rxdata_out[289] = \<const0> ;
  assign rxdata_out[288] = \<const0> ;
  assign rxdata_out[287] = \<const0> ;
  assign rxdata_out[286] = \<const0> ;
  assign rxdata_out[285] = \<const0> ;
  assign rxdata_out[284] = \<const0> ;
  assign rxdata_out[283] = \<const0> ;
  assign rxdata_out[282] = \<const0> ;
  assign rxdata_out[281] = \<const0> ;
  assign rxdata_out[280] = \<const0> ;
  assign rxdata_out[279] = \<const0> ;
  assign rxdata_out[278] = \<const0> ;
  assign rxdata_out[277] = \<const0> ;
  assign rxdata_out[276] = \<const0> ;
  assign rxdata_out[275] = \<const0> ;
  assign rxdata_out[274] = \<const0> ;
  assign rxdata_out[273] = \<const0> ;
  assign rxdata_out[272] = \<const0> ;
  assign rxdata_out[271] = \<const0> ;
  assign rxdata_out[270] = \<const0> ;
  assign rxdata_out[269] = \<const0> ;
  assign rxdata_out[268] = \<const0> ;
  assign rxdata_out[267] = \<const0> ;
  assign rxdata_out[266] = \<const0> ;
  assign rxdata_out[265] = \<const0> ;
  assign rxdata_out[264] = \<const0> ;
  assign rxdata_out[263] = \<const0> ;
  assign rxdata_out[262] = \<const0> ;
  assign rxdata_out[261] = \<const0> ;
  assign rxdata_out[260] = \<const0> ;
  assign rxdata_out[259] = \<const0> ;
  assign rxdata_out[258] = \<const0> ;
  assign rxdata_out[257] = \<const0> ;
  assign rxdata_out[256] = \<const0> ;
  assign rxdata_out[255] = \<const0> ;
  assign rxdata_out[254] = \<const0> ;
  assign rxdata_out[253] = \<const0> ;
  assign rxdata_out[252] = \<const0> ;
  assign rxdata_out[251] = \<const0> ;
  assign rxdata_out[250] = \<const0> ;
  assign rxdata_out[249] = \<const0> ;
  assign rxdata_out[248] = \<const0> ;
  assign rxdata_out[247] = \<const0> ;
  assign rxdata_out[246] = \<const0> ;
  assign rxdata_out[245] = \<const0> ;
  assign rxdata_out[244] = \<const0> ;
  assign rxdata_out[243] = \<const0> ;
  assign rxdata_out[242] = \<const0> ;
  assign rxdata_out[241] = \<const0> ;
  assign rxdata_out[240] = \<const0> ;
  assign rxdata_out[239] = \<const0> ;
  assign rxdata_out[238] = \<const0> ;
  assign rxdata_out[237] = \<const0> ;
  assign rxdata_out[236] = \<const0> ;
  assign rxdata_out[235] = \<const0> ;
  assign rxdata_out[234] = \<const0> ;
  assign rxdata_out[233] = \<const0> ;
  assign rxdata_out[232] = \<const0> ;
  assign rxdata_out[231] = \<const0> ;
  assign rxdata_out[230] = \<const0> ;
  assign rxdata_out[229] = \<const0> ;
  assign rxdata_out[228] = \<const0> ;
  assign rxdata_out[227] = \<const0> ;
  assign rxdata_out[226] = \<const0> ;
  assign rxdata_out[225] = \<const0> ;
  assign rxdata_out[224] = \<const0> ;
  assign rxdata_out[223] = \<const0> ;
  assign rxdata_out[222] = \<const0> ;
  assign rxdata_out[221] = \<const0> ;
  assign rxdata_out[220] = \<const0> ;
  assign rxdata_out[219] = \<const0> ;
  assign rxdata_out[218] = \<const0> ;
  assign rxdata_out[217] = \<const0> ;
  assign rxdata_out[216] = \<const0> ;
  assign rxdata_out[215] = \<const0> ;
  assign rxdata_out[214] = \<const0> ;
  assign rxdata_out[213] = \<const0> ;
  assign rxdata_out[212] = \<const0> ;
  assign rxdata_out[211] = \<const0> ;
  assign rxdata_out[210] = \<const0> ;
  assign rxdata_out[209] = \<const0> ;
  assign rxdata_out[208] = \<const0> ;
  assign rxdata_out[207] = \<const0> ;
  assign rxdata_out[206] = \<const0> ;
  assign rxdata_out[205] = \<const0> ;
  assign rxdata_out[204] = \<const0> ;
  assign rxdata_out[203] = \<const0> ;
  assign rxdata_out[202] = \<const0> ;
  assign rxdata_out[201] = \<const0> ;
  assign rxdata_out[200] = \<const0> ;
  assign rxdata_out[199] = \<const0> ;
  assign rxdata_out[198] = \<const0> ;
  assign rxdata_out[197] = \<const0> ;
  assign rxdata_out[196] = \<const0> ;
  assign rxdata_out[195] = \<const0> ;
  assign rxdata_out[194] = \<const0> ;
  assign rxdata_out[193] = \<const0> ;
  assign rxdata_out[192] = \<const0> ;
  assign rxdata_out[191] = \<const0> ;
  assign rxdata_out[190] = \<const0> ;
  assign rxdata_out[189] = \<const0> ;
  assign rxdata_out[188] = \<const0> ;
  assign rxdata_out[187] = \<const0> ;
  assign rxdata_out[186] = \<const0> ;
  assign rxdata_out[185] = \<const0> ;
  assign rxdata_out[184] = \<const0> ;
  assign rxdata_out[183] = \<const0> ;
  assign rxdata_out[182] = \<const0> ;
  assign rxdata_out[181] = \<const0> ;
  assign rxdata_out[180] = \<const0> ;
  assign rxdata_out[179] = \<const0> ;
  assign rxdata_out[178] = \<const0> ;
  assign rxdata_out[177] = \<const0> ;
  assign rxdata_out[176] = \<const0> ;
  assign rxdata_out[175] = \<const0> ;
  assign rxdata_out[174] = \<const0> ;
  assign rxdata_out[173] = \<const0> ;
  assign rxdata_out[172] = \<const0> ;
  assign rxdata_out[171] = \<const0> ;
  assign rxdata_out[170] = \<const0> ;
  assign rxdata_out[169] = \<const0> ;
  assign rxdata_out[168] = \<const0> ;
  assign rxdata_out[167] = \<const0> ;
  assign rxdata_out[166] = \<const0> ;
  assign rxdata_out[165] = \<const0> ;
  assign rxdata_out[164] = \<const0> ;
  assign rxdata_out[163] = \<const0> ;
  assign rxdata_out[162] = \<const0> ;
  assign rxdata_out[161] = \<const0> ;
  assign rxdata_out[160] = \<const0> ;
  assign rxdata_out[159] = \<const0> ;
  assign rxdata_out[158] = \<const0> ;
  assign rxdata_out[157] = \<const0> ;
  assign rxdata_out[156] = \<const0> ;
  assign rxdata_out[155] = \<const0> ;
  assign rxdata_out[154] = \<const0> ;
  assign rxdata_out[153] = \<const0> ;
  assign rxdata_out[152] = \<const0> ;
  assign rxdata_out[151] = \<const0> ;
  assign rxdata_out[150] = \<const0> ;
  assign rxdata_out[149] = \<const0> ;
  assign rxdata_out[148] = \<const0> ;
  assign rxdata_out[147] = \<const0> ;
  assign rxdata_out[146] = \<const0> ;
  assign rxdata_out[145] = \<const0> ;
  assign rxdata_out[144] = \<const0> ;
  assign rxdata_out[143] = \<const0> ;
  assign rxdata_out[142] = \<const0> ;
  assign rxdata_out[141] = \<const0> ;
  assign rxdata_out[140] = \<const0> ;
  assign rxdata_out[139] = \<const0> ;
  assign rxdata_out[138] = \<const0> ;
  assign rxdata_out[137] = \<const0> ;
  assign rxdata_out[136] = \<const0> ;
  assign rxdata_out[135] = \<const0> ;
  assign rxdata_out[134] = \<const0> ;
  assign rxdata_out[133] = \<const0> ;
  assign rxdata_out[132] = \<const0> ;
  assign rxdata_out[131] = \<const0> ;
  assign rxdata_out[130] = \<const0> ;
  assign rxdata_out[129] = \<const0> ;
  assign rxdata_out[128] = \<const0> ;
  assign rxdata_out[127] = \<const0> ;
  assign rxdata_out[126] = \<const0> ;
  assign rxdata_out[125] = \<const0> ;
  assign rxdata_out[124] = \<const0> ;
  assign rxdata_out[123] = \<const0> ;
  assign rxdata_out[122] = \<const0> ;
  assign rxdata_out[121] = \<const0> ;
  assign rxdata_out[120] = \<const0> ;
  assign rxdata_out[119] = \<const0> ;
  assign rxdata_out[118] = \<const0> ;
  assign rxdata_out[117] = \<const0> ;
  assign rxdata_out[116] = \<const0> ;
  assign rxdata_out[115] = \<const0> ;
  assign rxdata_out[114] = \<const0> ;
  assign rxdata_out[113] = \<const0> ;
  assign rxdata_out[112] = \<const0> ;
  assign rxdata_out[111] = \<const0> ;
  assign rxdata_out[110] = \<const0> ;
  assign rxdata_out[109] = \<const0> ;
  assign rxdata_out[108] = \<const0> ;
  assign rxdata_out[107] = \<const0> ;
  assign rxdata_out[106] = \<const0> ;
  assign rxdata_out[105] = \<const0> ;
  assign rxdata_out[104] = \<const0> ;
  assign rxdata_out[103] = \<const0> ;
  assign rxdata_out[102] = \<const0> ;
  assign rxdata_out[101] = \<const0> ;
  assign rxdata_out[100] = \<const0> ;
  assign rxdata_out[99] = \<const0> ;
  assign rxdata_out[98] = \<const0> ;
  assign rxdata_out[97] = \<const0> ;
  assign rxdata_out[96] = \<const0> ;
  assign rxdata_out[95] = \<const0> ;
  assign rxdata_out[94] = \<const0> ;
  assign rxdata_out[93] = \<const0> ;
  assign rxdata_out[92] = \<const0> ;
  assign rxdata_out[91] = \<const0> ;
  assign rxdata_out[90] = \<const0> ;
  assign rxdata_out[89] = \<const0> ;
  assign rxdata_out[88] = \<const0> ;
  assign rxdata_out[87] = \<const0> ;
  assign rxdata_out[86] = \<const0> ;
  assign rxdata_out[85] = \<const0> ;
  assign rxdata_out[84] = \<const0> ;
  assign rxdata_out[83] = \<const0> ;
  assign rxdata_out[82] = \<const0> ;
  assign rxdata_out[81] = \<const0> ;
  assign rxdata_out[80] = \<const0> ;
  assign rxdata_out[79] = \<const0> ;
  assign rxdata_out[78] = \<const0> ;
  assign rxdata_out[77] = \<const0> ;
  assign rxdata_out[76] = \<const0> ;
  assign rxdata_out[75] = \<const0> ;
  assign rxdata_out[74] = \<const0> ;
  assign rxdata_out[73] = \<const0> ;
  assign rxdata_out[72] = \<const0> ;
  assign rxdata_out[71] = \<const0> ;
  assign rxdata_out[70] = \<const0> ;
  assign rxdata_out[69] = \<const0> ;
  assign rxdata_out[68] = \<const0> ;
  assign rxdata_out[67] = \<const0> ;
  assign rxdata_out[66] = \<const0> ;
  assign rxdata_out[65] = \<const0> ;
  assign rxdata_out[64] = \<const0> ;
  assign rxdata_out[63] = \<const0> ;
  assign rxdata_out[62] = \<const0> ;
  assign rxdata_out[61] = \<const0> ;
  assign rxdata_out[60] = \<const0> ;
  assign rxdata_out[59] = \<const0> ;
  assign rxdata_out[58] = \<const0> ;
  assign rxdata_out[57] = \<const0> ;
  assign rxdata_out[56] = \<const0> ;
  assign rxdata_out[55] = \<const0> ;
  assign rxdata_out[54] = \<const0> ;
  assign rxdata_out[53] = \<const0> ;
  assign rxdata_out[52] = \<const0> ;
  assign rxdata_out[51] = \<const0> ;
  assign rxdata_out[50] = \<const0> ;
  assign rxdata_out[49] = \<const0> ;
  assign rxdata_out[48] = \<const0> ;
  assign rxdata_out[47] = \<const0> ;
  assign rxdata_out[46] = \<const0> ;
  assign rxdata_out[45] = \<const0> ;
  assign rxdata_out[44] = \<const0> ;
  assign rxdata_out[43] = \<const0> ;
  assign rxdata_out[42] = \<const0> ;
  assign rxdata_out[41] = \<const0> ;
  assign rxdata_out[40] = \<const0> ;
  assign rxdata_out[39] = \<const0> ;
  assign rxdata_out[38] = \<const0> ;
  assign rxdata_out[37] = \<const0> ;
  assign rxdata_out[36] = \<const0> ;
  assign rxdata_out[35] = \<const0> ;
  assign rxdata_out[34] = \<const0> ;
  assign rxdata_out[33] = \<const0> ;
  assign rxdata_out[32] = \<const0> ;
  assign rxdata_out[31] = \<const0> ;
  assign rxdata_out[30] = \<const0> ;
  assign rxdata_out[29] = \<const0> ;
  assign rxdata_out[28] = \<const0> ;
  assign rxdata_out[27] = \<const0> ;
  assign rxdata_out[26] = \<const0> ;
  assign rxdata_out[25] = \<const0> ;
  assign rxdata_out[24] = \<const0> ;
  assign rxdata_out[23] = \<const0> ;
  assign rxdata_out[22] = \<const0> ;
  assign rxdata_out[21] = \<const0> ;
  assign rxdata_out[20] = \<const0> ;
  assign rxdata_out[19] = \<const0> ;
  assign rxdata_out[18] = \<const0> ;
  assign rxdata_out[17] = \<const0> ;
  assign rxdata_out[16] = \<const0> ;
  assign rxdata_out[15] = \<const0> ;
  assign rxdata_out[14] = \<const0> ;
  assign rxdata_out[13] = \<const0> ;
  assign rxdata_out[12] = \<const0> ;
  assign rxdata_out[11] = \<const0> ;
  assign rxdata_out[10] = \<const0> ;
  assign rxdata_out[9] = \<const0> ;
  assign rxdata_out[8] = \<const0> ;
  assign rxdata_out[7] = \<const0> ;
  assign rxdata_out[6] = \<const0> ;
  assign rxdata_out[5] = \<const0> ;
  assign rxdata_out[4] = \<const0> ;
  assign rxdata_out[3] = \<const0> ;
  assign rxdata_out[2] = \<const0> ;
  assign rxdata_out[1] = \<const0> ;
  assign rxdata_out[0] = \<const0> ;
  assign rxdataextendrsvd_out[31] = \<const0> ;
  assign rxdataextendrsvd_out[30] = \<const0> ;
  assign rxdataextendrsvd_out[29] = \<const0> ;
  assign rxdataextendrsvd_out[28] = \<const0> ;
  assign rxdataextendrsvd_out[27] = \<const0> ;
  assign rxdataextendrsvd_out[26] = \<const0> ;
  assign rxdataextendrsvd_out[25] = \<const0> ;
  assign rxdataextendrsvd_out[24] = \<const0> ;
  assign rxdataextendrsvd_out[23] = \<const0> ;
  assign rxdataextendrsvd_out[22] = \<const0> ;
  assign rxdataextendrsvd_out[21] = \<const0> ;
  assign rxdataextendrsvd_out[20] = \<const0> ;
  assign rxdataextendrsvd_out[19] = \<const0> ;
  assign rxdataextendrsvd_out[18] = \<const0> ;
  assign rxdataextendrsvd_out[17] = \<const0> ;
  assign rxdataextendrsvd_out[16] = \<const0> ;
  assign rxdataextendrsvd_out[15] = \<const0> ;
  assign rxdataextendrsvd_out[14] = \<const0> ;
  assign rxdataextendrsvd_out[13] = \<const0> ;
  assign rxdataextendrsvd_out[12] = \<const0> ;
  assign rxdataextendrsvd_out[11] = \<const0> ;
  assign rxdataextendrsvd_out[10] = \<const0> ;
  assign rxdataextendrsvd_out[9] = \<const0> ;
  assign rxdataextendrsvd_out[8] = \<const0> ;
  assign rxdataextendrsvd_out[7] = \<const0> ;
  assign rxdataextendrsvd_out[6] = \<const0> ;
  assign rxdataextendrsvd_out[5] = \<const0> ;
  assign rxdataextendrsvd_out[4] = \<const0> ;
  assign rxdataextendrsvd_out[3] = \<const0> ;
  assign rxdataextendrsvd_out[2] = \<const0> ;
  assign rxdataextendrsvd_out[1] = \<const0> ;
  assign rxdataextendrsvd_out[0] = \<const0> ;
  assign rxdatavalid_out[7] = \<const0> ;
  assign rxdatavalid_out[6] = \^rxdatavalid_out [6];
  assign rxdatavalid_out[5] = \<const0> ;
  assign rxdatavalid_out[4] = \^rxdatavalid_out [4];
  assign rxdatavalid_out[3] = \<const0> ;
  assign rxdatavalid_out[2] = \^rxdatavalid_out [2];
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxdlysresetdone_out[3] = \<const0> ;
  assign rxdlysresetdone_out[2] = \<const0> ;
  assign rxdlysresetdone_out[1] = \<const0> ;
  assign rxdlysresetdone_out[0] = \<const0> ;
  assign rxelecidle_out[3] = \<const0> ;
  assign rxelecidle_out[2] = \<const0> ;
  assign rxelecidle_out[1] = \<const0> ;
  assign rxelecidle_out[0] = \<const0> ;
  assign rxheader_out[23] = \<const0> ;
  assign rxheader_out[22] = \<const0> ;
  assign rxheader_out[21] = \<const0> ;
  assign rxheader_out[20] = \<const0> ;
  assign rxheader_out[19:18] = \^rxheader_out [19:18];
  assign rxheader_out[17] = \<const0> ;
  assign rxheader_out[16] = \<const0> ;
  assign rxheader_out[15] = \<const0> ;
  assign rxheader_out[14] = \<const0> ;
  assign rxheader_out[13:12] = \^rxheader_out [13:12];
  assign rxheader_out[11] = \<const0> ;
  assign rxheader_out[10] = \<const0> ;
  assign rxheader_out[9] = \<const0> ;
  assign rxheader_out[8] = \<const0> ;
  assign rxheader_out[7:6] = \^rxheader_out [7:6];
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[7] = \<const0> ;
  assign rxheadervalid_out[6] = \^rxheadervalid_out [6];
  assign rxheadervalid_out[5] = \<const0> ;
  assign rxheadervalid_out[4] = \^rxheadervalid_out [4];
  assign rxheadervalid_out[3] = \<const0> ;
  assign rxheadervalid_out[2] = \^rxheadervalid_out [2];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxlfpstresetdet_out[3] = \<const0> ;
  assign rxlfpstresetdet_out[2] = \<const0> ;
  assign rxlfpstresetdet_out[1] = \<const0> ;
  assign rxlfpstresetdet_out[0] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[3] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[2] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[1] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[0] = \<const0> ;
  assign rxlfpsu3wakedet_out[3] = \<const0> ;
  assign rxlfpsu3wakedet_out[2] = \<const0> ;
  assign rxlfpsu3wakedet_out[1] = \<const0> ;
  assign rxlfpsu3wakedet_out[0] = \<const0> ;
  assign rxmonitorout_out[31] = \<const0> ;
  assign rxmonitorout_out[30] = \<const0> ;
  assign rxmonitorout_out[29] = \<const0> ;
  assign rxmonitorout_out[28] = \<const0> ;
  assign rxmonitorout_out[27] = \<const0> ;
  assign rxmonitorout_out[26] = \<const0> ;
  assign rxmonitorout_out[25] = \<const0> ;
  assign rxmonitorout_out[24] = \<const0> ;
  assign rxmonitorout_out[23] = \<const0> ;
  assign rxmonitorout_out[22] = \<const0> ;
  assign rxmonitorout_out[21] = \<const0> ;
  assign rxmonitorout_out[20] = \<const0> ;
  assign rxmonitorout_out[19] = \<const0> ;
  assign rxmonitorout_out[18] = \<const0> ;
  assign rxmonitorout_out[17] = \<const0> ;
  assign rxmonitorout_out[16] = \<const0> ;
  assign rxmonitorout_out[15] = \<const0> ;
  assign rxmonitorout_out[14] = \<const0> ;
  assign rxmonitorout_out[13] = \<const0> ;
  assign rxmonitorout_out[12] = \<const0> ;
  assign rxmonitorout_out[11] = \<const0> ;
  assign rxmonitorout_out[10] = \<const0> ;
  assign rxmonitorout_out[9] = \<const0> ;
  assign rxmonitorout_out[8] = \<const0> ;
  assign rxmonitorout_out[7] = \<const0> ;
  assign rxmonitorout_out[6] = \<const0> ;
  assign rxmonitorout_out[5] = \<const0> ;
  assign rxmonitorout_out[4] = \<const0> ;
  assign rxmonitorout_out[3] = \<const0> ;
  assign rxmonitorout_out[2] = \<const0> ;
  assign rxmonitorout_out[1] = \<const0> ;
  assign rxmonitorout_out[0] = \<const0> ;
  assign rxosintdone_out[3] = \<const0> ;
  assign rxosintdone_out[2] = \<const0> ;
  assign rxosintdone_out[1] = \<const0> ;
  assign rxosintdone_out[0] = \<const0> ;
  assign rxosintstarted_out[3] = \<const0> ;
  assign rxosintstarted_out[2] = \<const0> ;
  assign rxosintstarted_out[1] = \<const0> ;
  assign rxosintstarted_out[0] = \<const0> ;
  assign rxosintstrobedone_out[3] = \<const0> ;
  assign rxosintstrobedone_out[2] = \<const0> ;
  assign rxosintstrobedone_out[1] = \<const0> ;
  assign rxosintstrobedone_out[0] = \<const0> ;
  assign rxosintstrobestarted_out[3] = \<const0> ;
  assign rxosintstrobestarted_out[2] = \<const0> ;
  assign rxosintstrobestarted_out[1] = \<const0> ;
  assign rxosintstrobestarted_out[0] = \<const0> ;
  assign rxoutclk_out[3] = \<const0> ;
  assign rxoutclk_out[2] = \^rxoutclk_out [2];
  assign rxoutclk_out[1] = \<const0> ;
  assign rxoutclk_out[0] = \<const0> ;
  assign rxoutclkfabric_out[3] = \<const0> ;
  assign rxoutclkfabric_out[2] = \<const0> ;
  assign rxoutclkfabric_out[1] = \<const0> ;
  assign rxoutclkfabric_out[0] = \<const0> ;
  assign rxoutclkpcs_out[3] = \<const0> ;
  assign rxoutclkpcs_out[2] = \<const0> ;
  assign rxoutclkpcs_out[1] = \<const0> ;
  assign rxoutclkpcs_out[0] = \<const0> ;
  assign rxphaligndone_out[3] = \<const0> ;
  assign rxphaligndone_out[2] = \<const0> ;
  assign rxphaligndone_out[1] = \<const0> ;
  assign rxphaligndone_out[0] = \<const0> ;
  assign rxphalignerr_out[3] = \<const0> ;
  assign rxphalignerr_out[2] = \<const0> ;
  assign rxphalignerr_out[1] = \<const0> ;
  assign rxphalignerr_out[0] = \<const0> ;
  assign rxprbserr_out[3] = \<const0> ;
  assign rxprbserr_out[2] = \<const0> ;
  assign rxprbserr_out[1] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxprbslocked_out[3] = \<const0> ;
  assign rxprbslocked_out[2] = \<const0> ;
  assign rxprbslocked_out[1] = \<const0> ;
  assign rxprbslocked_out[0] = \<const0> ;
  assign rxprgdivresetdone_out[3] = \<const0> ;
  assign rxprgdivresetdone_out[2] = \<const0> ;
  assign rxprgdivresetdone_out[1] = \<const0> ;
  assign rxprgdivresetdone_out[0] = \<const0> ;
  assign rxqpisenn_out[0] = \<const0> ;
  assign rxqpisenp_out[0] = \<const0> ;
  assign rxratedone_out[3] = \<const0> ;
  assign rxratedone_out[2] = \<const0> ;
  assign rxratedone_out[1] = \<const0> ;
  assign rxratedone_out[0] = \<const0> ;
  assign rxrecclk0_sel_out[0] = \<const0> ;
  assign rxrecclk0sel_out[1] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1_sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[1] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign rxrecclkout_out[3] = \<const0> ;
  assign rxrecclkout_out[2] = \<const0> ;
  assign rxrecclkout_out[1] = \<const0> ;
  assign rxrecclkout_out[0] = \<const0> ;
  assign rxresetdone_out[3] = \<const0> ;
  assign rxresetdone_out[2] = \<const0> ;
  assign rxresetdone_out[1] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxsliderdy_out[3] = \<const0> ;
  assign rxsliderdy_out[2] = \<const0> ;
  assign rxsliderdy_out[1] = \<const0> ;
  assign rxsliderdy_out[0] = \<const0> ;
  assign rxslipdone_out[3] = \<const0> ;
  assign rxslipdone_out[2] = \<const0> ;
  assign rxslipdone_out[1] = \<const0> ;
  assign rxslipdone_out[0] = \<const0> ;
  assign rxslipoutclkrdy_out[3] = \<const0> ;
  assign rxslipoutclkrdy_out[2] = \<const0> ;
  assign rxslipoutclkrdy_out[1] = \<const0> ;
  assign rxslipoutclkrdy_out[0] = \<const0> ;
  assign rxslippmardy_out[3] = \<const0> ;
  assign rxslippmardy_out[2] = \<const0> ;
  assign rxslippmardy_out[1] = \<const0> ;
  assign rxslippmardy_out[0] = \<const0> ;
  assign rxstartofseq_out[7] = \<const0> ;
  assign rxstartofseq_out[6] = \<const0> ;
  assign rxstartofseq_out[5] = \<const0> ;
  assign rxstartofseq_out[4] = \<const0> ;
  assign rxstartofseq_out[3] = \<const0> ;
  assign rxstartofseq_out[2] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign rxstatus_out[11] = \<const0> ;
  assign rxstatus_out[10] = \<const0> ;
  assign rxstatus_out[9] = \<const0> ;
  assign rxstatus_out[8] = \<const0> ;
  assign rxstatus_out[7] = \<const0> ;
  assign rxstatus_out[6] = \<const0> ;
  assign rxstatus_out[5] = \<const0> ;
  assign rxstatus_out[4] = \<const0> ;
  assign rxstatus_out[3] = \<const0> ;
  assign rxstatus_out[2] = \<const0> ;
  assign rxstatus_out[1] = \<const0> ;
  assign rxstatus_out[0] = \<const0> ;
  assign rxsyncdone_out[3] = \<const0> ;
  assign rxsyncdone_out[2] = \<const0> ;
  assign rxsyncdone_out[1] = \<const0> ;
  assign rxsyncdone_out[0] = \<const0> ;
  assign rxsyncout_out[3] = \<const0> ;
  assign rxsyncout_out[2] = \<const0> ;
  assign rxsyncout_out[1] = \<const0> ;
  assign rxsyncout_out[0] = \<const0> ;
  assign rxvalid_out[3] = \<const0> ;
  assign rxvalid_out[2] = \<const0> ;
  assign rxvalid_out[1] = \<const0> ;
  assign rxvalid_out[0] = \<const0> ;
  assign sdm0finalout_out[3] = \<const0> ;
  assign sdm0finalout_out[2] = \<const0> ;
  assign sdm0finalout_out[1] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[14] = \<const0> ;
  assign sdm0testdata_out[13] = \<const0> ;
  assign sdm0testdata_out[12] = \<const0> ;
  assign sdm0testdata_out[11] = \<const0> ;
  assign sdm0testdata_out[10] = \<const0> ;
  assign sdm0testdata_out[9] = \<const0> ;
  assign sdm0testdata_out[8] = \<const0> ;
  assign sdm0testdata_out[7] = \<const0> ;
  assign sdm0testdata_out[6] = \<const0> ;
  assign sdm0testdata_out[5] = \<const0> ;
  assign sdm0testdata_out[4] = \<const0> ;
  assign sdm0testdata_out[3] = \<const0> ;
  assign sdm0testdata_out[2] = \<const0> ;
  assign sdm0testdata_out[1] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[3] = \<const0> ;
  assign sdm1finalout_out[2] = \<const0> ;
  assign sdm1finalout_out[1] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[14] = \<const0> ;
  assign sdm1testdata_out[13] = \<const0> ;
  assign sdm1testdata_out[12] = \<const0> ;
  assign sdm1testdata_out[11] = \<const0> ;
  assign sdm1testdata_out[10] = \<const0> ;
  assign sdm1testdata_out[9] = \<const0> ;
  assign sdm1testdata_out[8] = \<const0> ;
  assign sdm1testdata_out[7] = \<const0> ;
  assign sdm1testdata_out[6] = \<const0> ;
  assign sdm1testdata_out[5] = \<const0> ;
  assign sdm1testdata_out[4] = \<const0> ;
  assign sdm1testdata_out[3] = \<const0> ;
  assign sdm1testdata_out[2] = \<const0> ;
  assign sdm1testdata_out[1] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txbufstatus_out[7] = \^txbufstatus_out [7];
  assign txbufstatus_out[6] = \<const0> ;
  assign txbufstatus_out[5] = \^txbufstatus_out [5];
  assign txbufstatus_out[4] = \<const0> ;
  assign txbufstatus_out[3] = \^txbufstatus_out [3];
  assign txbufstatus_out[2] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txcomfinish_out[3] = \<const0> ;
  assign txcomfinish_out[2] = \<const0> ;
  assign txcomfinish_out[1] = \<const0> ;
  assign txcomfinish_out[0] = \<const0> ;
  assign txdccdone_out[3] = \<const0> ;
  assign txdccdone_out[2] = \<const0> ;
  assign txdccdone_out[1] = \<const0> ;
  assign txdccdone_out[0] = \<const0> ;
  assign txdlysresetdone_out[3] = \<const0> ;
  assign txdlysresetdone_out[2] = \<const0> ;
  assign txdlysresetdone_out[1] = \<const0> ;
  assign txdlysresetdone_out[0] = \<const0> ;
  assign txoutclk_out[3] = \<const0> ;
  assign txoutclk_out[2] = \^txoutclk_out [2];
  assign txoutclk_out[1] = \<const0> ;
  assign txoutclk_out[0] = \<const0> ;
  assign txoutclkfabric_out[3] = \<const0> ;
  assign txoutclkfabric_out[2] = \<const0> ;
  assign txoutclkfabric_out[1] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[3] = \<const0> ;
  assign txoutclkpcs_out[2] = \<const0> ;
  assign txoutclkpcs_out[1] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txphaligndone_out[3] = \<const0> ;
  assign txphaligndone_out[2] = \<const0> ;
  assign txphaligndone_out[1] = \<const0> ;
  assign txphaligndone_out[0] = \<const0> ;
  assign txphinitdone_out[3] = \<const0> ;
  assign txphinitdone_out[2] = \<const0> ;
  assign txphinitdone_out[1] = \<const0> ;
  assign txphinitdone_out[0] = \<const0> ;
  assign txprgdivresetdone_out[3] = \<const0> ;
  assign txprgdivresetdone_out[2] = \<const0> ;
  assign txprgdivresetdone_out[1] = \<const0> ;
  assign txprgdivresetdone_out[0] = \<const0> ;
  assign txqpisenn_out[0] = \<const0> ;
  assign txqpisenp_out[0] = \<const0> ;
  assign txratedone_out[3] = \<const0> ;
  assign txratedone_out[2] = \<const0> ;
  assign txratedone_out[1] = \<const0> ;
  assign txratedone_out[0] = \<const0> ;
  assign txresetdone_out[3] = \<const0> ;
  assign txresetdone_out[2] = \<const0> ;
  assign txresetdone_out[1] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  assign txsyncdone_out[3] = \<const0> ;
  assign txsyncdone_out[2] = \<const0> ;
  assign txsyncdone_out[1] = \<const0> ;
  assign txsyncdone_out[0] = \<const0> ;
  assign txsyncout_out[3] = \<const0> ;
  assign txsyncout_out[2] = \<const0> ;
  assign txsyncout_out[1] = \<const0> ;
  assign txsyncout_out[0] = \<const0> ;
  assign ubdaddr_out[15] = \<const0> ;
  assign ubdaddr_out[14] = \<const0> ;
  assign ubdaddr_out[13] = \<const0> ;
  assign ubdaddr_out[12] = \<const0> ;
  assign ubdaddr_out[11] = \<const0> ;
  assign ubdaddr_out[10] = \<const0> ;
  assign ubdaddr_out[9] = \<const0> ;
  assign ubdaddr_out[8] = \<const0> ;
  assign ubdaddr_out[7] = \<const0> ;
  assign ubdaddr_out[6] = \<const0> ;
  assign ubdaddr_out[5] = \<const0> ;
  assign ubdaddr_out[4] = \<const0> ;
  assign ubdaddr_out[3] = \<const0> ;
  assign ubdaddr_out[2] = \<const0> ;
  assign ubdaddr_out[1] = \<const0> ;
  assign ubdaddr_out[0] = \<const0> ;
  assign ubden_out[0] = \<const0> ;
  assign ubdi_out[15] = \<const0> ;
  assign ubdi_out[14] = \<const0> ;
  assign ubdi_out[13] = \<const0> ;
  assign ubdi_out[12] = \<const0> ;
  assign ubdi_out[11] = \<const0> ;
  assign ubdi_out[10] = \<const0> ;
  assign ubdi_out[9] = \<const0> ;
  assign ubdi_out[8] = \<const0> ;
  assign ubdi_out[7] = \<const0> ;
  assign ubdi_out[6] = \<const0> ;
  assign ubdi_out[5] = \<const0> ;
  assign ubdi_out[4] = \<const0> ;
  assign ubdi_out[3] = \<const0> ;
  assign ubdi_out[2] = \<const0> ;
  assign ubdi_out[1] = \<const0> ;
  assign ubdi_out[0] = \<const0> ;
  assign ubdwe_out[0] = \<const0> ;
  assign ubmdmtdo_out[0] = \<const0> ;
  assign ubrsvdout_out[0] = \<const0> ;
  assign ubtxuart_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  aurora_64b66b_w256_1375Gbps_gt_gtwizard_gtye4 \gen_gtwizard_gtye4_top.aurora_64b66b_w256_1375Gbps_gt_gtwizard_gtye4_inst 
       (.drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in[0]),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in[0]),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in[2:0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .qpll0clk_in(qpll0clk_in[0]),
        .qpll0refclk_in(qpll0refclk_in[0]),
        .rxbufstatus_out({\^rxbufstatus_out [11],\^rxbufstatus_out [8],\^rxbufstatus_out [5],\^rxbufstatus_out [2]}),
        .rxcdrovrden_in(rxcdrovrden_in[0]),
        .rxdatavalid_out({\^rxdatavalid_out [6],\^rxdatavalid_out [4],\^rxdatavalid_out [2],\^rxdatavalid_out [0]}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({\^rxheader_out [19:18],\^rxheader_out [13:12],\^rxheader_out [7:6],\^rxheader_out [1:0]}),
        .rxheadervalid_out({\^rxheadervalid_out [6],\^rxheadervalid_out [4],\^rxheadervalid_out [2],\^rxheadervalid_out [0]}),
        .rxoutclk_out(\^rxoutclk_out ),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in[0]),
        .rxusrclk_in(rxusrclk_in[0]),
        .txbufstatus_out({\^txbufstatus_out [7],\^txbufstatus_out [5],\^txbufstatus_out [3],\^txbufstatus_out [1]}),
        .txheader_in({txheader_in[19:18],txheader_in[13:12],txheader_in[7:6],txheader_in[1:0]}),
        .txoutclk_out(\^txoutclk_out ),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk2_in(txusrclk2_in[0]),
        .txusrclk_in(txusrclk_in[0]));
endmodule

module aurora_64b66b_w256_1375Gbps_gt_gtye4_channel_wrapper
   (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    GTYE4_CHANNEL_GTPOWERGOOD,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ,
    drprdy_out,
    gtytxn_out,
    gtytxp_out,
    GTYE4_CHANNEL_RXCDRLOCK,
    rxpmaresetdone_out,
    GTYE4_CHANNEL_RXRESETDONE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    txpmaresetdone_out,
    GTYE4_CHANNEL_TXRESETDONE,
    gtwiz_userdata_rx_out,
    drpdo_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    drpclk_in,
    drpen_in,
    drpwe_in,
    gtrefclk0_in,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_GTTXRESET,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    rxusrclk_in,
    rxusrclk2_in,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXPROGDIVRESET,
    GTYE4_CHANNEL_TXUSERRDY,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  output [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ;
  output [3:0]drprdy_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  output [3:0]rxpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_RXRESETDONE;
  output [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  output [3:0]txpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_TXRESETDONE;
  output [255:0]gtwiz_userdata_rx_out;
  output [63:0]drpdo_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [0:0]gtrefclk0_in;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input [3:0]GTYE4_CHANNEL_GTTXRESET;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [3:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [63:0]drpdi_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input [39:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_TXRATE;
  wire [3:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [39:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [0:0]gtrefclk0_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;

  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_channel channel_inst
       (.GTYE4_CHANNEL_GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD),
        .GTYE4_CHANNEL_GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTYE4_CHANNEL_GTTXRESET(GTYE4_CHANNEL_GTTXRESET),
        .GTYE4_CHANNEL_RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK),
        .GTYE4_CHANNEL_RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .GTYE4_CHANNEL_RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE),
        .GTYE4_CHANNEL_RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .GTYE4_CHANNEL_TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS),
        .GTYE4_CHANNEL_TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .GTYE4_CHANNEL_TXRATE(GTYE4_CHANNEL_TXRATE),
        .GTYE4_CHANNEL_TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE),
        .GTYE4_CHANNEL_TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .drpaddr_in(drpaddr_in),
        .drpclk_in(drpclk_in),
        .drpdi_in(drpdi_in),
        .drpdo_out(drpdo_out),
        .drpen_in(drpen_in),
        .drprdy_out(drprdy_out),
        .drpwe_in(drpwe_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk2_in(txusrclk2_in),
        .txusrclk_in(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_100
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_101
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_102
   (E,
    in0,
    drpclk_in,
    \FSM_sequential_sm_reset_all_reg[0] ,
    Q,
    \FSM_sequential_sm_reset_all_reg[0]_0 );
  output [0:0]E;
  input in0;
  input [0:0]drpclk_in;
  input \FSM_sequential_sm_reset_all_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_all_reg[0]_0 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_all_reg[0] ;
  wire \FSM_sequential_sm_reset_all_reg[0]_0 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtpowergood_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  LUT6 #(
    .INIT(64'hAF0FAF00CFFFCFFF)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(gtpowergood_sync),
        .I1(\FSM_sequential_sm_reset_all_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_sm_reset_all_reg[0]_0 ),
        .I5(Q[1]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_103
   (E,
    in0,
    drpclk_in,
    Q,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    gtwiz_reset_rx_pll_and_datapath_dly,
    sm_reset_rx_pll_timer_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_1 );
  output [0:0]E;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_rx_reg[0] ;
  input \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input gtwiz_reset_rx_pll_and_datapath_dly;
  input sm_reset_rx_pll_timer_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_rx_pll_timer_sat;

  LUT5 #(
    .INIT(32'hFFE400E4)) 
    \FSM_sequential_sm_reset_rx[2]_i_1 
       (.I0(Q[1]),
        .I1(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I2(\FSM_sequential_sm_reset_rx_reg[0] ),
        .I3(Q[2]),
        .I4(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h0E0EFE0E)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(gtwiz_reset_rx_datapath_dly),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(Q[0]),
        .I3(sm_reset_rx_pll_timer_sat),
        .I4(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_104
   (gtwiz_reset_rx_pll_and_datapath_dly,
    D,
    in0,
    drpclk_in,
    Q,
    p_0_in11_out__0);
  output gtwiz_reset_rx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;

  wire [1:0]D;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire p_0_in11_out__0;

  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hF5A55E5E)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(Q[0]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(Q[1]),
        .I3(p_0_in11_out__0),
        .I4(Q[2]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00FFF511)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(Q[2]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(p_0_in11_out__0),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_105
   (i_in_out_reg_0,
    in0,
    drpclk_in,
    gtwiz_reset_tx_pll_and_datapath_dly,
    Q,
    sm_reset_tx_pll_timer_sat,
    \FSM_sequential_sm_reset_tx[2]_i_5 );
  output i_in_out_reg_0;
  input in0;
  input [0:0]drpclk_in;
  input gtwiz_reset_tx_pll_and_datapath_dly;
  input [0:0]Q;
  input sm_reset_tx_pll_timer_sat;
  input \FSM_sequential_sm_reset_tx[2]_i_5 ;

  wire \FSM_sequential_sm_reset_tx[2]_i_5 ;
  wire [0:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_tx_pll_timer_sat;

  LUT5 #(
    .INIT(32'h0E0EFE0E)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(gtwiz_reset_tx_datapath_dly),
        .I1(gtwiz_reset_tx_pll_and_datapath_dly),
        .I2(Q),
        .I3(sm_reset_tx_pll_timer_sat),
        .I4(\FSM_sequential_sm_reset_tx[2]_i_5 ),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_106
   (gtwiz_reset_tx_pll_and_datapath_dly,
    D,
    in0,
    drpclk_in,
    Q);
  output gtwiz_reset_tx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;

  wire [1:0]D;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0F3E)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0FF1)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_107
   (sm_reset_rx_timer_clr0__0,
    gtwiz_userclk_rx_active_in,
    drpclk_in,
    rxuserrdy_out_reg,
    sm_reset_rx_timer_sat);
  output sm_reset_rx_timer_clr0__0;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]drpclk_in;
  input rxuserrdy_out_reg;
  input sm_reset_rx_timer_sat;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire rxuserrdy_out_reg;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(rxuserrdy_out_reg),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0__0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_108
   (\FSM_sequential_sm_reset_tx_reg[1] ,
    sm_reset_tx_timer_clr0__0,
    E,
    gtwiz_userclk_tx_active_in,
    drpclk_in,
    Q,
    gtwiz_reset_tx_any_sync,
    GTYE4_CHANNEL_TXUSERRDY,
    gtwiz_reset_tx_done_int0__0,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    txuserrdy_out_reg,
    sm_reset_tx_timer_sat);
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  output sm_reset_tx_timer_clr0__0;
  output [0:0]E;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_tx_any_sync;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input gtwiz_reset_tx_done_int0__0;
  input \FSM_sequential_sm_reset_tx_reg[0] ;
  input txuserrdy_out_reg;
  input sm_reset_tx_timer_sat;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_tx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_sat;
  wire txuserrdy_out_reg;

  LUT6 #(
    .INIT(64'h00F000F0CCF0AAF0)) 
    \FSM_sequential_sm_reset_tx[2]_i_1 
       (.I0(sm_reset_tx_timer_clr0__0),
        .I1(gtwiz_reset_tx_done_int0__0),
        .I2(\FSM_sequential_sm_reset_tx_reg[0] ),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(E));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(txuserrdy_out_reg),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0__0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_tx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF9F900001000)) 
    txuserrdy_out_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(sm_reset_tx_timer_clr0__0),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(GTYE4_CHANNEL_TXUSERRDY),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_109
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    \FSM_sequential_sm_reset_rx_reg[2]_0 ,
    i_in_out_reg_1,
    gtwiz_reset_qpll0lock_in,
    drpclk_in,
    Q,
    p_0_in11_out__0,
    gtwiz_reset_rx_done_int_reg,
    sm_reset_rx_timer_clr0__0,
    sm_reset_rx_timer_clr_reg,
    sm_reset_rx_cdr_to_clr_reg,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    GTYE4_CHANNEL_GTRXRESET,
    sm_reset_rx_timer_clr010_out__0,
    sm_reset_rx_timer_sat);
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  output i_in_out_reg_1;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;
  input gtwiz_reset_rx_done_int_reg;
  input sm_reset_rx_timer_clr0__0;
  input sm_reset_rx_timer_clr_reg;
  input sm_reset_rx_cdr_to_clr_reg;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input sm_reset_rx_timer_clr010_out__0;
  input sm_reset_rx_timer_sat;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  wire i_in_out_reg_1;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire plllock_rx_sync;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr_i_2_n_0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_timer_clr010_out__0;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_sat;

  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg),
        .O(i_in_out_reg_1));
  LUT6 #(
    .INIT(64'hFFFFBFFF00001514)) 
    gtrxreset_out_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr_i_2_n_0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(GTYE4_CHANNEL_GTRXRESET),
        .O(\FSM_sequential_sm_reset_rx_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hBFBFFFFF0C000000)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(plllock_rx_sync),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(p_0_in11_out__0),
        .I4(Q[2]),
        .I5(gtwiz_reset_rx_done_int_reg),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBFFFFFF0000040F)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(Q[2]),
        .I1(sm_reset_rx_cdr_to_clr_i_2_n_0),
        .I2(sm_reset_rx_cdr_to_clr_reg),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(plllock_rx_sync),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr_reg),
        .I3(sm_reset_rx_timer_sat),
        .O(sm_reset_rx_cdr_to_clr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFAEFAAFF0AE0AA0F)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(sm_reset_rx_timer_clr0__0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(sm_reset_rx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  LUT6 #(
    .INIT(64'h8F808F8F80808080)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(Q[1]),
        .I1(p_0_in11_out__0),
        .I2(Q[2]),
        .I3(plllock_rx_sync),
        .I4(Q[0]),
        .I5(sm_reset_rx_timer_clr010_out__0),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_110
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_tx_reg[2] ,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    i_in_out_reg_1,
    gtwiz_reset_qpll0lock_in,
    drpclk_in,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr_reg,
    gtwiz_reset_tx_done_int0__0,
    Q,
    gtwiz_reset_tx_done_int_reg,
    sm_reset_tx_timer_clr0__0,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ,
    \FSM_sequential_sm_reset_tx_reg[0]_0 );
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_tx_reg[2] ;
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  output i_in_out_reg_1;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]drpclk_in;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr_reg;
  input gtwiz_reset_tx_done_int0__0;
  input [2:0]Q;
  input gtwiz_reset_tx_done_int_reg;
  input sm_reset_tx_timer_clr0__0;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  input \FSM_sequential_sm_reset_tx_reg[0]_0 ;

  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  wire gttxreset_out_i_2_n_0;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  wire i_in_out_reg_1;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire plllock_tx_sync;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(sm_reset_tx_timer_clr_reg),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .O(i_in_out_reg_1));
  LUT6 #(
    .INIT(64'h7F7F7F7F2A2A2A3E)) 
    gttxreset_out_i_1
       (.I0(gttxreset_out_i_2_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(Q[2]),
        .I5(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    gttxreset_out_i_2
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg),
        .I2(plllock_tx_sync),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(gttxreset_out_i_2_n_0));
  LUT6 #(
    .INIT(64'hFAFFFFFF0000C000)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(plllock_tx_sync),
        .I1(gtwiz_reset_tx_done_int0__0),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(gtwiz_reset_tx_done_int_reg),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFAAFFAEF0AA00AEF)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(sm_reset_tx_timer_clr0__0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[2] ));
  LUT6 #(
    .INIT(64'hF022F00000220022)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg),
        .I2(gtwiz_reset_tx_done_int0__0),
        .I3(Q[2]),
        .I4(plllock_tx_sync),
        .I5(Q[0]),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_111
   (\FSM_sequential_sm_reset_rx_reg[2] ,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[2]_0 ,
    i_in_meta_reg_0,
    drpclk_in,
    Q,
    gtwiz_reset_rx_any_sync,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    sm_reset_rx_cdr_to_sat,
    sm_reset_rx_timer_clr0__0,
    p_0_in11_out__0);
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_rx_any_sync;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input sm_reset_rx_cdr_to_sat;
  input sm_reset_rx_timer_clr0__0;
  input p_0_in11_out__0;

  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_any_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  wire i_in_out_reg_0;
  wire i_in_out_reg_n_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire sm_reset_rx_cdr_to_clr0__0;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr0__0;

  LUT6 #(
    .INIT(64'h0000F0F0FF00EEEE)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(i_in_out_reg_n_0),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_timer_clr0__0),
        .I3(p_0_in11_out__0),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_n_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFDFF00001414)) 
    rxprogdivreset_out_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr0__0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(GTYE4_CHANNEL_RXPROGDIVRESET),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'hE)) 
    rxprogdivreset_out_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(i_in_out_reg_n_0),
        .O(sm_reset_rx_cdr_to_clr0__0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h02)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(Q[2]),
        .I1(i_in_out_reg_n_0),
        .I2(sm_reset_rx_cdr_to_sat),
        .O(\FSM_sequential_sm_reset_rx_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_95
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_96
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_97
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_98
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_bit_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_99
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtwiz_reset" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtwiz_reset
   (GTYE4_CHANNEL_TXPROGDIVRESET,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    GTYE4_CHANNEL_TXUSERRDY,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    GTYE4_CHANNEL_GTTXRESET,
    gtwiz_reset_qpll0reset_out,
    in0,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    i_in_meta_reg,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    txusrclk2_in,
    rxusrclk2_in,
    gtpowergood_out,
    GTYE4_CHANNEL_GTPOWERGOOD,
    gtwiz_reset_rx_datapath_in,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync );
  output [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]GTYE4_CHANNEL_TXUSERRDY;
  output [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  output [0:0]GTYE4_CHANNEL_GTRXRESET;
  output [0:0]GTYE4_CHANNEL_RXUSERRDY;
  output [3:0]GTYE4_CHANNEL_GTTXRESET;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input in0;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input i_in_meta_reg;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]txusrclk2_in;
  input [0:0]rxusrclk2_in;
  input [3:0]gtpowergood_out;
  input [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;

  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_4_n_0 ;
  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire bit_synchronizer_gtpowergood_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_1;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_0;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire [3:0]gtpowergood_out;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire i_in_meta_reg;
  wire in0;
  wire p_0_in;
  wire p_0_in11_out__0;
  wire [9:0]p_0_in__0;
  wire [9:0]p_0_in__1;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_2;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire [0:0]rxusrclk2_in;
  wire sel;
  wire [2:0]sm_reset_all;
  wire [2:0]sm_reset_all__0;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_rx;
  wire [2:0]sm_reset_rx__0;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_cdr_to_sat_i_2_n_0;
  wire sm_reset_rx_cdr_to_sat_i_3_n_0;
  wire sm_reset_rx_cdr_to_sat_i_4_n_0;
  wire sm_reset_rx_cdr_to_sat_i_5_n_0;
  wire sm_reset_rx_cdr_to_sat_i_6_n_0;
  wire sm_reset_rx_cdr_to_sat_i_7_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr010_out__0;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_tx;
  wire [2:0]sm_reset_tx__0;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire \sm_reset_tx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire [0:0]txusrclk2_in;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FFF70000FFFFFF)) 
    \FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all[1]),
        .I5(sm_reset_all[0]),
        .O(sm_reset_all__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h34)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .O(sm_reset_all__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h4A)) 
    \FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .O(sm_reset_all__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(sm_reset_all_timer_sat),
        .I1(gtwiz_reset_rx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_all[2]_i_4 
       (.I0(sm_reset_all_timer_clr_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[0]),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[1]),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[2]),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT4 #(
    .INIT(16'hF8B8)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(sm_reset_rx[0]),
        .I1(sm_reset_rx[1]),
        .I2(sm_reset_rx[2]),
        .I3(p_0_in11_out__0),
        .O(sm_reset_rx__0[2]));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \FSM_sequential_sm_reset_rx[2]_i_6 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [2]),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [3]),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [0]),
        .I3(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [1]),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .I5(sm_reset_rx_timer_sat),
        .O(p_0_in11_out__0));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[0]),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[1]),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[2]),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h2C)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[2]),
        .I2(sm_reset_tx[1]),
        .O(sm_reset_tx__0[2]));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [2]),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [3]),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [0]),
        .I3(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [1]),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .I5(sm_reset_tx_timer_sat),
        .O(gtwiz_reset_tx_done_int0__0));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[0]),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[1]),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[2]),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_102 bit_synchronizer_gtpowergood_inst
       (.E(bit_synchronizer_gtpowergood_inst_n_0),
        .\FSM_sequential_sm_reset_all_reg[0] (\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .\FSM_sequential_sm_reset_all_reg[0]_0 (\FSM_sequential_sm_reset_all[2]_i_4_n_0 ),
        .Q(sm_reset_all),
        .drpclk_in(drpclk_in),
        .in0(in0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_103 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.E(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_plllock_rx_inst_n_4),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (bit_synchronizer_rxcdrlock_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (sm_reset_rx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_104 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D(sm_reset_rx__0[1:0]),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .p_0_in11_out__0(p_0_in11_out__0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_105 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.\FSM_sequential_sm_reset_tx[2]_i_5 (sm_reset_tx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_tx[0]),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .i_in_out_reg_0(bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0),
        .in0(gtwiz_reset_tx_datapath_sync),
        .sm_reset_tx_pll_timer_sat(sm_reset_tx_pll_timer_sat));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_106 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D(sm_reset_tx__0[1:0]),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_107 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .rxuserrdy_out_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_108 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.E(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_3),
        .\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0),
        .GTYE4_CHANNEL_TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat),
        .txuserrdy_out_reg(sm_reset_tx_timer_clr_reg_n_0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_109 bit_synchronizer_plllock_rx_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_plllock_rx_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_plllock_rx_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[2]_0 (bit_synchronizer_plllock_rx_inst_n_3),
        .GTYE4_CHANNEL_GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_0),
        .i_in_out_reg_1(bit_synchronizer_plllock_rx_inst_n_4),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_rxcdrlock_inst_n_2),
        .sm_reset_rx_timer_clr010_out__0(sm_reset_rx_timer_clr010_out__0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0),
        .sm_reset_rx_timer_clr_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_110 bit_synchronizer_plllock_tx_inst
       (.\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0]_0 (bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[2] (bit_synchronizer_plllock_tx_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_0),
        .i_in_out_reg_1(bit_synchronizer_plllock_tx_inst_n_3),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_clr_reg(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_bit_synchronizer_111 bit_synchronizer_rxcdrlock_inst
       (.\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_rxcdrlock_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[2]_0 (bit_synchronizer_rxcdrlock_inst_n_2),
        .GTYE4_CHANNEL_RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .i_in_meta_reg_0(i_in_meta_reg),
        .i_in_out_reg_0(bit_synchronizer_rxcdrlock_inst_n_1),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_3),
        .Q(GTYE4_CHANNEL_GTRXRESET),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_2),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \gtwiz_reset_qpll0reset_out[0]_INST_0 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(gtwiz_reset_qpll0reset_out));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hF740)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_0),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_0),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hFB02)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[0]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .O(GTYE4_CHANNEL_GTTXRESET[0]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[1]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .O(GTYE4_CHANNEL_GTTXRESET[1]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[2]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .O(GTYE4_CHANNEL_GTTXRESET[2]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[3]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .O(GTYE4_CHANNEL_GTTXRESET[3]));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .R(1'b0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_all_sync(gtwiz_reset_all_sync),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_112 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .GTYE4_CHANNEL_RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .rst_in_out_reg_0(reset_synchronizer_gtwiz_reset_rx_any_inst_n_2),
        .rst_in_out_reg_1(gtwiz_reset_rx_datapath_int_reg_n_0),
        .rst_in_out_reg_2(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_113 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .in0(gtwiz_reset_rx_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_114 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_115 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_116 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_117 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .rxusrclk2_in(rxusrclk2_in));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer_118 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .txusrclk2_in(txusrclk2_in));
  aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_119 reset_synchronizer_txprogdivreset_inst
       (.GTYE4_CHANNEL_TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_0),
        .Q(GTYE4_CHANNEL_RXPROGDIVRESET),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_2),
        .Q(GTYE4_CHANNEL_RXUSERRDY),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(sm_reset_all[0]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000B0003333BB33)) 
    sm_reset_all_timer_clr_i_2
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_2),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I2(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I3(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I4(sm_reset_rx_cdr_to_sat_i_3_n_0),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_sat_i_4_n_0),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I4(sm_reset_rx_cdr_to_sat_i_6_n_0),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[18]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[17]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[12]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[11]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({sm_reset_rx_cdr_to_ctr_reg[7:1],\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[23:16]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,sm_reset_rx_cdr_to_ctr_reg[25:24]}));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[15:8]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT4 #(
    .INIT(16'h00F1)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(sm_reset_rx_cdr_to_sat_i_2_n_0),
        .I1(sm_reset_rx_cdr_to_sat_i_3_n_0),
        .I2(sm_reset_rx_cdr_to_sat),
        .I3(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBFFF)) 
    sm_reset_rx_cdr_to_sat_i_2
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat_i_4_n_0),
        .I2(sm_reset_rx_cdr_to_sat_i_5_n_0),
        .I3(sm_reset_rx_cdr_to_sat_i_6_n_0),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[24]),
        .O(sm_reset_rx_cdr_to_sat_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sm_reset_rx_cdr_to_sat_i_3
       (.I0(sm_reset_rx_cdr_to_sat_i_7_n_0),
        .I1(sm_reset_rx_cdr_to_ctr_reg[19]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[25]),
        .O(sm_reset_rx_cdr_to_sat_i_3_n_0));
  LUT4 #(
    .INIT(16'h0100)) 
    sm_reset_rx_cdr_to_sat_i_4
       (.I0(sm_reset_rx_cdr_to_ctr_reg[6]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[5]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[3]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[4]),
        .O(sm_reset_rx_cdr_to_sat_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h01)) 
    sm_reset_rx_cdr_to_sat_i_5
       (.I0(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(sm_reset_rx_cdr_to_sat_i_5_n_0));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    sm_reset_rx_cdr_to_sat_i_6
       (.I0(sm_reset_rx_cdr_to_ctr_reg[8]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[7]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[9]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[10]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[13]),
        .O(sm_reset_rx_cdr_to_sat_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sm_reset_rx_cdr_to_sat_i_7
       (.I0(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(sm_reset_rx_cdr_to_sat_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .O(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[5]),
        .O(p_0_in__1[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I2(\sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[6]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(\sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(p_0_in__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .O(p_0_in__1[8]));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(p_0_in__1[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_pll_timer_ctr_reg[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h2)) 
    sm_reset_rx_timer_clr_i_4
       (.I0(sm_reset_rx_timer_sat),
        .I1(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_clr010_out__0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_1),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .O(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[5]),
        .O(p_0_in__0[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I2(\sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(\sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .O(p_0_in__0[8]));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(sel),
        .D(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_pll_timer_ctr_reg[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_1),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0),
        .Q(GTYE4_CHANNEL_TXUSERRDY),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtye4_channel" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_channel
   (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ,
    GTYE4_CHANNEL_GTPOWERGOOD,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ,
    drprdy_out,
    gtytxn_out,
    gtytxp_out,
    GTYE4_CHANNEL_RXCDRLOCK,
    rxpmaresetdone_out,
    GTYE4_CHANNEL_RXRESETDONE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    txpmaresetdone_out,
    GTYE4_CHANNEL_TXRESETDONE,
    gtwiz_userdata_rx_out,
    drpdo_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    drpclk_in,
    drpen_in,
    drpwe_in,
    gtrefclk0_in,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_GTTXRESET,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    rxusrclk_in,
    rxusrclk2_in,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXPROGDIVRESET,
    GTYE4_CHANNEL_TXUSERRDY,
    txusrclk_in,
    txusrclk2_in,
    gtwiz_userdata_tx_in,
    drpdi_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    drpaddr_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  output [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ;
  output [3:0]drprdy_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  output [3:0]rxpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_RXRESETDONE;
  output [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  output [3:0]txpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_TXRESETDONE;
  output [255:0]gtwiz_userdata_rx_out;
  output [63:0]drpdo_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [0:0]gtrefclk0_in;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input [3:0]GTYE4_CHANNEL_GTTXRESET;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [3:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input [0:0]txusrclk_in;
  input [0:0]txusrclk2_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [63:0]drpdi_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input [39:0]drpaddr_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_TXRATE;
  wire [3:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [39:0]drpaddr_in;
  wire [0:0]drpclk_in;
  wire [63:0]drpdi_in;
  wire [63:0]drpdo_out;
  wire [3:0]drpen_in;
  wire [3:0]drprdy_out;
  wire [3:0]drpwe_in;
  wire [0:0]gtrefclk0_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk2_in;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;

  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(rxoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__0 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__1 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__2 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR(drpaddr_in[9:0]),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in[15:0]),
        .DRPDO(drpdo_out[15:0]),
        .DRPEN(drpen_in[0]),
        .DRPRDY(drprdy_out[0]),
        .DRPRST(1'b0),
        .DRPWE(drpwe_in[0]),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[0]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[0]),
        .GTYRXP(gtyrxp_in[0]),
        .GTYTXN(gtytxn_out[0]),
        .GTYTXP(gtytxp_out[0]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[0],\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[0]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[63:0]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[0]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[0]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[1:0]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[0]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[0]),
        .RXPOLARITY(rxpolarity_in[0]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[0]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[0],\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[63:0]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[0]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[0]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[0]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[0]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[0]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[0]),
        .TXSEQUENCE(txsequence_in[6:0]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR(drpaddr_in[19:10]),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in[31:16]),
        .DRPDO(drpdo_out[31:16]),
        .DRPEN(drpen_in[1]),
        .DRPRDY(drprdy_out[1]),
        .DRPRST(1'b0),
        .DRPWE(drpwe_in[1]),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[1]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[1]),
        .GTYRXP(gtyrxp_in[1]),
        .GTYTXN(gtytxn_out[1]),
        .GTYTXP(gtytxp_out[1]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[1],\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[1]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[127:64]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[1]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[1]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[3:2]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[1]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[1]),
        .RXPOLARITY(rxpolarity_in[1]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[1]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[1],\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[127:64]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[3:2]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[1]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[1]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[1]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[1]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[1]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[1]),
        .TXSEQUENCE(txsequence_in[13:7]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR(drpaddr_in[29:20]),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in[47:32]),
        .DRPDO(drpdo_out[47:32]),
        .DRPEN(drpen_in[2]),
        .DRPRDY(drprdy_out[2]),
        .DRPRST(1'b0),
        .DRPWE(drpwe_in[2]),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[2]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[2]),
        .GTYRXP(gtyrxp_in[2]),
        .GTYTXN(gtytxn_out[2]),
        .GTYTXP(gtytxp_out[2]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[2],\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[2]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[191:128]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[2]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[2]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[5:4]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[2]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[2]),
        .RXPOLARITY(rxpolarity_in[2]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[2]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[2],\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[191:128]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[5:4]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[2]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[2]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[2]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[2]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[2]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[2]),
        .TXSEQUENCE(txsequence_in[20:14]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR(drpaddr_in[39:30]),
        .DRPCLK(drpclk_in),
        .DRPDI(drpdi_in[63:48]),
        .DRPDO(drpdo_out[63:48]),
        .DRPEN(drpen_in[3]),
        .DRPRDY(drprdy_out[3]),
        .DRPRST(1'b0),
        .DRPWE(drpwe_in[3]),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[3]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[3]),
        .GTYRXP(gtyrxp_in[3]),
        .GTYTXN(gtytxn_out[3]),
        .GTYTXP(gtytxp_out[3]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[3],\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[3]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[255:192]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[3]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[3]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[7:6]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[3]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[3]),
        .RXPOLARITY(rxpolarity_in[3]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[3]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[3],\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[255:192]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[7:6]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[3]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[3]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[3]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[3]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[3]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[3]),
        .TXSEQUENCE(txsequence_in[27:21]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk2_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__2 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_92
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__0 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__0 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_93
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__0 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_gtye4_delay_powergood_94
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__2 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__2 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer
   (gtwiz_reset_rx_done_out,
    rxusrclk2_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_rx_done_out;
  input [0:0]rxusrclk2_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_inv_synchronizer_118
   (gtwiz_reset_tx_done_out,
    txusrclk2_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk2_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer
   (gtwiz_reset_all_sync,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in);
  output gtwiz_reset_all_sync;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(gtwiz_reset_all_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_112
   (gtwiz_reset_rx_any_sync,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    rst_in_out_reg_0,
    drpclk_in,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ,
    sm_reset_rx_timer_clr0__0,
    GTYE4_CHANNEL_RXUSERRDY,
    rst_in_out_reg_1,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    rst_in_out_reg_2);
  output gtwiz_reset_rx_any_sync;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output rst_in_out_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  input sm_reset_rx_timer_clr0__0;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input rst_in_out_reg_1;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input rst_in_out_reg_2;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  wire rst_in_out_reg_1;
  wire rst_in_out_reg_2;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire sm_reset_rx_timer_clr0__0;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rst_in_meta_i_1
       (.I0(rst_in_out_reg_1),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(gtwiz_reset_rx_pll_and_datapath_in),
        .I3(rst_in_out_reg_2),
        .O(gtwiz_reset_rx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
  LUT6 #(
    .INIT(64'hFFFFFAAF00400000)) 
    rxuserrdy_out_i_1
       (.I0(gtwiz_reset_rx_any_sync),
        .I1(sm_reset_rx_timer_clr0__0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(GTYE4_CHANNEL_RXUSERRDY),
        .O(rst_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_113
   (in0,
    drpclk_in,
    gtwiz_reset_rx_datapath_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire in0;
  wire rst_in0_1;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__1
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(rst_in_out_reg_0),
        .O(rst_in0_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_1),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_1),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_114
   (in0,
    drpclk_in,
    rst_in_out_reg_0,
    gtwiz_reset_rx_pll_and_datapath_in);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire in0;
  wire p_0_in_0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(rst_in_out_reg_0),
        .I1(gtwiz_reset_rx_pll_and_datapath_in),
        .O(p_0_in_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_0_in_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_0_in_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_0_in_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_0_in_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_0_in_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_115
   (gtwiz_reset_tx_any_sync,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    drpclk_in,
    rst_in_out_reg_0,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int );
  output gtwiz_reset_tx_any_sync;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire gtwiz_reset_tx_any_sync;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_116
   (in0,
    drpclk_in);
  output in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rst_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .Q(in0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .Q(rst_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .Q(rst_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .Q(rst_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_117
   (in0,
    drpclk_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_14_reset_synchronizer" *) 
module aurora_64b66b_w256_1375Gbps_gtwizard_ultrascale_v1_7_14_reset_synchronizer_119
   (GTYE4_CHANNEL_TXPROGDIVRESET,
    drpclk_in,
    gtwiz_reset_qpll0lock_in);
  output [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_qpll0lock_in;

  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__2
       (.I0(gtwiz_reset_qpll0lock_in),
        .O(rst_in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(GTYE4_CHANNEL_TXPROGDIVRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

module aurora_64b66b_w256_1375Gbps_rst_sync
   (RESET,
    pma_init,
    init_clk);
  output RESET;
  input pma_init;
  input init_clk;

  wire RESET;
  wire init_clk;
  wire pma_init;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(pma_init),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(RESET),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_13
   (rst_pma_init_usrclk,
    stg5_reg_0,
    TX_HEADER_1_reg,
    RESET,
    user_clk,
    TXHEADER_IN_LANE2,
    txdatavalid_symgen_i_lane2,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0);
  output rst_pma_init_usrclk;
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  input RESET;
  input user_clk;
  input [1:0]TXHEADER_IN_LANE2;
  input txdatavalid_symgen_i_lane2;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;

  wire [0:0]GEN_CH_BOND;
  wire RESET;
  wire [1:0]TXHEADER_IN_LANE2;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i_lane2;
  wire user_clk;

  LUT6 #(
    .INIT(64'h0404040404040454)) 
    TX_HEADER_0_i_1__1
       (.I0(rst_pma_init_usrclk),
        .I1(TXHEADER_IN_LANE2[0]),
        .I2(txdatavalid_symgen_i_lane2),
        .I3(gen_cc_i),
        .I4(GEN_CH_BOND),
        .I5(TX_HEADER_1_reg_0),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEE2)) 
    TX_HEADER_1_i_1__1
       (.I0(TXHEADER_IN_LANE2[1]),
        .I1(txdatavalid_symgen_i_lane2),
        .I2(TX_HEADER_1_reg_0),
        .I3(GEN_CH_BOND),
        .I4(gen_cc_i),
        .I5(rst_pma_init_usrclk),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(rst_pma_init_usrclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_19
   (rst_pma_init_usrclk,
    stg5_reg_0,
    TX_HEADER_1_reg,
    RESET,
    user_clk,
    TXHEADER_IN_LANE1,
    txdatavalid_symgen_i_lane1,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0);
  output rst_pma_init_usrclk;
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  input RESET;
  input user_clk;
  input [1:0]TXHEADER_IN_LANE1;
  input txdatavalid_symgen_i_lane1;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;

  wire [0:0]GEN_CH_BOND;
  wire RESET;
  wire [1:0]TXHEADER_IN_LANE1;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i_lane1;
  wire user_clk;

  LUT6 #(
    .INIT(64'h0404040404040454)) 
    TX_HEADER_0_i_1__0
       (.I0(rst_pma_init_usrclk),
        .I1(TXHEADER_IN_LANE1[0]),
        .I2(txdatavalid_symgen_i_lane1),
        .I3(gen_cc_i),
        .I4(GEN_CH_BOND),
        .I5(TX_HEADER_1_reg_0),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEE2)) 
    TX_HEADER_1_i_1__0
       (.I0(TXHEADER_IN_LANE1[1]),
        .I1(txdatavalid_symgen_i_lane1),
        .I2(TX_HEADER_1_reg_0),
        .I3(GEN_CH_BOND),
        .I4(gen_cc_i),
        .I5(rst_pma_init_usrclk),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(rst_pma_init_usrclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_25
   (rst_pma_init_usrclk,
    stg5_reg_0,
    TX_HEADER_1_reg,
    RESET,
    user_clk,
    TXHEADER_IN,
    txdatavalid_symgen_i,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0);
  output rst_pma_init_usrclk;
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  input RESET;
  input user_clk;
  input [1:0]TXHEADER_IN;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;

  wire [0:0]GEN_CH_BOND;
  wire RESET;
  wire [1:0]TXHEADER_IN;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i;
  wire user_clk;

  LUT6 #(
    .INIT(64'h0404040404040454)) 
    TX_HEADER_0_i_1
       (.I0(rst_pma_init_usrclk),
        .I1(TXHEADER_IN[0]),
        .I2(txdatavalid_symgen_i),
        .I3(gen_cc_i),
        .I4(GEN_CH_BOND),
        .I5(TX_HEADER_1_reg_0),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEE2)) 
    TX_HEADER_1_i_1
       (.I0(TXHEADER_IN[1]),
        .I1(txdatavalid_symgen_i),
        .I2(TX_HEADER_1_reg_0),
        .I3(GEN_CH_BOND),
        .I4(gen_cc_i),
        .I5(rst_pma_init_usrclk),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(rst_pma_init_usrclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_3
   (sysreset_to_core_sync,
    sysreset_to_core,
    user_clk);
  output sysreset_to_core_sync;
  input sysreset_to_core;
  input user_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire sysreset_to_core;
  wire sysreset_to_core_sync;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(sysreset_to_core),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(sysreset_to_core_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_4
   (link_reset_sync,
    link_reset_out,
    user_clk);
  output link_reset_sync;
  input link_reset_out;
  input user_clk;

  wire link_reset_out;
  wire link_reset_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(link_reset_out),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(link_reset_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_5
   (power_down_sync,
    power_down,
    user_clk);
  output power_down_sync;
  input power_down;
  input user_clk;

  wire power_down;
  wire power_down_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(power_down),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(power_down_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_6
   (fsm_resetdone_sync,
    in0,
    user_clk);
  output fsm_resetdone_sync;
  input in0;
  input user_clk;

  wire fsm_resetdone_sync;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_7
   (reset,
    SR,
    stg5_reg_0,
    stg5_reg_1,
    stg5_reg_2,
    stg5_reg_3,
    stg5_reg_4,
    stg5_reg_5,
    stg5_reg_6,
    stg5_reg_7,
    RESET,
    init_clk,
    Q,
    tx_done,
    drprdy_out_5,
    \s_axi_rdata_reg[0] ,
    tx_done_r,
    \drpaddr_in_lane1_reg[0] ,
    tx_done_lane1,
    drprdy_out_lane1,
    \s_axi_rdata_lane1_reg[15] ,
    tx_done_lane1_r,
    \drpaddr_in_lane2_reg[0] ,
    tx_done_lane2,
    drprdy_out_lane2,
    \s_axi_rdata_lane2_reg[15] ,
    tx_done_lane2_r,
    \drpaddr_in_lane3_reg[0] ,
    tx_done_lane3,
    drprdy_out_lane3,
    \s_axi_rdata_lane3_reg[15] ,
    tx_done_lane3_r,
    ready_det,
    ready_det_r_reg);
  output reset;
  output [0:0]SR;
  output [0:0]stg5_reg_0;
  output [0:0]stg5_reg_1;
  output [0:0]stg5_reg_2;
  output [0:0]stg5_reg_3;
  output [0:0]stg5_reg_4;
  output [0:0]stg5_reg_5;
  output [0:0]stg5_reg_6;
  output stg5_reg_7;
  input RESET;
  input init_clk;
  input [4:0]Q;
  input tx_done;
  input drprdy_out_5;
  input \s_axi_rdata_reg[0] ;
  input tx_done_r;
  input [3:0]\drpaddr_in_lane1_reg[0] ;
  input tx_done_lane1;
  input drprdy_out_lane1;
  input \s_axi_rdata_lane1_reg[15] ;
  input tx_done_lane1_r;
  input [3:0]\drpaddr_in_lane2_reg[0] ;
  input tx_done_lane2;
  input drprdy_out_lane2;
  input \s_axi_rdata_lane2_reg[15] ;
  input tx_done_lane2_r;
  input [3:0]\drpaddr_in_lane3_reg[0] ;
  input tx_done_lane3;
  input drprdy_out_lane3;
  input \s_axi_rdata_lane3_reg[15] ;
  input tx_done_lane3_r;
  input ready_det;
  input ready_det_r_reg;

  wire [4:0]Q;
  wire RESET;
  wire [0:0]SR;
  wire [3:0]\drpaddr_in_lane1_reg[0] ;
  wire [3:0]\drpaddr_in_lane2_reg[0] ;
  wire [3:0]\drpaddr_in_lane3_reg[0] ;
  wire drprdy_out_5;
  wire drprdy_out_lane1;
  wire drprdy_out_lane2;
  wire drprdy_out_lane3;
  wire init_clk;
  wire ready_det;
  wire ready_det_r_reg;
  wire reset;
  wire \s_axi_rdata_lane1_reg[15] ;
  wire \s_axi_rdata_lane2_reg[15] ;
  wire \s_axi_rdata_lane3_reg[15] ;
  wire \s_axi_rdata_reg[0] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire [0:0]stg5_reg_0;
  wire [0:0]stg5_reg_1;
  wire [0:0]stg5_reg_2;
  wire [0:0]stg5_reg_3;
  wire [0:0]stg5_reg_4;
  wire [0:0]stg5_reg_5;
  wire [0:0]stg5_reg_6;
  wire stg5_reg_7;
  wire tx_done;
  wire tx_done_lane1;
  wire tx_done_lane1_r;
  wire tx_done_lane2;
  wire tx_done_lane2_r;
  wire tx_done_lane3;
  wire tx_done_lane3_r;
  wire tx_done_r;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAA)) 
    \drpaddr_in[9]_i_1 
       (.I0(reset),
        .I1(Q[3]),
        .I2(tx_done),
        .I3(Q[1]),
        .I4(Q[4]),
        .I5(Q[2]),
        .O(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAA)) 
    \drpaddr_in_lane1[9]_i_1 
       (.I0(reset),
        .I1(\drpaddr_in_lane1_reg[0] [2]),
        .I2(tx_done_lane1),
        .I3(\drpaddr_in_lane1_reg[0] [0]),
        .I4(\drpaddr_in_lane1_reg[0] [3]),
        .I5(\drpaddr_in_lane1_reg[0] [1]),
        .O(stg5_reg_1));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAA)) 
    \drpaddr_in_lane2[9]_i_1 
       (.I0(reset),
        .I1(\drpaddr_in_lane2_reg[0] [2]),
        .I2(tx_done_lane2),
        .I3(\drpaddr_in_lane2_reg[0] [0]),
        .I4(\drpaddr_in_lane2_reg[0] [3]),
        .I5(\drpaddr_in_lane2_reg[0] [1]),
        .O(stg5_reg_3));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAABAAA)) 
    \drpaddr_in_lane3[9]_i_1 
       (.I0(reset),
        .I1(\drpaddr_in_lane3_reg[0] [2]),
        .I2(tx_done_lane3),
        .I3(\drpaddr_in_lane3_reg[0] [0]),
        .I4(\drpaddr_in_lane3_reg[0] [3]),
        .I5(\drpaddr_in_lane3_reg[0] [1]),
        .O(stg5_reg_5));
  LUT6 #(
    .INIT(64'h2222220322222200)) 
    ready_det_r_i_1
       (.I0(ready_det),
        .I1(reset),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(ready_det_r_reg),
        .O(stg5_reg_7));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \s_axi_rdata[15]_i_1 
       (.I0(reset),
        .I1(drprdy_out_5),
        .I2(\s_axi_rdata_reg[0] ),
        .I3(tx_done_r),
        .I4(tx_done),
        .O(stg5_reg_0));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \s_axi_rdata_lane1[15]_i_1 
       (.I0(reset),
        .I1(drprdy_out_lane1),
        .I2(\s_axi_rdata_lane1_reg[15] ),
        .I3(tx_done_lane1_r),
        .I4(tx_done_lane1),
        .O(stg5_reg_2));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \s_axi_rdata_lane2[15]_i_1 
       (.I0(reset),
        .I1(drprdy_out_lane2),
        .I2(\s_axi_rdata_lane2_reg[15] ),
        .I3(tx_done_lane2_r),
        .I4(tx_done_lane2),
        .O(stg5_reg_4));
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \s_axi_rdata_lane3[15]_i_1 
       (.I0(reset),
        .I1(drprdy_out_lane3),
        .I2(\s_axi_rdata_lane3_reg[15] ),
        .I3(tx_done_lane3_r),
        .I4(tx_done_lane3),
        .O(stg5_reg_6));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(reset),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync_8
   (rst_pma_init_usrclk,
    stg5_reg_0,
    TX_HEADER_1_reg,
    RESET,
    user_clk,
    TXHEADER_IN_LANE3,
    txdatavalid_symgen_i_lane3,
    gen_cc_i,
    GEN_CH_BOND,
    TX_HEADER_1_reg_0);
  output rst_pma_init_usrclk;
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  input RESET;
  input user_clk;
  input [1:0]TXHEADER_IN_LANE3;
  input txdatavalid_symgen_i_lane3;
  input [0:0]gen_cc_i;
  input [0:0]GEN_CH_BOND;
  input TX_HEADER_1_reg_0;

  wire [0:0]GEN_CH_BOND;
  wire RESET;
  wire [1:0]TXHEADER_IN_LANE3;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire rst_pma_init_usrclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i_lane3;
  wire user_clk;

  LUT6 #(
    .INIT(64'h0404040404040454)) 
    TX_HEADER_0_i_1__2
       (.I0(rst_pma_init_usrclk),
        .I1(TXHEADER_IN_LANE3[0]),
        .I2(txdatavalid_symgen_i_lane3),
        .I3(gen_cc_i),
        .I4(GEN_CH_BOND),
        .I5(TX_HEADER_1_reg_0),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'h00000000EEEEEEE2)) 
    TX_HEADER_1_i_1__2
       (.I0(TXHEADER_IN_LANE3[1]),
        .I1(txdatavalid_symgen_i_lane3),
        .I2(TX_HEADER_1_reg_0),
        .I3(GEN_CH_BOND),
        .I4(gen_cc_i),
        .I5(rst_pma_init_usrclk),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(RESET),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(rst_pma_init_usrclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0
   (stg3_reg_0,
    out,
    user_clk);
  output stg3_reg_0;
  input out;
  input user_clk;

  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire user_clk;

  assign stg3_reg_0 = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_46
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_47
   (in0,
    out,
    user_clk,
    FSM_RESETDONE_j_reg);
  output in0;
  input out;
  input user_clk;
  input FSM_RESETDONE_j_reg;

  wire FSM_RESETDONE_j_reg;
  wire in0;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire user_clk;

  LUT2 #(
    .INIT(4'h8)) 
    prmry_in_inferred_i_1__0
       (.I0(stg3),
        .I1(FSM_RESETDONE_j_reg),
        .O(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized0_48
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1
   (E,
    in0,
    init_clk,
    Q,
    \FSM_onehot_cdr_reset_fsm_r_reg[0] );
  output [0:0]E;
  input in0;
  input init_clk;
  input [2:0]Q;
  input \FSM_onehot_cdr_reset_fsm_r_reg[0] ;

  wire [0:0]E;
  wire \FSM_onehot_cdr_reset_fsm_r_reg[0] ;
  wire [2:0]Q;
  wire blocksync_all_lanes_instableclk;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_2 
       (.I0(Q[1]),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg[0] ),
        .I2(blocksync_all_lanes_instableclk),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(blocksync_all_lanes_instableclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_49
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire allow_block_sync_propagation_inrxclk;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT1 #(
    .INIT(2'h1)) 
    rxlossofsync_out_q_i_1
       (.I0(allow_block_sync_propagation_inrxclk),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(allow_block_sync_propagation_inrxclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_50
   (fsm_resetdone_to_new_gtx_rx_comb,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output fsm_resetdone_to_new_gtx_rx_comb;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_new_gtx_rx_comb),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_51
   (fsm_resetdone_initclk,
    SR,
    in0,
    init_clk,
    \hard_err_cntr_r_reg[7] ,
    reset_initclk,
    out,
    rst_drp);
  output fsm_resetdone_initclk;
  output [0:0]SR;
  input in0;
  input init_clk;
  input \hard_err_cntr_r_reg[7] ;
  input reset_initclk;
  input out;
  input rst_drp;

  wire [0:0]SR;
  wire fsm_resetdone_initclk;
  wire \hard_err_cntr_r_reg[7] ;
  wire in0;
  wire init_clk;
  wire out;
  wire reset_initclk;
  wire rst_drp;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT5 #(
    .INIT(32'hFFFFAAFB)) 
    \hard_err_cntr_r[7]_i_1 
       (.I0(\hard_err_cntr_r_reg[7] ),
        .I1(fsm_resetdone_initclk),
        .I2(reset_initclk),
        .I3(out),
        .I4(rst_drp),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_52
   (SR,
    in0,
    user_clk);
  output [0:0]SR;
  input in0;
  input user_clk;

  wire [0:0]SR;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SR),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_53
   (reset_initclk,
    stg5_reg_0,
    stg5_reg_1,
    stg5_reg_2,
    stg5_reg_3,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    init_clk,
    rst_drp,
    out,
    fsm_resetdone_initclk,
    \count_for_reset_r_reg[23] ,
    valid_btf_detect_dlyd1,
    valid_btf_detect_dlyd1_0,
    valid_btf_detect_dlyd1_1,
    valid_btf_detect_dlyd1_2);
  output reset_initclk;
  output stg5_reg_0;
  output stg5_reg_1;
  output stg5_reg_2;
  output stg5_reg_3;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input init_clk;
  input rst_drp;
  input out;
  input fsm_resetdone_initclk;
  input \count_for_reset_r_reg[23] ;
  input valid_btf_detect_dlyd1;
  input valid_btf_detect_dlyd1_0;
  input valid_btf_detect_dlyd1_1;
  input valid_btf_detect_dlyd1_2;

  wire \count_for_reset_r_reg[23] ;
  wire fsm_resetdone_initclk;
  wire init_clk;
  wire out;
  wire reset_initclk;
  wire rst_drp;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_2;
  wire stg5_reg_3;
  wire valid_btf_detect_dlyd1;
  wire valid_btf_detect_dlyd1_0;
  wire valid_btf_detect_dlyd1_1;
  wire valid_btf_detect_dlyd1_2;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1 
       (.I0(rst_drp),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23] ),
        .I5(valid_btf_detect_dlyd1),
        .O(stg5_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__0 
       (.I0(rst_drp),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23] ),
        .I5(valid_btf_detect_dlyd1_0),
        .O(stg5_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__1 
       (.I0(rst_drp),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23] ),
        .I5(valid_btf_detect_dlyd1_1),
        .O(stg5_reg_2));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__2 
       (.I0(rst_drp),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23] ),
        .I5(valid_btf_detect_dlyd1_2),
        .O(stg5_reg_3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(reset_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_54
   (fsm_resetdone_to_rxreset_in,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output fsm_resetdone_to_rxreset_in;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire fsm_resetdone_to_rxreset_in;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_rxreset_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_55
   (in0,
    E,
    init_clk);
  output in0;
  input [0:0]E;
  input init_clk;

  wire [0:0]E;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(E),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_57
   (stg5_reg_0,
    in0,
    user_clk);
  output stg5_reg_0;
  input in0;
  input user_clk;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_58
   (cbcc_only_reset_rd_clk,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk);
  output cbcc_only_reset_rd_clk;
  input [0:0]stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;

  wire cbcc_only_reset_rd_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire [0:0]stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(cbcc_only_reset_rd_clk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_59
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;

  wire fifo_reset_wr_sync3;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT2 #(
    .INIT(4'hE)) 
    prmry_in_inferred_i_1
       (.I0(fifo_reset_wr_sync3),
        .I1(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fifo_reset_wr_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_60
   (stg3_reg_0,
    user_clk,
    in0);
  output stg3_reg_0;
  input user_clk;
  input in0;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire user_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_rd_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(user_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_61
   (stg3_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    in0);
  output stg3_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input in0;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_wr_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_62
   (stg5,
    rd_stg1_reg,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    user_clk,
    rd_stg1);
  output stg5;
  output rd_stg1_reg;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input user_clk;
  input rd_stg1;

  wire rd_stg1;
  wire rd_stg1_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5;
  wire user_clk;

  LUT2 #(
    .INIT(4'hE)) 
    cbcc_reset_cbstg2_rd_clk_i_1
       (.I0(rd_stg1),
        .I1(stg5),
        .O(rd_stg1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_65
   (stg3_reg_0,
    init_clk,
    in0);
  output stg3_reg_0;
  input init_clk;
  input in0;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane3_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_69
   (stg3_reg_0,
    init_clk,
    in0);
  output stg3_reg_0;
  input init_clk;
  input in0;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane2_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_74
   (stg3_reg_0,
    init_clk,
    in0);
  output stg3_reg_0;
  input init_clk;
  input in0;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_lane1_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized1_85
   (stg3_reg_0,
    init_clk,
    in0);
  output stg3_reg_0;
  input init_clk;
  input in0;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/cbcc_gtx0_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized2
   (in0,
    gtwiz_userclk_rx_usrclk_out,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0);
  output in0;
  input gtwiz_userclk_rx_usrclk_out;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire stg10_reg_srl7_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_user_clk/stg10_reg_srl7 " *) 
  SRL16E #(
    .INIT(16'h007F)) 
    stg10_reg_srl7
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg10_reg_srl7_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg11_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg10_reg_srl7_n_0),
        .Q(in0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized3
   (fifo_reset_comb_user_clk_int,
    dbg_srst_assert0,
    gtwiz_userclk_rx_usrclk_out,
    in0,
    dbg_srst_assert_reg);
  output fifo_reset_comb_user_clk_int;
  output dbg_srst_assert0;
  input gtwiz_userclk_rx_usrclk_out;
  input in0;
  input dbg_srst_assert_reg;

  wire dbg_srst_assert0;
  wire dbg_srst_assert_reg;
  wire fifo_reset_comb_user_clk_int;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg20_reg_srl17_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire NLW_stg20_reg_srl17_Q31_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    dbg_srst_assert_i_1
       (.I0(dbg_srst_assert_reg),
        .I1(fifo_reset_comb_user_clk_int),
        .O(dbg_srst_assert0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_comb_user_clk_in/stg20_reg_srl17 " *) 
  SRLC32E #(
    .INIT(32'h0001FFFF)) 
    stg20_reg_srl17
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg20_reg_srl17_n_0),
        .Q31(NLW_stg20_reg_srl17_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg21_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg20_reg_srl17_n_0),
        .Q(fifo_reset_comb_user_clk_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized4
   (cbcc_fifo_reset_to_fifo_wr_clk,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg,
    gtwiz_userclk_rx_usrclk_out,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd,
    in0,
    cbc_wr_if_reset_reg);
  output cbcc_fifo_reset_to_fifo_wr_clk;
  output cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  input gtwiz_userclk_rx_usrclk_out;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  input in0;
  input cbc_wr_if_reset_reg;

  wire cbc_wr_if_reset_reg;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg8_reg_srl5_n_0;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_wr_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_wr_clk),
        .I2(in0),
        .I3(cbc_wr_if_reset_reg),
        .O(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_wr_clk/stg8_reg_srl5 " *) 
  SRL16E #(
    .INIT(16'h001F)) 
    stg8_reg_srl5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg8_reg_srl5_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg9_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg8_reg_srl5_n_0),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "aurora_64b66b_w256_1375Gbps_rst_sync" *) 
module aurora_64b66b_w256_1375Gbps_rst_sync__parameterized5
   (cbcc_fifo_reset_to_fifo_rd_clk,
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg,
    user_clk,
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0,
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd,
    in0);
  output cbcc_fifo_reset_to_fifo_rd_clk;
  output cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg;
  input user_clk;
  input stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  input cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  input in0;

  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to;
  wire stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg30_reg_srl27_n_0;
  wire user_clk;
  wire NLW_stg30_reg_srl27_Q31_UNCONNECTED;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_rd_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_rd_clk),
        .I2(in0),
        .I3(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .O(cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to_reg_0),
        .Q(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg1_aurora_64b66b_w256_1375Gbps_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* srl_name = "inst/\aurora_64b66b_w256_1375Gbps_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_rd_clk/stg30_reg_srl27 " *) 
  SRLC32E #(
    .INIT(32'h07FFFFFF)) 
    stg30_reg_srl27
       (.A({1'b1,1'b1,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(user_clk),
        .D(stg3),
        .Q(stg30_reg_srl27_n_0),
        .Q31(NLW_stg30_reg_srl27_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg31_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg30_reg_srl27_n_0),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(user_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* P_CONTENTS = "0" *) (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
(* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) (* P_USRCLK2_DIV = "3'b000" *) (* P_USRCLK2_INT_DIV = "0" *) 
(* P_USRCLK_DIV = "3'b000" *) (* P_USRCLK_INT_DIV = "0" *) (* keep_hierarchy = "soft" *) 
module aurora_64b66b_w256_1375Gbps_ultrascale_rx_userclk
   (gtwiz_reset_clk_freerun_in,
    gtwiz_userclk_rx_srcclk_in,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    lopt,
    lopt_1,
    lopt_2);
  input gtwiz_reset_clk_freerun_in;
  input gtwiz_userclk_rx_srcclk_in;
  input gtwiz_userclk_rx_reset_in;
  output gtwiz_userclk_rx_usrclk_out;
  output gtwiz_userclk_rx_usrclk2_out;
  output gtwiz_userclk_rx_active_out;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_w256_1375Gbps_cdc_to ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in;
  wire gtwiz_userclk_rx_srcclk_in;
  wire gtwiz_userclk_rx_usrclk2_out;
  wire \^lopt ;
  wire \^lopt_1 ;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign gtwiz_userclk_rx_usrclk_out = gtwiz_userclk_rx_usrclk2_out;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    \gen_gtwiz_userclk_rx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(gtwiz_userclk_rx_srcclk_in),
        .O(gtwiz_userclk_rx_usrclk2_out));
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_out_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ),
        .Q(gtwiz_userclk_rx_active_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_w256_1375Gbps_cdc_to_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(1'b1),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_w256_1375Gbps_cdc_to ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_aurora_64b66b_w256_1375Gbps_cdc_to ),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
uS/dIpDTldS7400uyLsI6bJxO+WmZJrKXsU8qB+wpyI+d4PWZVO6Cm0qMQFNUZb63p6zCI5fvnQy
SxjaSP1nCte/oQZc55w1rQbTqy54T9kryRoH26nDjSBVZvJ8hffw7NONwiKrqeB6I7HJKX5RKw73
wIJxNNH7BCiCEtRLIxc=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
L7q2sHnC0pU7uHs8shPm9nAcqyU+hUFnNkd6BPHl+ureEVBUvubWhEbLRLiFFJveufcmAfAXTzae
tWbKcVVt/zKzWEtv0onUXoSEgyS4+QaTAFeCPHR2bbnlP0aCCG2SYmC1dv16cFoAk/NLitClNXAv
h+UBGzod+suWv55DaNHeHtSZ/YLZxHdn/R47atTiQM+A1TWQkpa3faF/L9ANZISSe/OR6mPfQ/Zk
4AptHNmW/pWpd3JL4e06iK9P6ZLLRqSMR9mu6AFIeWYBVz+KkxgSIWgQO7/AHBUFjlIiMFhyQR5Y
UC1fo4CPZX7fMdUPwQiC+eZ7UtxMAUzovIzwEw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
KZhqqPnSEvcItoYRHrFT/Wt2IEXHe7pq5lmAOfYqAaaoY8mpIG3Kd8B/C4s9kNUbktSOX78NnnrJ
brxcu/1EAlI9itnDH8ahxble+2Nt/Lj3dQ1/wbDy3HOKlwBVuOvVDArOpgho+BAnoLUZXrpsw8EI
FSIPKmsETVzLzZDw6m0=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
WZbb0PsQl1vn7dY/rZzI8ZGsAP5Ad4C/d2cBXS49yTbQqKMTY7r1YHlrjBGteY6wrhKVmM92u/3/
/UJWPyNVqwcsrRAHhR/Lp3Mg87NIhYzETdNAOpnc7rWC9ieIeEiyPM734sI7QtAMVrZxXoUXnCjp
fjQhaMqv+HsuEWpFhDail+v8Ftwmr5xP1JSpqPfxLz5a6+q8/lTxRGeWZokM7vP2YFKg7L7Yoowh
gOm5w3JhR2fXZsksWxfQk7885JzsI4yZOrU8dY667YWWhkjZE/SKo2TMksiasL22T6CpyUbMwQm2
DJ+cMJbr9/8csBEifIsopc4V9zFbSU9eoxlqZA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Adid/GOKDljgmM7UpkmD6EVL+5rt6bnWK9P8RIZiI3EkLW96rM6eCs7jkLeKnEW/WPGRhlZrGw8p
C7Ni27oibJKJT5xUBJDymbO+yheaaTI0GaeDMIzks860gYA3qdvTPxTBotaOg6MIpnYd070NhTod
Qq5XNnxLuF7/s5rAZANJHyRQKwu4gVBfs5SU2FSjF546M5FvN7BX6G7B76ALW6vKqGyKxwoHkc52
Bm8/jGTxJ6zbwn2v31NEfjO6nM5m6yYwY0476QLXWI6+7/ILkSvDVTt7B9HpcaRg3n3T4AEQDMyX
8bBPgm0qFbWZue0dlr9ljYOl0dgwaO8G9uYe9g==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
tq2b3cw7fnIOEbRUxnQIgAjXwRE3aRwj2IBVmS0S998fvCLPMUtm5MVXAqk0TwuEzKG3br/oRham
Oe5KAx6FauTTVpRhLH5RY3832M9OVTSW/bNq12/dXnJyOfYS76FQtd9HNFrSkVPMONGMD0ZQXRic
Yr0MaeflUHQmU6QUCt5OJkbG4F8qJLMWJsg03K7dNzDfkvev3QVf72bmHTm4SF6/cs94NXQl/NPr
CzQorTZ5BgCzVAui7mM0eu3mu6OPkecNQ3Ih+1zsJuGkAHWC7aFgh7ii6xEj1upD365TzJUF1ZCe
0jZj/Ub1m5OgZMbjbLYn/Fh5nqi+fAmL7jDAHQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
S+EkimFGNL3D/SKyjUVYhIZzRbEoTqlnv2kHD0e4rYYCt/O4IYecNmch6HRfd2U/WSZPkAoJ+xa7
GKQSo51PL81HSvqURo2CxltObyTYiklnzGtbdWUMpOSCjDe8LpQjUNwhSksWjZjUQypyYXS4hbCR
VJy96ow8zi5m1XMzoLaVMDYoJYLtOVh7eaL7InaIL5gXJIHWkhoKYh9bR/O5HE6YTsgZl+Ofmx/3
0mQ/bL5ZKSY6gBEUD8f5+SoMIjfXrGkjMj1+fEAIv0fO/wKyJQMKnDOgWMvcUw56dOJ7FWkbNvbC
kzquuXhk5LuzZfXWmhyDSyMGBWK1wN7iyMKMUg==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
LQ4hjhkD/G9XJd+gVR5WF2vSll/p8/psR+nHjJ5/DHrtiRqVWFVc7B7T9XZuJBmTqrQV4iSBYWDo
zNaVdq26mGk6TTNo11Dcici0hEwC2Bg66k9kr1if+0iZo3VtB/ZuEOj2w7euhFo3ja1OovnDXxf0
8t4WMUK68mfUiMuKgVcbOFhm3Jdnbnz4u7SggH2/rkfOS8jbon9q9n0EXlK23tz2NzDLCS8B7ERx
dYvwqwBiySKoP1/EcfSwFNIWpr6p7kbRo7iM/JbP6UwBbkDHgE8HGS+3lTXIUXsmGmsx6EDSr/gY
i7lHwZTmDuhuIEJaf6gTJgtqMSxVyDVsrnba5umKgV8z5OOWUkM3FjVWIXOG7Ef2iKFCzBPmp2Lk
8XbrXk/bb9H/jr4UR3hgdbizISTysLTJd4n5uyeDhDgkxAc+1FudacmuZyBlA/VTR1f0i9+cOgLI
kdqbo1u5hQwnMphluBKjdTA3nZ8VnpDbdq5R7hIF61tIrUfdjwQw02je

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
JzhYMwmYowESMI19XNb+BEFcZw3IXZpwZO3gzrVg2CdSjbAR3tiIVbPHI5Rgu59SH7H8abU59Atd
+nrPiG37rmU6CD+cMV2mU8SHfCDLYsnrbd9YLZ1GEfqTovR0NZHQTHj+7c5dP7nqm30C/kg1adqd
DOV7F128PbmM5U45xRxOJKUgS/Waz0gvmYKKJejkiyFPOgGbN5f844mtysoOckLrAU/BzRs8SB9G
zzisK/a8hM5af8/opZ64TGhH44Npzy8kcP+gI+k+U0oF0SOqW7CjadKaJhr2oDkTScVVCbBqFEjc
2gH862vcCfZu5Cd0Sp2ALgoqVxA+91lAIHJp3Q==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ooNS+XjsaWLRgvcrNWVpR3ihKtIJNT1oT4D5ivD5mCfw+4/SAyx9P4cmdvOotLNPE1eqvx1Smd9Q
LDImL/GqS7Cq3KEUtEBbvQAOp+0SjiW74cC6nyOqCA8NQcn5JM+vUzGSsORPnM5qP96axGmyEvSi
p3uL9Gmx+3S3KUJuAzfuqZwJD7gdcA0Zv3hPRl+xhx8qFtkPCfT5uj7wpFVaaJ8tTl1SDd2uRUIx
rgVgV+oERCg71oEVN7PqPK1y7pFVgSW9uhP1wuvO/EsbyrLYZV6HtBn3tJDcxhTsQWrrou3F1kFQ
cFnl9tcL1wXJo/F3wvsbYM1W0UPHv69XAsEUhg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
d8YRbu+fllaHlNDedyRNDRtn9CBoVbO9fZCdhKpy0yf9dL6A08sFZuWVtVGljxF/L9volGB0IRjl
KbH2N/JBQA+tZWuh75kK5pjveAAKLVACS8A+Jmt/mrxzlolPWsruJ8o1Owrjq5tGWspdqmeDGS7U
/Ww7cN0C9ExUj4cjRDcKaqDS9MGwRtx4LfcQbQbRDZBk+cyRaWCchvmhjoum4uTizvqMq2u4oSym
t2zyKFjAuMO4zC2LbPbODeumm+FhlOKAHRyEBKA+VQeLB4apkMYparuD5AFWAuVvdWEbGq/L4cJ7
pEGz+6Hqi68CfF/4tMNiyHveP1lxnyAaiW6Kjg==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 223024)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
